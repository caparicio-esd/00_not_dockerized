 INFO [2021-07-20 13:49:42,145] ({main} ZeppelinConfiguration.java[create]:172) - Load configuration from file:/opt/zeppelin/conf/zeppelin-site.xml
 INFO [2021-07-20 13:49:42,222] ({main} ZeppelinConfiguration.java[create]:180) - Server Host: 0.0.0.0
 INFO [2021-07-20 13:49:42,223] ({main} ZeppelinConfiguration.java[create]:182) - Server Port: 8080
 INFO [2021-07-20 13:49:42,224] ({main} ZeppelinConfiguration.java[create]:186) - Context Path: /
 INFO [2021-07-20 13:49:42,225] ({main} ZeppelinConfiguration.java[create]:187) - Zeppelin Version: 0.9.0
 INFO [2021-07-20 13:49:42,247] ({main} Log.java[initialized]:169) - Logging initialized @583ms to org.eclipse.jetty.util.log.Slf4jLog
 WARN [2021-07-20 13:49:42,612] ({main} ZeppelinConfiguration.java[getConfigFSDir]:694) - zeppelin.config.fs.dir is not specified, fall back to local conf directory zeppelin.conf.dir
 WARN [2021-07-20 13:49:42,613] ({main} ZeppelinConfiguration.java[getConfigFSDir]:694) - zeppelin.config.fs.dir is not specified, fall back to local conf directory zeppelin.conf.dir
 WARN [2021-07-20 13:49:42,614] ({main} ZeppelinConfiguration.java[getConfigFSDir]:694) - zeppelin.config.fs.dir is not specified, fall back to local conf directory zeppelin.conf.dir
 WARN [2021-07-20 13:49:42,652] ({main} LocalConfigStorage.java[loadCredentials]:88) - Credential file /opt/zeppelin/conf/credentials.json is not existed
 INFO [2021-07-20 13:49:42,695] ({ImmediateThread-1626788982607} PluginManager.java[loadNotebookRepo]:78) - Loading NotebookRepo Plugin: org.apache.zeppelin.notebook.repo.MongoNotebookRepo
 INFO [2021-07-20 13:49:42,735] ({main} ZeppelinServer.java[setupWebAppContext]:575) - warPath is: /opt/zeppelin/zeppelin-web-0.9.0.war
 INFO [2021-07-20 13:49:42,736] ({main} ZeppelinServer.java[setupWebAppContext]:588) - ZeppelinServer Webapp path: /opt/zeppelin/webapps
 INFO [2021-07-20 13:49:42,776] ({main} ZeppelinServer.java[setupWebAppContext]:575) - warPath is: /opt/zeppelin/zeppelin-web-angular-0.9.0.war
 INFO [2021-07-20 13:49:42,778] ({main} ZeppelinServer.java[setupWebAppContext]:588) - ZeppelinServer Webapp path: /opt/zeppelin/webapps/next
 INFO [2021-07-20 13:49:42,827] ({main} NotebookServer.java[<init>]:157) - NotebookServer instantiated: org.apache.zeppelin.socket.NotebookServer@209da20d
 INFO [2021-07-20 13:49:42,830] ({main} NotebookServer.java[setNotebook]:168) - Injected NotebookProvider
 INFO [2021-07-20 13:49:42,831] ({main} NotebookServer.java[setServiceLocator]:162) - Injected ServiceLocator: ServiceLocatorImpl(shared-locator,0,1279309678)
 INFO [2021-07-20 13:49:42,832] ({main} NotebookServer.java[setNotebookService]:175) - Injected NotebookServiceProvider
 INFO [2021-07-20 13:49:42,833] ({main} NotebookServer.java[setAuthorizationServiceProvider]:182) - Injected NotebookAuthorizationServiceProvider
 INFO [2021-07-20 13:49:42,834] ({main} NotebookServer.java[setConnectionManagerProvider]:188) - Injected ConnectionManagerProvider
 INFO [2021-07-20 13:49:42,836] ({main} ZeppelinServer.java[setupClusterManagerServer]:465) - Cluster mode is disabled
 INFO [2021-07-20 13:49:42,837] ({main} ZeppelinServer.java[main]:249) - Starting zeppelin server
 INFO [2021-07-20 13:49:42,839] ({main} Server.java[doStart]:360) - jetty-9.4.31.v20200723; built: 2020-07-23T17:57:36.812Z; git: 450ba27947e13e66baa8cd1ce7e85a4461cacc1d; jvm 1.8.0_282-8u282-b08-0ubuntu1~20.04-b08
 INFO [2021-07-20 13:49:42,974] ({main} StandardDescriptorProcessor.java[visitServlet]:276) - NO JSP Support for /, did not find org.eclipse.jetty.jsp.JettyJspServlet
 INFO [2021-07-20 13:49:42,988] ({main} DefaultSessionIdManager.java[doStart]:334) - DefaultSessionIdManager workerName=node0
 INFO [2021-07-20 13:49:42,989] ({main} DefaultSessionIdManager.java[doStart]:339) - No SessionScavenger set, using defaults
 INFO [2021-07-20 13:49:42,993] ({main} HouseKeeper.java[startScavenging]:140) - node0 Scavenging every 600000ms
 INFO [2021-07-20 13:49:43,307] ({ImmediateThread-1626788982607} SLF4JLogger.java[info]:71) - Cluster created with settings {hosts=[mongo:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
 INFO [2021-07-20 13:49:43,523] ({ImmediateThread-1626788982607} VFSNotebookRepo.java[setNotebookDirectory]:69) - Using notebookDir: /opt/zeppelin/notebook
 INFO [2021-07-20 13:49:43,699] ({cluster-ClusterId{value='60f6d4772ab79c0007bf2553', description='null'}-mongo:27017} SLF4JLogger.java[info]:71) - Opened connection [connectionId{localValue:1, serverValue:13}] to mongo:27017
 INFO [2021-07-20 13:49:43,706] ({cluster-ClusterId{value='60f6d4772ab79c0007bf2553', description='null'}-mongo:27017} SLF4JLogger.java[info]:71) - Monitor thread successfully connected to server with description ServerDescription{address=mongo:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[5, 0, 0]}, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, roundTripTimeNanos=2175422}
 INFO [2021-07-20 13:49:43,867] ({ImmediateThread-1626788982607} SLF4JLogger.java[info]:71) - Opened connection [connectionId{localValue:2, serverValue:14}] to mongo:27017
 WARN [2021-07-20 13:49:44,064] ({ImmediateThread-1626788982607} MongoNotebookRepo.java[saveOrIgnore]:184) - ignore error when insert note '/Flink Tutorial/6. Batch ETL': Bulk write operation error on server mongo:27017. Write errors: [BulkWriteError{index=0, code=11000, message='E11000 duplicate key error collection: zeppelin.notes index: _id_ dup key: { _id: "2EW19CSPA" }', details={ }}]. 
 WARN [2021-07-20 13:49:44,144] ({ImmediateThread-1626788982607} MongoNotebookRepo.java[saveOrIgnore]:184) - ignore error when insert note '/Flink Tutorial/1. Flink Basics': Bulk write operation error on server mongo:27017. Write errors: [BulkWriteError{index=0, code=11000, message='E11000 duplicate key error collection: zeppelin.notes index: _id_ dup key: { _id: "2F2YS7PCE" }', details={ }}]. 
 WARN [2021-07-20 13:49:44,233] ({ImmediateThread-1626788982607} MongoNotebookRepo.java[saveOrIgnore]:184) - ignore error when insert note '/Miscellaneous Tutorial/Using Mahout': Bulk write operation error on server mongo:27017. Write errors: [BulkWriteError{index=0, code=11000, message='E11000 duplicate key error collection: zeppelin.notes index: _id_ dup key: { _id: "2BYEZ5EVK" }', details={ }}]. 
 WARN [2021-07-20 13:49:44,346] ({ImmediateThread-1626788982607} MongoNotebookRepo.java[saveOrIgnore]:184) - ignore error when insert note '/Python Tutorial/1. IPython Basic': Bulk write operation error on server mongo:27017. Write errors: [BulkWriteError{index=0, code=11000, message='E11000 duplicate key error collection: zeppelin.notes index: _id_ dup key: { _id: "2EYDJKFFY" }', details={ }}]. 
 WARN [2021-07-20 13:49:44,456] ({ImmediateThread-1626788982607} MongoNotebookRepo.java[saveOrIgnore]:184) - ignore error when insert note '/Flink Tutorial/2. Three Essential Steps for Building Flink Job': Bulk write operation error on server mongo:27017. Write errors: [BulkWriteError{index=0, code=11000, message='E11000 duplicate key error collection: zeppelin.notes index: _id_ dup key: { _id: "2F7SKEHPA" }', details={ }}]. 
 WARN [2021-07-20 13:49:44,483] ({ImmediateThread-1626788982607} MongoNotebookRepo.java[saveOrIgnore]:184) - ignore error when insert note '/R Tutorial/2. Shiny App': Bulk write operation error on server mongo:27017. Write errors: [BulkWriteError{index=0, code=11000, message='E11000 duplicate key error collection: zeppelin.notes index: _id_ dup key: { _id: "2EZ66TM57" }', details={ }}]. 
 WARN [2021-07-20 13:49:44,526] ({ImmediateThread-1626788982607} MongoNotebookRepo.java[saveOrIgnore]:184) - ignore error when insert note '/Spark Tutorial/1. Spark Interpreter Introduction': Bulk write operation error on server mongo:27017. Write errors: [BulkWriteError{index=0, code=11000, message='E11000 duplicate key error collection: zeppelin.notes index: _id_ dup key: { _id: "2F8KN6TKK" }', details={ }}]. 
 WARN [2021-07-20 13:49:44,548] ({ImmediateThread-1626788982607} MongoNotebookRepo.java[saveOrIgnore]:184) - ignore error when insert note '/Flink Tutorial/5. Streaming Data Analytics': Bulk write operation error on server mongo:27017. Write errors: [BulkWriteError{index=0, code=11000, message='E11000 duplicate key error collection: zeppelin.notes index: _id_ dup key: { _id: "2EYT7Q6R8" }', details={ }}]. 
 WARN [2021-07-20 13:49:44,574] ({ImmediateThread-1626788982607} MongoNotebookRepo.java[saveOrIgnore]:184) - ignore error when insert note '/Miscellaneous Tutorial/Using Pig for querying data': Bulk write operation error on server mongo:27017. Write errors: [BulkWriteError{index=0, code=11000, message='E11000 duplicate key error collection: zeppelin.notes index: _id_ dup key: { _id: "2C57UKYWR" }', details={ }}]. 
 WARN [2021-07-20 13:49:44,622] ({ImmediateThread-1626788982607} MongoNotebookRepo.java[saveOrIgnore]:184) - ignore error when insert note '/Flink Tutorial/8. Logistic Regression (Alink)': Bulk write operation error on server mongo:27017. Write errors: [BulkWriteError{index=0, code=11000, message='E11000 duplicate key error collection: zeppelin.notes index: _id_ dup key: { _id: "2F4HJNWVN" }', details={ }}]. 
 WARN [2021-07-20 13:49:44,648] ({ImmediateThread-1626788982607} MongoNotebookRepo.java[saveOrIgnore]:184) - ignore error when insert note '/Flink Tutorial/4. Streaming ETL': Bulk write operation error on server mongo:27017. Write errors: [BulkWriteError{index=0, code=11000, message='E11000 duplicate key error collection: zeppelin.notes index: _id_ dup key: { _id: "2EYD56B9B" }', details={ }}]. 
 WARN [2021-07-20 13:49:44,667] ({ImmediateThread-1626788982607} MongoNotebookRepo.java[saveOrIgnore]:184) - ignore error when insert note '/Flink Tutorial/3. Flink Job Control Tutorial': Bulk write operation error on server mongo:27017. Write errors: [BulkWriteError{index=0, code=11000, message='E11000 duplicate key error collection: zeppelin.notes index: _id_ dup key: { _id: "2F5RKHCDV" }', details={ }}]. 
 WARN [2021-07-20 13:49:44,685] ({ImmediateThread-1626788982607} MongoNotebookRepo.java[saveOrIgnore]:184) - ignore error when insert note '/Spark Tutorial/7. Spark Delta Lake Tutorial': Bulk write operation error on server mongo:27017. Write errors: [BulkWriteError{index=0, code=11000, message='E11000 duplicate key error collection: zeppelin.notes index: _id_ dup key: { _id: "2F8VDBMMT" }', details={ }}]. 
 WARN [2021-07-20 13:49:44,746] ({ImmediateThread-1626788982607} MongoNotebookRepo.java[saveOrIgnore]:184) - ignore error when insert note '/Spark Tutorial/3. Spark SQL (PySpark)': Bulk write operation error on server mongo:27017. Write errors: [BulkWriteError{index=0, code=11000, message='E11000 duplicate key error collection: zeppelin.notes index: _id_ dup key: { _id: "2EWM84JXA" }', details={ }}]. 
 WARN [2021-07-20 13:49:44,798] ({ImmediateThread-1626788982607} MongoNotebookRepo.java[saveOrIgnore]:184) - ignore error when insert note '/Spark Tutorial/4. Spark MlLib': Bulk write operation error on server mongo:27017. Write errors: [BulkWriteError{index=0, code=11000, message='E11000 duplicate key error collection: zeppelin.notes index: _id_ dup key: { _id: "2EZFM3GJA" }', details={ }}]. 
 WARN [2021-07-20 13:49:44,872] ({ImmediateThread-1626788982607} MongoNotebookRepo.java[saveOrIgnore]:184) - ignore error when insert note '/Python Tutorial/3. Keras Binary Classification (IMDB)': Bulk write operation error on server mongo:27017. Write errors: [BulkWriteError{index=0, code=11000, message='E11000 duplicate key error collection: zeppelin.notes index: _id_ dup key: { _id: "2F2AVWJ77" }', details={ }}]. 
 WARN [2021-07-20 13:49:44,902] ({ImmediateThread-1626788982607} MongoNotebookRepo.java[saveOrIgnore]:184) - ignore error when insert note '/Flink Tutorial/7. Batch Data Analytics': Bulk write operation error on server mongo:27017. Write errors: [BulkWriteError{index=0, code=11000, message='E11000 duplicate key error collection: zeppelin.notes index: _id_ dup key: { _id: "2EZ9G3JJU" }', details={ }}]. 
 WARN [2021-07-20 13:49:45,174] ({ImmediateThread-1626788982607} MongoNotebookRepo.java[saveOrIgnore]:184) - ignore error when insert note '/Python Tutorial/2. IPython Visualization Tutorial': Bulk write operation error on server mongo:27017. Write errors: [BulkWriteError{index=0, code=11000, message='E11000 duplicate key error collection: zeppelin.notes index: _id_ dup key: { _id: "2F1S9ZY8Z" }', details={ }}]. 
 INFO [2021-07-20 13:49:45,190] ({main} ContextHandler.java[doStart]:860) - Started o.e.j.w.WebAppContext@3972a855{zeppelin-web,/,jar:file:///opt/zeppelin/zeppelin-web-0.9.0.war!/,AVAILABLE}{/opt/zeppelin/zeppelin-web-0.9.0.war}
 INFO [2021-07-20 13:49:45,219] ({main} StandardDescriptorProcessor.java[visitServlet]:276) - NO JSP Support for /next, did not find org.eclipse.jetty.jsp.JettyJspServlet
 WARN [2021-07-20 13:49:45,232] ({ImmediateThread-1626788982607} MongoNotebookRepo.java[saveOrIgnore]:184) - ignore error when insert note '/R Tutorial/1. R Basics': Bulk write operation error on server mongo:27017. Write errors: [BulkWriteError{index=0, code=11000, message='E11000 duplicate key error collection: zeppelin.notes index: _id_ dup key: { _id: "2BWJFTXKJ" }', details={ }}]. 
 WARN [2021-07-20 13:49:45,243] ({ImmediateThread-1626788982607} MongoNotebookRepo.java[saveOrIgnore]:184) - ignore error when insert note '/Spark Tutorial/6. SparkR Shiny App': Bulk write operation error on server mongo:27017. Write errors: [BulkWriteError{index=0, code=11000, message='E11000 duplicate key error collection: zeppelin.notes index: _id_ dup key: { _id: "2F1CHQ4TT" }', details={ }}]. 
 WARN [2021-07-20 13:49:45,301] ({ImmediateThread-1626788982607} MongoNotebookRepo.java[saveOrIgnore]:184) - ignore error when insert note '/Spark Tutorial/5. SparkR Basics': Bulk write operation error on server mongo:27017. Write errors: [BulkWriteError{index=0, code=11000, message='E11000 duplicate key error collection: zeppelin.notes index: _id_ dup key: { _id: "2BWJFTXKM" }', details={ }}]. 
 WARN [2021-07-20 13:49:45,325] ({ImmediateThread-1626788982607} MongoNotebookRepo.java[saveOrIgnore]:184) - ignore error when insert note '/Python Tutorial/4. Matplotlib (Python, PySpark)': Bulk write operation error on server mongo:27017. Write errors: [BulkWriteError{index=0, code=11000, message='E11000 duplicate key error collection: zeppelin.notes index: _id_ dup key: { _id: "2C2AUG798" }', details={ }}]. 
 WARN [2021-07-20 13:49:45,337] ({ImmediateThread-1626788982607} MongoNotebookRepo.java[saveOrIgnore]:184) - ignore error when insert note '/Spark Tutorial/2. Spark Basic Features': Bulk write operation error on server mongo:27017. Write errors: [BulkWriteError{index=0, code=11000, message='E11000 duplicate key error collection: zeppelin.notes index: _id_ dup key: { _id: "2A94M5J1Z" }', details={ }}]. 
 WARN [2021-07-20 13:49:45,359] ({ImmediateThread-1626788982607} MongoNotebookRepo.java[saveOrIgnore]:184) - ignore error when insert note '/Spark Tutorial/3. Spark SQL (Scala)': Bulk write operation error on server mongo:27017. Write errors: [BulkWriteError{index=0, code=11000, message='E11000 duplicate key error collection: zeppelin.notes index: _id_ dup key: { _id: "2EYUV26VR" }', details={ }}]. 
 INFO [2021-07-20 13:49:45,632] ({main} ContextHandler.java[doStart]:860) - Started o.e.j.w.WebAppContext@2e222612{zeppelin-web-angular,/next,jar:file:///opt/zeppelin/zeppelin-web-angular-0.9.0.war!/,AVAILABLE}{/opt/zeppelin/zeppelin-web-angular-0.9.0.war}
 INFO [2021-07-20 13:49:45,651] ({main} AbstractConnector.java[doStart]:331) - Started ServerConnector@44c8afef{HTTP/1.1, (http/1.1)}{0.0.0.0:8080}
 INFO [2021-07-20 13:49:45,652] ({main} Server.java[doStart]:400) - Started @3990ms
 INFO [2021-07-20 13:49:50,653] ({main} ZeppelinServer.java[main]:263) - Done, zeppelin server started
 INFO [2021-07-20 13:49:50,680] ({main} LocalConfigStorage.java[loadNotebookAuthorization]:80) - Load notebook authorization from file: /opt/zeppelin/conf/notebook-authorization.json
 INFO [2021-07-20 13:49:50,811] ({Thread-12} RemoteInterpreterEventServer.java[run]:105) - InterpreterEventServer is starting at 172.18.0.4:37753
 INFO [2021-07-20 13:49:51,310] ({main} RemoteInterpreterEventServer.java[start]:133) - RemoteInterpreterEventServer is started
 INFO [2021-07-20 13:49:51,315] ({main} InterpreterSettingManager.java[<init>]:197) - Using RecoveryStorage: org.apache.zeppelin.interpreter.recovery.NullRecoveryStorage
 INFO [2021-07-20 13:49:51,344] ({main} InterpreterSettingManager.java[registerInterpreterSetting]:540) - Register InterpreterSettingTemplate: file
 INFO [2021-07-20 13:49:51,345] ({main} InterpreterSettingManager.java[registerInterpreterSetting]:540) - Register InterpreterSettingTemplate: alluxio
 INFO [2021-07-20 13:49:51,347] ({main} InterpreterSettingManager.java[registerInterpreterSetting]:540) - Register InterpreterSettingTemplate: lens
 INFO [2021-07-20 13:49:51,348] ({main} InterpreterSettingManager.java[registerInterpreterSetting]:540) - Register InterpreterSettingTemplate: jdbc
 INFO [2021-07-20 13:49:51,349] ({main} InterpreterSettingManager.java[registerInterpreterSetting]:540) - Register InterpreterSettingTemplate: bigquery
 INFO [2021-07-20 13:49:51,351] ({main} InterpreterSettingManager.java[registerInterpreterSetting]:540) - Register InterpreterSettingTemplate: scalding
 INFO [2021-07-20 13:49:51,353] ({main} InterpreterSettingManager.java[registerInterpreterSetting]:540) - Register InterpreterSettingTemplate: cassandra
 INFO [2021-07-20 13:49:51,355] ({main} InterpreterSettingManager.java[registerInterpreterSetting]:540) - Register InterpreterSettingTemplate: mongodb
 INFO [2021-07-20 13:49:51,356] ({main} InterpreterSettingManager.java[registerInterpreterSetting]:540) - Register InterpreterSettingTemplate: kylin
 INFO [2021-07-20 13:49:51,357] ({main} InterpreterSettingManager.java[registerInterpreterSetting]:540) - Register InterpreterSettingTemplate: jupyter
 INFO [2021-07-20 13:49:51,358] ({main} InterpreterSettingManager.java[registerInterpreterSetting]:540) - Register InterpreterSettingTemplate: sh
 INFO [2021-07-20 13:49:51,360] ({main} InterpreterSettingManager.java[registerInterpreterSetting]:540) - Register InterpreterSettingTemplate: angular
 INFO [2021-07-20 13:49:51,361] ({main} InterpreterSettingManager.java[registerInterpreterSetting]:540) - Register InterpreterSettingTemplate: ksql
 INFO [2021-07-20 13:49:51,362] ({main} InterpreterSettingManager.java[registerInterpreterSetting]:540) - Register InterpreterSettingTemplate: ignite
 INFO [2021-07-20 13:49:51,363] ({main} InterpreterSettingManager.java[registerInterpreterSetting]:540) - Register InterpreterSettingTemplate: hazelcastjet
 INFO [2021-07-20 13:49:51,364] ({main} InterpreterSettingManager.java[registerInterpreterSetting]:540) - Register InterpreterSettingTemplate: influxdb
 INFO [2021-07-20 13:49:51,365] ({main} InterpreterSettingManager.java[registerInterpreterSetting]:540) - Register InterpreterSettingTemplate: neo4j
 INFO [2021-07-20 13:49:51,366] ({main} InterpreterSettingManager.java[registerInterpreterSetting]:540) - Register InterpreterSettingTemplate: kotlin
 INFO [2021-07-20 13:49:51,367] ({main} InterpreterSettingManager.java[registerInterpreterSetting]:540) - Register InterpreterSettingTemplate: java
 INFO [2021-07-20 13:49:51,369] ({main} InterpreterSettingManager.java[registerInterpreterSetting]:540) - Register InterpreterSettingTemplate: spark
 INFO [2021-07-20 13:49:51,370] ({main} InterpreterSettingManager.java[registerInterpreterSetting]:540) - Register InterpreterSettingTemplate: python
 INFO [2021-07-20 13:49:51,372] ({main} InterpreterSettingManager.java[registerInterpreterSetting]:540) - Register InterpreterSettingTemplate: sparql
 INFO [2021-07-20 13:49:51,373] ({main} InterpreterSettingManager.java[registerInterpreterSetting]:540) - Register InterpreterSettingTemplate: groovy
 INFO [2021-07-20 13:49:51,375] ({main} InterpreterSettingManager.java[registerInterpreterSetting]:540) - Register InterpreterSettingTemplate: submarine
 INFO [2021-07-20 13:49:51,376] ({main} InterpreterSettingManager.java[registerInterpreterSetting]:540) - Register InterpreterSettingTemplate: hbase
 INFO [2021-07-20 13:49:51,377] ({main} InterpreterSettingManager.java[registerInterpreterSetting]:540) - Register InterpreterSettingTemplate: elasticsearch
 INFO [2021-07-20 13:49:51,379] ({main} InterpreterSettingManager.java[registerInterpreterSetting]:540) - Register InterpreterSettingTemplate: livy
 WARN [2021-07-20 13:49:51,392] ({main} InterpreterSettingManager.java[loadInterpreterSettingFromDefaultDir]:437) - No interpreter-setting.json found in /opt/zeppelin/interpreter/scio
 INFO [2021-07-20 13:49:51,394] ({main} InterpreterSettingManager.java[registerInterpreterSetting]:540) - Register InterpreterSettingTemplate: flink
 INFO [2021-07-20 13:49:51,395] ({main} InterpreterSettingManager.java[registerInterpreterSetting]:540) - Register InterpreterSettingTemplate: beam
 INFO [2021-07-20 13:49:51,396] ({main} InterpreterSettingManager.java[registerInterpreterSetting]:540) - Register InterpreterSettingTemplate: md
 INFO [2021-07-20 13:49:51,397] ({main} InterpreterSettingManager.java[registerInterpreterSetting]:540) - Register InterpreterSettingTemplate: sap
 INFO [2021-07-20 13:49:51,398] ({main} InterpreterSettingManager.java[registerInterpreterSetting]:540) - Register InterpreterSettingTemplate: r
 INFO [2021-07-20 13:49:51,398] ({main} InterpreterSettingManager.java[registerInterpreterSetting]:540) - Register InterpreterSettingTemplate: geode
 INFO [2021-07-20 13:49:51,399] ({main} InterpreterSettingManager.java[registerInterpreterSetting]:540) - Register InterpreterSettingTemplate: pig
 INFO [2021-07-20 13:49:51,400] ({main} LocalConfigStorage.java[loadInterpreterSettings]:63) - Load Interpreter Setting from file: /opt/zeppelin/conf/interpreter.json
 INFO [2021-07-20 13:49:51,419] ({main} InterpreterSettingManager.java[loadFromFile]:294) - Create interpreter setting ignite from interpreter.json
 INFO [2021-07-20 13:49:51,421] ({main} InterpreterSettingManager.java[loadFromFile]:294) - Create interpreter setting beam from interpreter.json
 INFO [2021-07-20 13:49:51,422] ({main} InterpreterSettingManager.java[loadFromFile]:294) - Create interpreter setting geode from interpreter.json
 INFO [2021-07-20 13:49:51,423] ({main} InterpreterSettingManager.java[loadFromFile]:294) - Create interpreter setting jdbc from interpreter.json
 INFO [2021-07-20 13:49:51,424] ({main} InterpreterSettingManager.java[loadFromFile]:294) - Create interpreter setting lens from interpreter.json
 INFO [2021-07-20 13:49:51,426] ({main} InterpreterSettingManager.java[loadFromFile]:294) - Create interpreter setting influxdb from interpreter.json
 INFO [2021-07-20 13:49:51,427] ({main} InterpreterSettingManager.java[loadFromFile]:294) - Create interpreter setting pig from interpreter.json
 INFO [2021-07-20 13:49:51,428] ({main} InterpreterSettingManager.java[loadFromFile]:294) - Create interpreter setting java from interpreter.json
 INFO [2021-07-20 13:49:51,429] ({main} InterpreterSettingManager.java[loadFromFile]:294) - Create interpreter setting jupyter from interpreter.json
 INFO [2021-07-20 13:49:51,430] ({main} InterpreterSettingManager.java[loadFromFile]:294) - Create interpreter setting file from interpreter.json
 INFO [2021-07-20 13:49:51,431] ({main} InterpreterSettingManager.java[loadFromFile]:294) - Create interpreter setting submarine from interpreter.json
 INFO [2021-07-20 13:49:51,432] ({main} InterpreterSettingManager.java[loadFromFile]:294) - Create interpreter setting elasticsearch from interpreter.json
 INFO [2021-07-20 13:49:51,433] ({main} InterpreterSettingManager.java[loadFromFile]:294) - Create interpreter setting sh from interpreter.json
 INFO [2021-07-20 13:49:51,434] ({main} InterpreterSettingManager.java[loadFromFile]:294) - Create interpreter setting spark from interpreter.json
 INFO [2021-07-20 13:49:51,435] ({main} InterpreterSettingManager.java[loadFromFile]:294) - Create interpreter setting md from interpreter.json
 INFO [2021-07-20 13:49:51,436] ({main} InterpreterSettingManager.java[loadFromFile]:294) - Create interpreter setting hazelcastjet from interpreter.json
 INFO [2021-07-20 13:49:51,437] ({main} InterpreterSettingManager.java[loadFromFile]:294) - Create interpreter setting alluxio from interpreter.json
 INFO [2021-07-20 13:49:51,438] ({main} InterpreterSettingManager.java[loadFromFile]:294) - Create interpreter setting bigquery from interpreter.json
 INFO [2021-07-20 13:49:51,439] ({main} InterpreterSettingManager.java[loadFromFile]:294) - Create interpreter setting mongodb from interpreter.json
 INFO [2021-07-20 13:49:51,440] ({main} InterpreterSettingManager.java[loadFromFile]:294) - Create interpreter setting hbase from interpreter.json
 INFO [2021-07-20 13:49:51,440] ({main} InterpreterSettingManager.java[loadFromFile]:294) - Create interpreter setting python from interpreter.json
 INFO [2021-07-20 13:49:51,441] ({main} InterpreterSettingManager.java[loadFromFile]:294) - Create interpreter setting sap from interpreter.json
 INFO [2021-07-20 13:49:51,442] ({main} InterpreterSettingManager.java[loadFromFile]:294) - Create interpreter setting kotlin from interpreter.json
 INFO [2021-07-20 13:49:51,443] ({main} InterpreterSettingManager.java[loadFromFile]:294) - Create interpreter setting scalding from interpreter.json
 INFO [2021-07-20 13:49:51,444] ({main} InterpreterSettingManager.java[loadFromFile]:294) - Create interpreter setting flink from interpreter.json
 INFO [2021-07-20 13:49:51,445] ({main} InterpreterSettingManager.java[loadFromFile]:294) - Create interpreter setting angular from interpreter.json
 INFO [2021-07-20 13:49:51,446] ({main} InterpreterSettingManager.java[loadFromFile]:294) - Create interpreter setting ksql from interpreter.json
 INFO [2021-07-20 13:49:51,446] ({main} InterpreterSettingManager.java[loadFromFile]:294) - Create interpreter setting livy from interpreter.json
 INFO [2021-07-20 13:49:51,447] ({main} InterpreterSettingManager.java[loadFromFile]:294) - Create interpreter setting r from interpreter.json
 INFO [2021-07-20 13:49:51,448] ({main} InterpreterSettingManager.java[loadFromFile]:294) - Create interpreter setting neo4j from interpreter.json
 INFO [2021-07-20 13:49:51,449] ({main} InterpreterSettingManager.java[loadFromFile]:294) - Create interpreter setting groovy from interpreter.json
 INFO [2021-07-20 13:49:51,449] ({main} InterpreterSettingManager.java[loadFromFile]:294) - Create interpreter setting cassandra from interpreter.json
 INFO [2021-07-20 13:49:51,450] ({main} InterpreterSettingManager.java[loadFromFile]:294) - Create interpreter setting sparql from interpreter.json
 INFO [2021-07-20 13:49:51,451] ({main} InterpreterSettingManager.java[loadFromFile]:294) - Create interpreter setting kylin from interpreter.json
 INFO [2021-07-20 13:49:51,455] ({main} InterpreterSetting.java[setStatus]:734) - Set interpreter mongodb status to DOWNLOADING_DEPENDENCIES
 INFO [2021-07-20 13:49:51,456] ({main} LocalConfigStorage.java[save]:53) - Save Interpreter Setting to /opt/zeppelin/conf/interpreter.json
 INFO [2021-07-20 13:49:51,456] ({Thread-13} InterpreterSetting.java[run]:964) - Start to download dependencies for interpreter: mongodb
 INFO [2021-07-20 13:49:51,983] ({LuceneSearch-RebuildIndex-Thread} LuceneSearch.java[lambda$startRebuildIndex$1]:399) - Starting rebuild index
 INFO [2021-07-20 13:49:52,967] ({qtp1864350231-11} NoAuthenticationService.java[<init>]:38) - NoAuthenticationService is initialized
 WARN [2021-07-20 13:49:53,011] ({qtp1864350231-11} SecurityRestApi.java[ticket]:89) - {"status":"OK","message":"","body":{"principal":"anonymous","ticket":"anonymous","roles":"[]"}}
 WARN [2021-07-20 13:49:53,297] ({qtp1864350231-38} ClusterRestApi.java[<init>]:61) - Cluster mode is disabled, ClusterRestApi won't work
 INFO [2021-07-20 13:49:53,322] ({qtp1864350231-29} NotebookServer.java[onOpen]:247) - New connection from 172.18.0.1:61882
 INFO [2021-07-20 13:49:55,044] ({LuceneSearch-RebuildIndex-Thread} LuceneSearch.java[lambda$startRebuildIndex$1]:404) - Finish rebuild index
 INFO [2021-07-20 13:49:56,014] ({Thread-13} InterpreterSetting.java[run]:977) - Finish downloading dependencies for interpreter: mongodb
 INFO [2021-07-20 13:49:56,015] ({Thread-13} InterpreterSetting.java[setStatus]:734) - Set interpreter mongodb status to READY
 INFO [2021-07-20 13:49:56,016] ({Thread-13} LocalConfigStorage.java[save]:53) - Save Interpreter Setting to /opt/zeppelin/conf/interpreter.json
 INFO [2021-07-20 13:49:59,402] ({qtp1864350231-29} NotebookServer.java[onClose]:474) - Closed connection to 172.18.0.1:61882 (1001) null
 WARN [2021-07-20 13:49:59,770] ({qtp1864350231-38} SecurityRestApi.java[ticket]:89) - {"status":"OK","message":"","body":{"principal":"anonymous","ticket":"anonymous","roles":"[]"}}
 INFO [2021-07-20 13:49:59,818] ({qtp1864350231-37} NotebookServer.java[onOpen]:247) - New connection from 172.18.0.1:62026
 WARN [2021-07-20 13:49:59,863] ({qtp1864350231-11} ClusterRestApi.java[<init>]:61) - Cluster mode is disabled, ClusterRestApi won't work
 INFO [2021-07-20 13:50:01,719] ({qtp1864350231-11} Helium.java[loadConf]:139) - Add helium local registry /opt/zeppelin/helium
 INFO [2021-07-20 13:50:01,722] ({qtp1864350231-11} Helium.java[loadConf]:136) - Add helium online registry https://s3.amazonaws.com/helium-package/helium.json
 INFO [2021-07-20 13:50:02,671] ({qtp1864350231-11} NodeInstaller.java[install]:83) - Installing node version v6.9.1
 INFO [2021-07-20 13:50:02,673] ({qtp1864350231-11} NodeInstaller.java[downloadFile]:314) - Downloading https://nodejs.org/dist/v6.9.1/node-v6.9.1-linux-x64.tar.gz to /opt/zeppelin/local-repo/helium-bundle/cache/node-v6.9.1-linux-x64.tar.gz
 INFO [2021-07-20 13:50:02,675] ({qtp1864350231-11} ProxyConfig.java[getProxyForUrl]:27) - No proxies configured
 INFO [2021-07-20 13:50:02,675] ({qtp1864350231-11} FileDownloader.java[execute]:91) - No proxy was configured, downloading directly
 INFO [2021-07-20 13:50:03,909] ({qtp1864350231-11} NodeInstaller.java[extractFile]:301) - Unpacking /opt/zeppelin/local-repo/helium-bundle/cache/node-v6.9.1-linux-x64.tar.gz into /opt/zeppelin/local-repo/helium-bundle/node/tmp
 INFO [2021-07-20 13:50:04,681] ({qtp1864350231-11} NodeInstaller.java[installNodeDefault]:153) - Copying node binary from /opt/zeppelin/local-repo/helium-bundle/node/tmp/node-v6.9.1-linux-x64/bin/node to /opt/zeppelin/local-repo/helium-bundle/node/node
 INFO [2021-07-20 13:50:04,823] ({qtp1864350231-11} NodeInstaller.java[installNodeDefault]:182) - Installed node locally.
 INFO [2021-07-20 13:50:04,826] ({qtp1864350231-11} NPMInstaller.java[installNpm]:117) - Installing npm version 3.10.8
 INFO [2021-07-20 13:50:04,827] ({qtp1864350231-11} NPMInstaller.java[downloadFile]:198) - Downloading https://registry.npmjs.org//npm/-/npm-3.10.8.tgz to /opt/zeppelin/local-repo/helium-bundle/cache/npm-3.10.8.tar.gz
 INFO [2021-07-20 13:50:04,827] ({qtp1864350231-11} ProxyConfig.java[getProxyForUrl]:27) - No proxies configured
 INFO [2021-07-20 13:50:04,828] ({qtp1864350231-11} FileDownloader.java[execute]:91) - No proxy was configured, downloading directly
 INFO [2021-07-20 13:50:05,160] ({qtp1864350231-11} NPMInstaller.java[extractFile]:185) - Unpacking /opt/zeppelin/local-repo/helium-bundle/cache/npm-3.10.8.tar.gz into /opt/zeppelin/local-repo/helium-bundle/node/node_modules
 INFO [2021-07-20 13:50:05,891] ({qtp1864350231-11} NPMInstaller.java[installNpm]:165) - Installed npm locally.
 INFO [2021-07-20 13:50:05,893] ({qtp1864350231-11} YarnInstaller.java[installYarn]:97) - Installing Yarn version v0.21.3
 INFO [2021-07-20 13:50:05,894] ({qtp1864350231-11} YarnInstaller.java[downloadFile]:154) - Downloading https://github.com/yarnpkg/yarn/releases/download/v0.21.3/yarn-v0.21.3.tar.gz to /opt/zeppelin/local-repo/helium-bundle/cache/yarn-v0.21.3./yarn-v0.21.3.tar.gz
 INFO [2021-07-20 13:50:05,895] ({qtp1864350231-11} ProxyConfig.java[getProxyForUrl]:27) - No proxies configured
 INFO [2021-07-20 13:50:05,897] ({qtp1864350231-11} FileDownloader.java[execute]:91) - No proxy was configured, downloading directly
 INFO [2021-07-20 13:50:06,712] ({qtp1864350231-11} YarnInstaller.java[extractFile]:141) - Unpacking /opt/zeppelin/local-repo/helium-bundle/cache/yarn-v0.21.3./yarn-v0.21.3.tar.gz into /opt/zeppelin/local-repo/helium-bundle/node/yarn
 INFO [2021-07-20 13:50:07,707] ({qtp1864350231-11} YarnInstaller.java[installYarn]:123) - Installed Yarn locally.
 INFO [2021-07-20 13:50:07,711] ({qtp1864350231-11} YarnTaskExecutor.java[execute]:54) - Running 'yarn config set cache-folder /opt/zeppelin/local-repo/helium-bundle/yarn-cache --registry=https://registry.npmjs.org/' in /opt/zeppelin/local-repo/helium-bundle
 INFO [2021-07-20 13:50:07,979] ({Thread-62} InputStreamHandler.java[log]:47) - yarn config v0.21.3
 INFO [2021-07-20 13:50:08,028] ({Thread-62} InputStreamHandler.java[log]:47) - success Set "cache-folder" to "/opt/zeppelin/local-repo/helium-bundle/yarn-cache".
 INFO [2021-07-20 13:50:08,030] ({Thread-62} InputStreamHandler.java[log]:47) - Done in 0.06s.
 INFO [2021-07-20 13:50:08,077] ({qtp1864350231-11} NodeTaskExecutor.java[execute]:55) - Running 'npm pack zeppelin-bubblechart@0.0.4 --registry=https://registry.npmjs.org/' in /opt/zeppelin/local-repo/helium-bundle
 INFO [2021-07-20 13:50:10,246] ({Thread-64} InputStreamHandler.java[log]:47) - zeppelin-bubblechart-0.0.4.tgz
 INFO [2021-07-20 13:50:10,281] ({qtp1864350231-11} HeliumBundleFactory.java[installNodeModules]:380) - Installing required node modules
 INFO [2021-07-20 13:50:31,300] ({qtp1864350231-15} LocalConfigStorage.java[save]:70) - Save notebook authorization to file: /opt/zeppelin/conf/notebook-authorization.json
 INFO [2021-07-20 13:50:34,682] ({qtp1864350231-11} HeliumBundleFactory.java[installNodeModules]:382) - Installed required node modules
 INFO [2021-07-20 13:50:34,683] ({qtp1864350231-11} HeliumBundleFactory.java[bundleHeliumPackage]:392) - Bundling helium packages
 INFO [2021-07-20 13:50:36,612] ({qtp1864350231-11} HeliumBundleFactory.java[bundleHeliumPackage]:394) - Bundled helium packages
 INFO [2021-07-20 13:50:36,625] ({qtp1864350231-11} NodeTaskExecutor.java[execute]:55) - Running 'npm pack zeppelin-highcharts-bubble@0.0.2 --registry=https://registry.npmjs.org/' in /opt/zeppelin/local-repo/helium-bundle
 INFO [2021-07-20 13:50:38,681] ({Thread-70} InputStreamHandler.java[log]:47) - zeppelin-highcharts-bubble-0.0.2.tgz
 INFO [2021-07-20 13:50:38,728] ({qtp1864350231-11} HeliumBundleFactory.java[installNodeModules]:380) - Installing required node modules
 INFO [2021-07-20 13:50:52,771] ({qtp1864350231-99} NotebookServer.java[onClose]:474) - Closed connection to 172.18.0.1:62026 (1001) null
 WARN [2021-07-20 13:50:53,819] ({qtp1864350231-16} SecurityRestApi.java[ticket]:89) - {"status":"OK","message":"","body":{"principal":"anonymous","ticket":"anonymous","roles":"[]"}}
 INFO [2021-07-20 13:50:53,955] ({qtp1864350231-103} NotebookServer.java[onOpen]:247) - New connection from 172.18.0.1:62706
 WARN [2021-07-20 13:50:54,139] ({qtp1864350231-99} ClusterRestApi.java[<init>]:61) - Cluster mode is disabled, ClusterRestApi won't work
 INFO [2021-07-20 13:50:55,178] ({qtp1864350231-11} HeliumBundleFactory.java[installNodeModules]:382) - Installed required node modules
 INFO [2021-07-20 13:50:55,181] ({qtp1864350231-11} HeliumBundleFactory.java[bundleHeliumPackage]:392) - Bundling helium packages
 INFO [2021-07-20 13:50:57,361] ({qtp1864350231-11} HeliumBundleFactory.java[bundleHeliumPackage]:394) - Bundled helium packages
 INFO [2021-07-20 13:50:57,368] ({qtp1864350231-11} NodeTaskExecutor.java[execute]:55) - Running 'npm pack zeppelin-highcharts-scatterplot@0.0.2 --registry=https://registry.npmjs.org/' in /opt/zeppelin/local-repo/helium-bundle
 INFO [2021-07-20 13:50:59,353] ({Thread-98} InputStreamHandler.java[log]:47) - zeppelin-highcharts-scatterplot-0.0.2.tgz
 INFO [2021-07-20 13:50:59,388] ({qtp1864350231-11} HeliumBundleFactory.java[installNodeModules]:380) - Installing required node modules
 INFO [2021-07-20 13:51:02,502] ({qtp1864350231-99} NotebookServer.java[onClose]:474) - Closed connection to 172.18.0.1:62706 (1001) null
 WARN [2021-07-20 13:51:03,423] ({qtp1864350231-127} SecurityRestApi.java[ticket]:89) - {"status":"OK","message":"","body":{"principal":"anonymous","ticket":"anonymous","roles":"[]"}}
 INFO [2021-07-20 13:51:03,489] ({qtp1864350231-141} NotebookServer.java[onOpen]:247) - New connection from 172.18.0.1:62850
 WARN [2021-07-20 13:51:03,582] ({qtp1864350231-142} ClusterRestApi.java[<init>]:61) - Cluster mode is disabled, ClusterRestApi won't work
 INFO [2021-07-20 13:51:14,619] ({qtp1864350231-11} HeliumBundleFactory.java[installNodeModules]:382) - Installed required node modules
 INFO [2021-07-20 13:51:14,623] ({qtp1864350231-11} HeliumBundleFactory.java[bundleHeliumPackage]:392) - Bundling helium packages
 INFO [2021-07-20 13:51:16,685] ({qtp1864350231-11} HeliumBundleFactory.java[bundleHeliumPackage]:394) - Bundled helium packages
 INFO [2021-07-20 13:51:27,188] ({qtp1864350231-37} InterpreterSetting.java[getOrCreateInterpreterGroup]:453) - Create InterpreterGroup with groupId: spark-shared_process for ExecutionContext{user='anonymous', noteId='2GCS1KRJS', interpreterGroupId='null', defaultInterpreterGroup='spark', inIsolatedMode=false, startTime=}
 INFO [2021-07-20 13:51:27,199] ({qtp1864350231-37} InterpreterSetting.java[createInterpreters]:823) - Interpreter org.apache.zeppelin.spark.SparkInterpreter created for user: anonymous, sessionId: shared_session
 INFO [2021-07-20 13:51:27,205] ({qtp1864350231-37} InterpreterSetting.java[createInterpreters]:823) - Interpreter org.apache.zeppelin.spark.SparkSqlInterpreter created for user: anonymous, sessionId: shared_session
 INFO [2021-07-20 13:51:27,211] ({qtp1864350231-37} InterpreterSetting.java[createInterpreters]:823) - Interpreter org.apache.zeppelin.spark.PySparkInterpreter created for user: anonymous, sessionId: shared_session
 INFO [2021-07-20 13:51:27,217] ({qtp1864350231-37} InterpreterSetting.java[createInterpreters]:823) - Interpreter org.apache.zeppelin.spark.IPySparkInterpreter created for user: anonymous, sessionId: shared_session
 INFO [2021-07-20 13:51:27,218] ({qtp1864350231-37} InterpreterSetting.java[createInterpreters]:823) - Interpreter org.apache.zeppelin.spark.SparkRInterpreter created for user: anonymous, sessionId: shared_session
 INFO [2021-07-20 13:51:27,221] ({qtp1864350231-37} InterpreterSetting.java[createInterpreters]:823) - Interpreter org.apache.zeppelin.spark.SparkIRInterpreter created for user: anonymous, sessionId: shared_session
 INFO [2021-07-20 13:51:27,230] ({qtp1864350231-37} InterpreterSetting.java[createInterpreters]:823) - Interpreter org.apache.zeppelin.spark.SparkShinyInterpreter created for user: anonymous, sessionId: shared_session
 INFO [2021-07-20 13:51:27,242] ({qtp1864350231-37} InterpreterSetting.java[createInterpreters]:823) - Interpreter org.apache.zeppelin.spark.KotlinSparkInterpreter created for user: anonymous, sessionId: shared_session
 INFO [2021-07-20 13:51:27,250] ({qtp1864350231-37} ManagedInterpreterGroup.java[getOrCreateSession]:180) - Create Session: shared_session in InterpreterGroup: spark-shared_process for user: anonymous
 INFO [2021-07-20 13:52:13,703] ({qtp1864350231-128} InterpreterSetting.java[getOrCreateInterpreterGroup]:453) - Create InterpreterGroup with groupId: mongodb-shared_process for ExecutionContext{user='anonymous', noteId='2GA478RAU', interpreterGroupId='null', defaultInterpreterGroup='spark', inIsolatedMode=false, startTime=}
 INFO [2021-07-20 13:52:13,715] ({qtp1864350231-128} InterpreterSetting.java[createInterpreters]:823) - Interpreter org.apache.zeppelin.mongodb.MongoDbInterpreter created for user: anonymous, sessionId: shared_session
 INFO [2021-07-20 13:52:13,726] ({qtp1864350231-128} ManagedInterpreterGroup.java[getOrCreateSession]:180) - Create Session: shared_session in InterpreterGroup: mongodb-shared_process for user: anonymous
 INFO [2021-07-20 13:52:13,733] ({qtp1864350231-128} InterpreterSetting.java[getOrCreateInterpreterGroup]:453) - Create InterpreterGroup with groupId: sh-shared_process for ExecutionContext{user='anonymous', noteId='2GA478RAU', interpreterGroupId='null', defaultInterpreterGroup='spark', inIsolatedMode=false, startTime=}
 INFO [2021-07-20 13:52:13,736] ({qtp1864350231-128} InterpreterSetting.java[createInterpreters]:823) - Interpreter org.apache.zeppelin.shell.ShellInterpreter created for user: anonymous, sessionId: shared_session
 INFO [2021-07-20 13:52:13,739] ({qtp1864350231-128} InterpreterSetting.java[createInterpreters]:823) - Interpreter org.apache.zeppelin.shell.TerminalInterpreter created for user: anonymous, sessionId: shared_session
 INFO [2021-07-20 13:52:13,741] ({qtp1864350231-128} ManagedInterpreterGroup.java[getOrCreateSession]:180) - Create Session: shared_session in InterpreterGroup: sh-shared_process for user: anonymous
 INFO [2021-07-20 13:52:25,787] ({qtp1864350231-158} NotebookService.java[runParagraph]:324) - Start to run paragraph: paragraph_1626717914426_1775547677 of note: 2GCS1KRJS
 INFO [2021-07-20 13:52:25,805] ({qtp1864350231-158} SchedulerFactory.java[<init>]:56) - Scheduler Thread Pool Size: 100
 INFO [2021-07-20 13:52:25,810] ({qtp1864350231-158} NotebookServer.java[inlineBroadcastNewParagraph]:629) - Broadcasting paragraph on run call instead of note.
 INFO [2021-07-20 13:52:25,811] ({SchedulerFactory2} AbstractScheduler.java[runJob]:127) - Job paragraph_1626717914426_1775547677 started by scheduler RemoteInterpreter-mongodb-shared_process-shared_session
 INFO [2021-07-20 13:52:25,813] ({SchedulerFactory2} Paragraph.java[jobRun]:420) - Run paragraph [paragraph_id: paragraph_1626717914426_1775547677, interpreter: org.apache.zeppelin.mongodb.MongoDbInterpreter, note_id: 2GCS1KRJS, user: anonymous]
 INFO [2021-07-20 13:52:25,815] ({SchedulerFactory2} ManagedInterpreterGroup.java[getOrCreateInterpreterProcess]:65) - Create InterpreterProcess for InterpreterGroup: mongodb-shared_process
 INFO [2021-07-20 13:52:25,817] ({SchedulerFactory2} PluginManager.java[loadInterpreterLauncher]:154) - Loading Interpreter Launcher Plugin: org.apache.zeppelin.interpreter.launcher.StandardInterpreterLauncher
 INFO [2021-07-20 13:52:25,819] ({SchedulerFactory2} StandardInterpreterLauncher.java[launchDirectly]:49) - Launching new interpreter process of mongodb
 INFO [2021-07-20 13:52:25,848] ({SchedulerFactory2} ProcessLauncher.java[transition]:109) - Process state is transitioned to LAUNCHED
 INFO [2021-07-20 13:52:25,849] ({SchedulerFactory2} ProcessLauncher.java[launch]:96) - Process is launched: [/opt/zeppelin/bin/interpreter.sh, -d, /opt/zeppelin/interpreter/mongodb, -c, 172.18.0.4, -p, 37753, -r, :, -i, mongodb-shared_process, -l, /opt/zeppelin/local-repo/mongodb, -g, mongodb]
 INFO [2021-07-20 13:52:27,395] ({pool-7-thread-1} RemoteInterpreterEventServer.java[registerInterpreterProcess]:176) - Register interpreter process: 172.18.0.4:41193, interpreterGroup: mongodb-shared_process
 INFO [2021-07-20 13:52:27,396] ({pool-7-thread-1} ProcessLauncher.java[transition]:109) - Process state is transitioned to RUNNING
 INFO [2021-07-20 13:52:27,499] ({SchedulerFactory2} RemoteInterpreter.java[lambda$internal_create$1]:160) - Create RemoteInterpreter org.apache.zeppelin.mongodb.MongoDbInterpreter
 INFO [2021-07-20 13:52:27,617] ({SchedulerFactory2} RemoteInterpreter.java[lambda$open$0]:134) - Open RemoteInterpreter org.apache.zeppelin.mongodb.MongoDbInterpreter
 INFO [2021-07-20 13:52:27,618] ({SchedulerFactory2} RemoteInterpreter.java[pushAngularObjectRegistryToRemote]:393) - Push local angular object registry from ZeppelinServer to remote interpreter group mongodb-shared_process
 INFO [2021-07-20 13:52:27,733] ({JobStatusPoller-paragraph_1626717914426_1775547677} NotebookServer.java[onStatusChange]:1931) - Job paragraph_1626717914426_1775547677 starts to RUNNING
 INFO [2021-07-20 13:52:28,234] ({SchedulerFactory2} NotebookServer.java[onStatusChange]:1926) - Job paragraph_1626717914426_1775547677 is finished successfully, status: FINISHED
 INFO [2021-07-20 13:52:28,240] ({SchedulerFactory2} AbstractScheduler.java[runJob]:154) - Job paragraph_1626717914426_1775547677 finished by scheduler RemoteInterpreter-mongodb-shared_process-shared_session with status FINISHED
 INFO [2021-07-20 13:52:48,696] ({qtp1864350231-176} NotebookService.java[runParagraph]:324) - Start to run paragraph: paragraph_1626717914426_1775547677 of note: 2GCS1KRJS
 INFO [2021-07-20 13:52:48,703] ({SchedulerFactory2} AbstractScheduler.java[runJob]:127) - Job paragraph_1626717914426_1775547677 started by scheduler RemoteInterpreter-mongodb-shared_process-shared_session
 INFO [2021-07-20 13:52:48,705] ({SchedulerFactory2} Paragraph.java[jobRun]:420) - Run paragraph [paragraph_id: paragraph_1626717914426_1775547677, interpreter: org.apache.zeppelin.mongodb.MongoDbInterpreter, note_id: 2GCS1KRJS, user: anonymous]
 INFO [2021-07-20 13:52:48,806] ({JobStatusPoller-paragraph_1626717914426_1775547677} NotebookServer.java[onStatusChange]:1931) - Job paragraph_1626717914426_1775547677 starts to RUNNING
 INFO [2021-07-20 13:52:48,814] ({SchedulerFactory2} NotebookServer.java[onStatusChange]:1926) - Job paragraph_1626717914426_1775547677 is finished successfully, status: FINISHED
 INFO [2021-07-20 13:52:48,819] ({SchedulerFactory2} AbstractScheduler.java[runJob]:154) - Job paragraph_1626717914426_1775547677 finished by scheduler RemoteInterpreter-mongodb-shared_process-shared_session with status FINISHED
 INFO [2021-07-20 13:52:52,388] ({qtp1864350231-158} NotebookService.java[runParagraph]:324) - Start to run paragraph: paragraph_1626717914426_1775547677 of note: 2GCS1KRJS
 INFO [2021-07-20 13:52:52,394] ({SchedulerFactory3} AbstractScheduler.java[runJob]:127) - Job paragraph_1626717914426_1775547677 started by scheduler RemoteInterpreter-mongodb-shared_process-shared_session
 INFO [2021-07-20 13:52:52,396] ({SchedulerFactory3} Paragraph.java[jobRun]:420) - Run paragraph [paragraph_id: paragraph_1626717914426_1775547677, interpreter: org.apache.zeppelin.mongodb.MongoDbInterpreter, note_id: 2GCS1KRJS, user: anonymous]
 INFO [2021-07-20 13:52:52,497] ({JobStatusPoller-paragraph_1626717914426_1775547677} NotebookServer.java[onStatusChange]:1931) - Job paragraph_1626717914426_1775547677 starts to RUNNING
 INFO [2021-07-20 13:52:52,533] ({SchedulerFactory3} NotebookServer.java[onStatusChange]:1926) - Job paragraph_1626717914426_1775547677 is finished successfully, status: FINISHED
 INFO [2021-07-20 13:52:52,538] ({SchedulerFactory3} AbstractScheduler.java[runJob]:154) - Job paragraph_1626717914426_1775547677 finished by scheduler RemoteInterpreter-mongodb-shared_process-shared_session with status FINISHED
ERROR [2021-07-20 13:52:52,619] ({qtp1864350231-173} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626717914426_1775547677","paragraph":"\n\n\n\n\n\n%mongodb\n\n\ndb.entities.find({\"_id.type\": \"Sensor\"}).table()\n","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","_id.type":"string","_id.servicePath":"string","attrNames":"string","attrs.temperature.value":"string","attrs.temperature.type":"string","attrs.temperature.mdNames":"string","attrs.temperature.creDate":"string","attrs.temperature.modDate":"string","attrs.humidity.value":"string","attrs.humidity.type":"string","attrs.humidity.mdNames":"string","attrs.humidity.creDate":"string","attrs.humidity.modDate":"string","attrs.location.type":"string","attrs.location.creDate":"string","attrs.location.modDate":"string","attrs.location.value":"string","attrs.location.mdNames":"string","attrs.updated.type":"string","attrs.updated.creDate":"string","attrs.updated.modDate":"string","attrs.updated.value":"string","attrs.updated.mdNames":"string","creDate":"string","modDate":"string","location.attrName":"string","location.coords.type":"string","location.coords.coordinates":"string","lastCorrelator":"string"},"updated":true},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"vvi2o-39"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:336)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:313)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:171)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:129)
	at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:375)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 13:52:53,586] ({qtp1864350231-173} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626717914426_1775547677","paragraph":"\n\n\n\n\n\n%mongodb\n\n\ndb.entities.find({\"_id.type\": \"Sensor\"}).table()\n","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","_id.type":"string","_id.servicePath":"string","attrNames":"string","attrs.temperature.value":"string","attrs.temperature.type":"string","attrs.temperature.mdNames":"string","attrs.temperature.creDate":"string","attrs.temperature.modDate":"string","attrs.humidity.value":"string","attrs.humidity.type":"string","attrs.humidity.mdNames":"string","attrs.humidity.creDate":"string","attrs.humidity.modDate":"string","attrs.location.type":"string","attrs.location.creDate":"string","attrs.location.modDate":"string","attrs.location.value":"string","attrs.location.mdNames":"string","attrs.updated.type":"string","attrs.updated.creDate":"string","attrs.updated.modDate":"string","attrs.updated.value":"string","attrs.updated.mdNames":"string","creDate":"string","modDate":"string","location.attrName":"string","location.coords.type":"string","location.coords.coordinates":"string","lastCorrelator":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"vvi2o-40"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 13:53:05,623] ({qtp1864350231-198} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626717914426_1775547677","paragraph":"\n\n\n\n\n\n%mongodb\n\n\ndb.entities.find({\"_id.type\": \"Sensor\"}).table()\n","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{"0":{"graph":{"mode":"zeppelin-highcharts-bubble","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","_id.type":"string","_id.servicePath":"string","attrNames":"string","attrs.temperature.value":"string","attrs.temperature.type":"string","attrs.temperature.mdNames":"string","attrs.temperature.creDate":"string","attrs.temperature.modDate":"string","attrs.humidity.value":"string","attrs.humidity.type":"string","attrs.humidity.mdNames":"string","attrs.humidity.creDate":"string","attrs.humidity.modDate":"string","attrs.location.type":"string","attrs.location.creDate":"string","attrs.location.modDate":"string","attrs.location.value":"string","attrs.location.mdNames":"string","attrs.updated.type":"string","attrs.updated.creDate":"string","attrs.updated.modDate":"string","attrs.updated.value":"string","attrs.updated.mdNames":"string","creDate":"string","modDate":"string","location.attrName":"string","location.coords.type":"string","location.coords.coordinates":"string","lastCorrelator":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"vvi2o-43"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 13:53:13,187] ({qtp1864350231-193} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626717914426_1775547677","paragraph":"\n\n\n\n\n\n%mongodb\n\n\ndb.entities.find({\"_id.type\": \"Sensor\"}).table()\n","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","_id.type":"string","_id.servicePath":"string","attrNames":"string","attrs.temperature.value":"string","attrs.temperature.type":"string","attrs.temperature.mdNames":"string","attrs.temperature.creDate":"string","attrs.temperature.modDate":"string","attrs.humidity.value":"string","attrs.humidity.type":"string","attrs.humidity.mdNames":"string","attrs.humidity.creDate":"string","attrs.humidity.modDate":"string","attrs.location.type":"string","attrs.location.creDate":"string","attrs.location.modDate":"string","attrs.location.value":"string","attrs.location.mdNames":"string","attrs.updated.type":"string","attrs.updated.creDate":"string","attrs.updated.modDate":"string","attrs.updated.value":"string","attrs.updated.mdNames":"string","creDate":"string","modDate":"string","location.attrName":"string","location.coords.type":"string","location.coords.coordinates":"string","lastCorrelator":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"vvi2o-44"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 13:53:31,070] ({qtp1864350231-194} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626717914426_1775547677","paragraph":"\n\n\n\n\n\n%mongodb\n\n\ndb.entities.find({\"_id.type\": \"Sensor\"}).table()\n","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{"0":{"graph":{"mode":"lineChart","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","_id.type":"string","_id.servicePath":"string","attrNames":"string","attrs.temperature.value":"string","attrs.temperature.type":"string","attrs.temperature.mdNames":"string","attrs.temperature.creDate":"string","attrs.temperature.modDate":"string","attrs.humidity.value":"string","attrs.humidity.type":"string","attrs.humidity.mdNames":"string","attrs.humidity.creDate":"string","attrs.humidity.modDate":"string","attrs.location.type":"string","attrs.location.creDate":"string","attrs.location.modDate":"string","attrs.location.value":"string","attrs.location.mdNames":"string","attrs.updated.type":"string","attrs.updated.creDate":"string","attrs.updated.modDate":"string","attrs.updated.value":"string","attrs.updated.mdNames":"string","creDate":"string","modDate":"string","location.attrName":"string","location.coords.type":"string","location.coords.coordinates":"string","lastCorrelator":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"vvi2o-47"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 13:53:31,139] ({qtp1864350231-194} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626717914426_1775547677","paragraph":"\n\n\n\n\n\n%mongodb\n\n\ndb.entities.find({\"_id.type\": \"Sensor\"}).table()\n","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{"0":{"graph":{"mode":"lineChart","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","_id.type":"string","_id.servicePath":"string","attrNames":"string","attrs.temperature.value":"string","attrs.temperature.type":"string","attrs.temperature.mdNames":"string","attrs.temperature.creDate":"string","attrs.temperature.modDate":"string","attrs.humidity.value":"string","attrs.humidity.type":"string","attrs.humidity.mdNames":"string","attrs.humidity.creDate":"string","attrs.humidity.modDate":"string","attrs.location.type":"string","attrs.location.creDate":"string","attrs.location.modDate":"string","attrs.location.value":"string","attrs.location.mdNames":"string","attrs.updated.type":"string","attrs.updated.creDate":"string","attrs.updated.modDate":"string","attrs.updated.value":"string","attrs.updated.mdNames":"string","creDate":"string","modDate":"string","location.attrName":"string","location.coords.type":"string","location.coords.coordinates":"string","lastCorrelator":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"lineChart":{"rotate":{"degree":"-45"}}},"commonSetting":{},"keys":[{"name":"_id.id","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"_id.type","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"vvi2o-48"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 13:53:31,144] ({qtp1864350231-194} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626717914426_1775547677","paragraph":"\n\n\n\n\n\n%mongodb\n\n\ndb.entities.find({\"_id.type\": \"Sensor\"}).table()\n","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{"0":{"graph":{"mode":"lineChart","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","_id.type":"string","_id.servicePath":"string","attrNames":"string","attrs.temperature.value":"string","attrs.temperature.type":"string","attrs.temperature.mdNames":"string","attrs.temperature.creDate":"string","attrs.temperature.modDate":"string","attrs.humidity.value":"string","attrs.humidity.type":"string","attrs.humidity.mdNames":"string","attrs.humidity.creDate":"string","attrs.humidity.modDate":"string","attrs.location.type":"string","attrs.location.creDate":"string","attrs.location.modDate":"string","attrs.location.value":"string","attrs.location.mdNames":"string","attrs.updated.type":"string","attrs.updated.creDate":"string","attrs.updated.modDate":"string","attrs.updated.value":"string","attrs.updated.mdNames":"string","creDate":"string","modDate":"string","location.attrName":"string","location.coords.type":"string","location.coords.coordinates":"string","lastCorrelator":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"_id.id","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"_id.type","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"vvi2o-49"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 13:53:33,840] ({qtp1864350231-193} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626717914426_1775547677","paragraph":"\n\n\n\n\n\n%mongodb\n\n\ndb.entities.find({\"_id.type\": \"Sensor\"}).table()\n","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{"0":{"graph":{"mode":"lineChart","height":300,"optionOpen":true,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","_id.type":"string","_id.servicePath":"string","attrNames":"string","attrs.temperature.value":"string","attrs.temperature.type":"string","attrs.temperature.mdNames":"string","attrs.temperature.creDate":"string","attrs.temperature.modDate":"string","attrs.humidity.value":"string","attrs.humidity.type":"string","attrs.humidity.mdNames":"string","attrs.humidity.creDate":"string","attrs.humidity.modDate":"string","attrs.location.type":"string","attrs.location.creDate":"string","attrs.location.modDate":"string","attrs.location.value":"string","attrs.location.mdNames":"string","attrs.updated.type":"string","attrs.updated.creDate":"string","attrs.updated.modDate":"string","attrs.updated.value":"string","attrs.updated.mdNames":"string","creDate":"string","modDate":"string","location.attrName":"string","location.coords.type":"string","location.coords.coordinates":"string","lastCorrelator":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"_id.id","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"_id.type","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"vvi2o-51"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 13:53:56,707] ({qtp1864350231-198} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626717914426_1775547677","paragraph":"\n\n\n\n\n\n%mongodb\n\n\ndb.entities.find({\"_id.type\": \"Sensor\"}).table()\n","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{"0":{"graph":{"mode":"lineChart","height":300,"optionOpen":true,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","_id.type":"string","_id.servicePath":"string","attrNames":"string","attrs.temperature.value":"string","attrs.temperature.type":"string","attrs.temperature.mdNames":"string","attrs.temperature.creDate":"string","attrs.temperature.modDate":"string","attrs.humidity.value":"string","attrs.humidity.type":"string","attrs.humidity.mdNames":"string","attrs.humidity.creDate":"string","attrs.humidity.modDate":"string","attrs.location.type":"string","attrs.location.creDate":"string","attrs.location.modDate":"string","attrs.location.value":"string","attrs.location.mdNames":"string","attrs.updated.type":"string","attrs.updated.creDate":"string","attrs.updated.modDate":"string","attrs.updated.value":"string","attrs.updated.mdNames":"string","creDate":"string","modDate":"string","location.attrName":"string","location.coords.type":"string","location.coords.coordinates":"string","lastCorrelator":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"_id.id","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"_id.type","index":1,"aggr":"sum"},{"name":"attrs.humidity.value","index":9,"aggr":"sum"}]},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"vvi2o-54"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 13:53:59,479] ({qtp1864350231-195} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626717914426_1775547677","paragraph":"\n\n\n\n\n\n%mongodb\n\n\ndb.entities.find({\"_id.type\": \"Sensor\"}).table()\n","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{"0":{"graph":{"mode":"lineChart","height":300,"optionOpen":true,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","_id.type":"string","_id.servicePath":"string","attrNames":"string","attrs.temperature.value":"string","attrs.temperature.type":"string","attrs.temperature.mdNames":"string","attrs.temperature.creDate":"string","attrs.temperature.modDate":"string","attrs.humidity.value":"string","attrs.humidity.type":"string","attrs.humidity.mdNames":"string","attrs.humidity.creDate":"string","attrs.humidity.modDate":"string","attrs.location.type":"string","attrs.location.creDate":"string","attrs.location.modDate":"string","attrs.location.value":"string","attrs.location.mdNames":"string","attrs.updated.type":"string","attrs.updated.creDate":"string","attrs.updated.modDate":"string","attrs.updated.value":"string","attrs.updated.mdNames":"string","creDate":"string","modDate":"string","location.attrName":"string","location.coords.type":"string","location.coords.coordinates":"string","lastCorrelator":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"_id.id","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"attrs.humidity.value","index":9,"aggr":"sum"}]},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"vvi2o-55"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 14:00:49,746] ({qtp1864350231-194} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626717914426_1775547677","paragraph":"\n\n\n\n\n\n%mongodb\n\n\ndb.entities.find({\"_id.type\": \"Sensor\"}).table()\n","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{"0":{"graph":{"mode":"lineChart","height":300,"optionOpen":true,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","_id.type":"string","_id.servicePath":"string","attrNames":"string","attrs.temperature.value":"string","attrs.temperature.type":"string","attrs.temperature.mdNames":"string","attrs.temperature.creDate":"string","attrs.temperature.modDate":"string","attrs.humidity.value":"string","attrs.humidity.type":"string","attrs.humidity.mdNames":"string","attrs.humidity.creDate":"string","attrs.humidity.modDate":"string","attrs.location.type":"string","attrs.location.creDate":"string","attrs.location.modDate":"string","attrs.location.value":"string","attrs.location.mdNames":"string","attrs.updated.type":"string","attrs.updated.creDate":"string","attrs.updated.modDate":"string","attrs.updated.value":"string","attrs.updated.mdNames":"string","creDate":"string","modDate":"string","location.attrName":"string","location.coords.type":"string","location.coords.coordinates":"string","lastCorrelator":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"rotate"}},"commonSetting":{},"keys":[{"name":"_id.id","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"attrs.humidity.value","index":9,"aggr":"sum"}]},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"vvi2o-97"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 14:00:53,275] ({qtp1864350231-193} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626717914426_1775547677","paragraph":"\n\n\n\n\n\n%mongodb\n\n\ndb.entities.find({\"_id.type\": \"Sensor\"}).table()\n","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{"0":{"graph":{"mode":"lineChart","height":300,"optionOpen":true,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","_id.type":"string","_id.servicePath":"string","attrNames":"string","attrs.temperature.value":"string","attrs.temperature.type":"string","attrs.temperature.mdNames":"string","attrs.temperature.creDate":"string","attrs.temperature.modDate":"string","attrs.humidity.value":"string","attrs.humidity.type":"string","attrs.humidity.mdNames":"string","attrs.humidity.creDate":"string","attrs.humidity.modDate":"string","attrs.location.type":"string","attrs.location.creDate":"string","attrs.location.modDate":"string","attrs.location.value":"string","attrs.location.mdNames":"string","attrs.updated.type":"string","attrs.updated.creDate":"string","attrs.updated.modDate":"string","attrs.updated.value":"string","attrs.updated.mdNames":"string","creDate":"string","modDate":"string","location.attrName":"string","location.coords.type":"string","location.coords.coordinates":"string","lastCorrelator":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"_id.id","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"attrs.humidity.value","index":9,"aggr":"sum"}]},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"vvi2o-98"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 14:01:02,688] ({qtp1864350231-173} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626717914426_1775547677","paragraph":"\n\n\n\n\n\n%mongodb\n\n\ndb.entities.find({\"_id.type\": \"Sensor\"}).table()\n","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":true,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","_id.type":"string","_id.servicePath":"string","attrNames":"string","attrs.temperature.value":"string","attrs.temperature.type":"string","attrs.temperature.mdNames":"string","attrs.temperature.creDate":"string","attrs.temperature.modDate":"string","attrs.humidity.value":"string","attrs.humidity.type":"string","attrs.humidity.mdNames":"string","attrs.humidity.creDate":"string","attrs.humidity.modDate":"string","attrs.location.type":"string","attrs.location.creDate":"string","attrs.location.modDate":"string","attrs.location.value":"string","attrs.location.mdNames":"string","attrs.updated.type":"string","attrs.updated.creDate":"string","attrs.updated.modDate":"string","attrs.updated.value":"string","attrs.updated.mdNames":"string","creDate":"string","modDate":"string","location.attrName":"string","location.coords.type":"string","location.coords.coordinates":"string","lastCorrelator":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"_id.id","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"attrs.humidity.value","index":9,"aggr":"sum"}]},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"vvi2o-100"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 14:01:25,424] ({qtp1864350231-195} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626717914426_1775547677","paragraph":"\n\n\n\n\n\n%mongodb\n\n\ndb.entities.find({\"_id.type\": \"Sensor\"}).table()\n","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{"0":{"graph":{"mode":"zeppelin-highcharts-scatterplot","height":300,"optionOpen":true,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","_id.type":"string","_id.servicePath":"string","attrNames":"string","attrs.temperature.value":"string","attrs.temperature.type":"string","attrs.temperature.mdNames":"string","attrs.temperature.creDate":"string","attrs.temperature.modDate":"string","attrs.humidity.value":"string","attrs.humidity.type":"string","attrs.humidity.mdNames":"string","attrs.humidity.creDate":"string","attrs.humidity.modDate":"string","attrs.location.type":"string","attrs.location.creDate":"string","attrs.location.modDate":"string","attrs.location.value":"string","attrs.location.mdNames":"string","attrs.updated.type":"string","attrs.updated.creDate":"string","attrs.updated.modDate":"string","attrs.updated.value":"string","attrs.updated.mdNames":"string","creDate":"string","modDate":"string","location.attrName":"string","location.coords.type":"string","location.coords.coordinates":"string","lastCorrelator":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"_id.id","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"attrs.humidity.value","index":9,"aggr":"sum"}]},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"vvi2o-104"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 14:01:30,574] ({qtp1864350231-194} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626717914426_1775547677","paragraph":"\n\n\n\n\n\n%mongodb\n\n\ndb.entities.find({\"_id.type\": \"Sensor\"}).table()\n","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{"0":{"graph":{"mode":"zeppelin-highcharts-scatterplot","height":300,"optionOpen":true,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","_id.type":"string","_id.servicePath":"string","attrNames":"string","attrs.temperature.value":"string","attrs.temperature.type":"string","attrs.temperature.mdNames":"string","attrs.temperature.creDate":"string","attrs.temperature.modDate":"string","attrs.humidity.value":"string","attrs.humidity.type":"string","attrs.humidity.mdNames":"string","attrs.humidity.creDate":"string","attrs.humidity.modDate":"string","attrs.location.type":"string","attrs.location.creDate":"string","attrs.location.modDate":"string","attrs.location.value":"string","attrs.location.mdNames":"string","attrs.updated.type":"string","attrs.updated.creDate":"string","attrs.updated.modDate":"string","attrs.updated.value":"string","attrs.updated.mdNames":"string","creDate":"string","modDate":"string","location.attrName":"string","location.coords.type":"string","location.coords.coordinates":"string","lastCorrelator":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"zeppelin-highcharts-scatterplot":{"category":{"name":"_id.id","index":0,"aggr":"sum"}}},"commonSetting":null,"keys":[{"name":"_id.id","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"attrs.humidity.value","index":9,"aggr":"sum"}]},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"vvi2o-105"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 14:01:40,405] ({qtp1864350231-195} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626717914426_1775547677","paragraph":"\n\n\n\n\n\n%mongodb\n\n\ndb.entities.find({\"_id.type\": \"Sensor\"}).table()\n","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{"0":{"graph":{"mode":"zeppelin-highcharts-scatterplot","height":300,"optionOpen":true,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","_id.type":"string","_id.servicePath":"string","attrNames":"string","attrs.temperature.value":"string","attrs.temperature.type":"string","attrs.temperature.mdNames":"string","attrs.temperature.creDate":"string","attrs.temperature.modDate":"string","attrs.humidity.value":"string","attrs.humidity.type":"string","attrs.humidity.mdNames":"string","attrs.humidity.creDate":"string","attrs.humidity.modDate":"string","attrs.location.type":"string","attrs.location.creDate":"string","attrs.location.modDate":"string","attrs.location.value":"string","attrs.location.mdNames":"string","attrs.updated.type":"string","attrs.updated.creDate":"string","attrs.updated.modDate":"string","attrs.updated.value":"string","attrs.updated.mdNames":"string","creDate":"string","modDate":"string","location.attrName":"string","location.coords.type":"string","location.coords.coordinates":"string","lastCorrelator":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"zeppelin-highcharts-scatterplot":{"category":{"name":"_id.id","index":0,"aggr":"sum"},"xAxis":{"name":"attrs.temperature.value","index":4,"aggr":"sum"}}},"commonSetting":null,"keys":[{"name":"_id.id","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"attrs.humidity.value","index":9,"aggr":"sum"}]},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"vvi2o-107"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 14:01:48,526] ({qtp1864350231-195} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626717914426_1775547677","paragraph":"\n\n\n\n\n\n%mongodb\n\n\ndb.entities.find({\"_id.type\": \"Sensor\"}).table()\n","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{"0":{"graph":{"mode":"zeppelin-highcharts-scatterplot","height":300,"optionOpen":true,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","_id.type":"string","_id.servicePath":"string","attrNames":"string","attrs.temperature.value":"string","attrs.temperature.type":"string","attrs.temperature.mdNames":"string","attrs.temperature.creDate":"string","attrs.temperature.modDate":"string","attrs.humidity.value":"string","attrs.humidity.type":"string","attrs.humidity.mdNames":"string","attrs.humidity.creDate":"string","attrs.humidity.modDate":"string","attrs.location.type":"string","attrs.location.creDate":"string","attrs.location.modDate":"string","attrs.location.value":"string","attrs.location.mdNames":"string","attrs.updated.type":"string","attrs.updated.creDate":"string","attrs.updated.modDate":"string","attrs.updated.value":"string","attrs.updated.mdNames":"string","creDate":"string","modDate":"string","location.attrName":"string","location.coords.type":"string","location.coords.coordinates":"string","lastCorrelator":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"zeppelin-highcharts-scatterplot":{"category":{"name":"_id.id","index":0,"aggr":"sum"},"xAxis":{"name":"attrs.temperature.value","index":4,"aggr":"sum"},"yAxis":{"name":"attrs.humidity.value","index":9,"aggr":"sum"}}},"commonSetting":null,"keys":[{"name":"_id.id","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"attrs.humidity.value","index":9,"aggr":"sum"}]},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"vvi2o-109"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
 INFO [2021-07-20 14:10:30,785] ({qtp1864350231-162} NotebookServer.java[onClose]:474) - Closed connection to 172.18.0.1:62850 (1006) Disconnected
 INFO [2021-07-20 14:10:32,669] ({qtp1864350231-195} NotebookServer.java[onOpen]:247) - New connection from 172.18.0.1:64700
ERROR [2021-07-20 14:20:46,047] ({qtp1864350231-200} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626717914426_1775547677","noteId":"2GCS1KRJS","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"zeppelin-highcharts-scatterplot","height":300,"optionOpen":true,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","_id.type":"string","_id.servicePath":"string","attrNames":"string","attrs.temperature.value":"string","attrs.temperature.type":"string","attrs.temperature.mdNames":"string","attrs.temperature.creDate":"string","attrs.temperature.modDate":"string","attrs.humidity.value":"string","attrs.humidity.type":"string","attrs.humidity.mdNames":"string","attrs.humidity.creDate":"string","attrs.humidity.modDate":"string","attrs.location.type":"string","attrs.location.creDate":"string","attrs.location.modDate":"string","attrs.location.value":"string","attrs.location.mdNames":"string","attrs.updated.type":"string","attrs.updated.creDate":"string","attrs.updated.modDate":"string","attrs.updated.value":"string","attrs.updated.mdNames":"string","creDate":"string","modDate":"string","location.attrName":"string","location.coords.type":"string","location.coords.coordinates":"string","lastCorrelator":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"zeppelin-highcharts-scatterplot":{"category":{"name":"_id.id","index":0,"aggr":"sum"},"xAxis":{"name":"attrs.temperature.value","index":4,"aggr":"sum"},"yAxis":{"name":"attrs.humidity.value","index":9,"aggr":"sum"}}},"keys":[{"name":"_id.id","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"attrs.humidity.value","index":9,"aggr":"sum"}]},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"vvi2o-200"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 14:20:53,042] ({qtp1864350231-200} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626717914426_1775547677","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"zeppelin-bubblechart","height":300,"optionOpen":true,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","_id.type":"string","_id.servicePath":"string","attrNames":"string","attrs.temperature.value":"string","attrs.temperature.type":"string","attrs.temperature.mdNames":"string","attrs.temperature.creDate":"string","attrs.temperature.modDate":"string","attrs.humidity.value":"string","attrs.humidity.type":"string","attrs.humidity.mdNames":"string","attrs.humidity.creDate":"string","attrs.humidity.modDate":"string","attrs.location.type":"string","attrs.location.creDate":"string","attrs.location.modDate":"string","attrs.location.value":"string","attrs.location.mdNames":"string","attrs.updated.type":"string","attrs.updated.creDate":"string","attrs.updated.modDate":"string","attrs.updated.value":"string","attrs.updated.mdNames":"string","creDate":"string","modDate":"string","location.attrName":"string","location.coords.type":"string","location.coords.coordinates":"string","lastCorrelator":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"zeppelin-highcharts-scatterplot":{"category":{"name":"_id.id","index":0,"aggr":"sum"},"xAxis":{"name":"attrs.temperature.value","index":4,"aggr":"sum"},"yAxis":{"name":"attrs.humidity.value","index":9,"aggr":"sum"}}},"keys":[{"name":"_id.id","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"attrs.humidity.value","index":9,"aggr":"sum"}]},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"vvi2o-202"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 14:21:07,797] ({qtp1864350231-173} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626717914426_1775547677","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"zeppelin-bubblechart","height":300,"optionOpen":true,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","_id.type":"string","_id.servicePath":"string","attrNames":"string","attrs.temperature.value":"string","attrs.temperature.type":"string","attrs.temperature.mdNames":"string","attrs.temperature.creDate":"string","attrs.temperature.modDate":"string","attrs.humidity.value":"string","attrs.humidity.type":"string","attrs.humidity.mdNames":"string","attrs.humidity.creDate":"string","attrs.humidity.modDate":"string","attrs.location.type":"string","attrs.location.creDate":"string","attrs.location.modDate":"string","attrs.location.value":"string","attrs.location.mdNames":"string","attrs.updated.type":"string","attrs.updated.creDate":"string","attrs.updated.modDate":"string","attrs.updated.value":"string","attrs.updated.mdNames":"string","creDate":"string","modDate":"string","location.attrName":"string","location.coords.type":"string","location.coords.coordinates":"string","lastCorrelator":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"zeppelin-highcharts-scatterplot":{"category":{"name":"_id.id","index":0,"aggr":"sum"},"xAxis":{"name":"attrs.temperature.value","index":4,"aggr":"sum"},"yAxis":{"name":"attrs.humidity.value","index":9,"aggr":"sum"}},"zeppelin-bubblechart":{"name":{"name":"_id.id","index":0,"aggr":"sum"}}},"keys":[{"name":"_id.id","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"attrs.humidity.value","index":9,"aggr":"sum"}],"commonSetting":null},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"vvi2o-204"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 14:21:14,340] ({qtp1864350231-201} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626717914426_1775547677","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"zeppelin-bubblechart","height":300,"optionOpen":true,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","_id.type":"string","_id.servicePath":"string","attrNames":"string","attrs.temperature.value":"string","attrs.temperature.type":"string","attrs.temperature.mdNames":"string","attrs.temperature.creDate":"string","attrs.temperature.modDate":"string","attrs.humidity.value":"string","attrs.humidity.type":"string","attrs.humidity.mdNames":"string","attrs.humidity.creDate":"string","attrs.humidity.modDate":"string","attrs.location.type":"string","attrs.location.creDate":"string","attrs.location.modDate":"string","attrs.location.value":"string","attrs.location.mdNames":"string","attrs.updated.type":"string","attrs.updated.creDate":"string","attrs.updated.modDate":"string","attrs.updated.value":"string","attrs.updated.mdNames":"string","creDate":"string","modDate":"string","location.attrName":"string","location.coords.type":"string","location.coords.coordinates":"string","lastCorrelator":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"zeppelin-highcharts-scatterplot":{"category":{"name":"_id.id","index":0,"aggr":"sum"},"xAxis":{"name":"attrs.temperature.value","index":4,"aggr":"sum"},"yAxis":{"name":"attrs.humidity.value","index":9,"aggr":"sum"}},"zeppelin-bubblechart":{"name":{"name":"_id.id","index":0,"aggr":"sum"},"value":{"name":"attrs.temperature.value","index":4,"aggr":"sum"}}},"keys":[{"name":"_id.id","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"attrs.humidity.value","index":9,"aggr":"sum"}],"commonSetting":null},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"vvi2o-206"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 14:21:28,776] ({qtp1864350231-201} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626717914426_1775547677","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"zeppelin-bubblechart","height":300,"optionOpen":true,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","_id.type":"string","_id.servicePath":"string","attrNames":"string","attrs.temperature.value":"string","attrs.temperature.type":"string","attrs.temperature.mdNames":"string","attrs.temperature.creDate":"string","attrs.temperature.modDate":"string","attrs.humidity.value":"string","attrs.humidity.type":"string","attrs.humidity.mdNames":"string","attrs.humidity.creDate":"string","attrs.humidity.modDate":"string","attrs.location.type":"string","attrs.location.creDate":"string","attrs.location.modDate":"string","attrs.location.value":"string","attrs.location.mdNames":"string","attrs.updated.type":"string","attrs.updated.creDate":"string","attrs.updated.modDate":"string","attrs.updated.value":"string","attrs.updated.mdNames":"string","creDate":"string","modDate":"string","location.attrName":"string","location.coords.type":"string","location.coords.coordinates":"string","lastCorrelator":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"zeppelin-highcharts-scatterplot":{"category":{"name":"_id.id","index":0,"aggr":"sum"},"xAxis":{"name":"attrs.temperature.value","index":4,"aggr":"sum"},"yAxis":{"name":"attrs.humidity.value","index":9,"aggr":"sum"}},"zeppelin-bubblechart":{"name":{"name":"_id.id","index":0,"aggr":"sum"},"value":{"name":"attrs.temperature.value","index":4,"aggr":"sum"},"color":{"name":"location.coords.coordinates","index":28,"aggr":"sum"}}},"keys":[{"name":"_id.id","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"attrs.humidity.value","index":9,"aggr":"sum"}],"commonSetting":null},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"vvi2o-208"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 14:21:36,544] ({qtp1864350231-173} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626717914426_1775547677","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"zeppelin-highcharts-bubble","height":300,"optionOpen":true,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","_id.type":"string","_id.servicePath":"string","attrNames":"string","attrs.temperature.value":"string","attrs.temperature.type":"string","attrs.temperature.mdNames":"string","attrs.temperature.creDate":"string","attrs.temperature.modDate":"string","attrs.humidity.value":"string","attrs.humidity.type":"string","attrs.humidity.mdNames":"string","attrs.humidity.creDate":"string","attrs.humidity.modDate":"string","attrs.location.type":"string","attrs.location.creDate":"string","attrs.location.modDate":"string","attrs.location.value":"string","attrs.location.mdNames":"string","attrs.updated.type":"string","attrs.updated.creDate":"string","attrs.updated.modDate":"string","attrs.updated.value":"string","attrs.updated.mdNames":"string","creDate":"string","modDate":"string","location.attrName":"string","location.coords.type":"string","location.coords.coordinates":"string","lastCorrelator":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"zeppelin-highcharts-scatterplot":{"category":{"name":"_id.id","index":0,"aggr":"sum"},"xAxis":{"name":"attrs.temperature.value","index":4,"aggr":"sum"},"yAxis":{"name":"attrs.humidity.value","index":9,"aggr":"sum"}},"zeppelin-bubblechart":{"name":{"name":"_id.id","index":0,"aggr":"sum"},"value":{"name":"attrs.temperature.value","index":4,"aggr":"sum"},"color":{"name":"location.coords.coordinates","index":28,"aggr":"sum"}}},"keys":[{"name":"_id.id","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"attrs.humidity.value","index":9,"aggr":"sum"}],"commonSetting":null},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"vvi2o-210"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 14:21:45,903] ({qtp1864350231-200} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626717914426_1775547677","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"zeppelin-highcharts-bubble","height":300,"optionOpen":true,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","_id.type":"string","_id.servicePath":"string","attrNames":"string","attrs.temperature.value":"string","attrs.temperature.type":"string","attrs.temperature.mdNames":"string","attrs.temperature.creDate":"string","attrs.temperature.modDate":"string","attrs.humidity.value":"string","attrs.humidity.type":"string","attrs.humidity.mdNames":"string","attrs.humidity.creDate":"string","attrs.humidity.modDate":"string","attrs.location.type":"string","attrs.location.creDate":"string","attrs.location.modDate":"string","attrs.location.value":"string","attrs.location.mdNames":"string","attrs.updated.type":"string","attrs.updated.creDate":"string","attrs.updated.modDate":"string","attrs.updated.value":"string","attrs.updated.mdNames":"string","creDate":"string","modDate":"string","location.attrName":"string","location.coords.type":"string","location.coords.coordinates":"string","lastCorrelator":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"zeppelin-highcharts-scatterplot":{"category":{"name":"_id.id","index":0,"aggr":"sum"},"xAxis":{"name":"attrs.temperature.value","index":4,"aggr":"sum"},"yAxis":{"name":"attrs.humidity.value","index":9,"aggr":"sum"}},"zeppelin-bubblechart":{"name":{"name":"_id.id","index":0,"aggr":"sum"},"value":{"name":"attrs.temperature.value","index":4,"aggr":"sum"},"color":{"name":"location.coords.coordinates","index":28,"aggr":"sum"}},"zeppelin-highcharts-bubble":{"xAxis":{"name":"location.coords.coordinates","index":28,"aggr":"sum"}}},"keys":[{"name":"_id.id","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"attrs.humidity.value","index":9,"aggr":"sum"}],"commonSetting":null},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"vvi2o-212"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 14:21:52,201] ({qtp1864350231-100} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626717914426_1775547677","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"zeppelin-highcharts-bubble","height":300,"optionOpen":true,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","_id.type":"string","_id.servicePath":"string","attrNames":"string","attrs.temperature.value":"string","attrs.temperature.type":"string","attrs.temperature.mdNames":"string","attrs.temperature.creDate":"string","attrs.temperature.modDate":"string","attrs.humidity.value":"string","attrs.humidity.type":"string","attrs.humidity.mdNames":"string","attrs.humidity.creDate":"string","attrs.humidity.modDate":"string","attrs.location.type":"string","attrs.location.creDate":"string","attrs.location.modDate":"string","attrs.location.value":"string","attrs.location.mdNames":"string","attrs.updated.type":"string","attrs.updated.creDate":"string","attrs.updated.modDate":"string","attrs.updated.value":"string","attrs.updated.mdNames":"string","creDate":"string","modDate":"string","location.attrName":"string","location.coords.type":"string","location.coords.coordinates":"string","lastCorrelator":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"zeppelin-highcharts-scatterplot":{"category":{"name":"_id.id","index":0,"aggr":"sum"},"xAxis":{"name":"attrs.temperature.value","index":4,"aggr":"sum"},"yAxis":{"name":"attrs.humidity.value","index":9,"aggr":"sum"}},"zeppelin-bubblechart":{"name":{"name":"_id.id","index":0,"aggr":"sum"},"value":{"name":"attrs.temperature.value","index":4,"aggr":"sum"},"color":{"name":"location.coords.coordinates","index":28,"aggr":"sum"}},"zeppelin-highcharts-bubble":{"xAxis":{"name":"location.coords.coordinates","index":28,"aggr":"sum"},"yAxis":{"name":"_id.id","index":0,"aggr":"sum"}}},"keys":[{"name":"_id.id","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"attrs.humidity.value","index":9,"aggr":"sum"}],"commonSetting":null},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"vvi2o-214"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 14:21:57,393] ({qtp1864350231-100} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626717914426_1775547677","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"stackedAreaChart","height":300,"optionOpen":true,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","_id.type":"string","_id.servicePath":"string","attrNames":"string","attrs.temperature.value":"string","attrs.temperature.type":"string","attrs.temperature.mdNames":"string","attrs.temperature.creDate":"string","attrs.temperature.modDate":"string","attrs.humidity.value":"string","attrs.humidity.type":"string","attrs.humidity.mdNames":"string","attrs.humidity.creDate":"string","attrs.humidity.modDate":"string","attrs.location.type":"string","attrs.location.creDate":"string","attrs.location.modDate":"string","attrs.location.value":"string","attrs.location.mdNames":"string","attrs.updated.type":"string","attrs.updated.creDate":"string","attrs.updated.modDate":"string","attrs.updated.value":"string","attrs.updated.mdNames":"string","creDate":"string","modDate":"string","location.attrName":"string","location.coords.type":"string","location.coords.coordinates":"string","lastCorrelator":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"zeppelin-highcharts-scatterplot":{"category":{"name":"_id.id","index":0,"aggr":"sum"},"xAxis":{"name":"attrs.temperature.value","index":4,"aggr":"sum"},"yAxis":{"name":"attrs.humidity.value","index":9,"aggr":"sum"}},"zeppelin-bubblechart":{"name":{"name":"_id.id","index":0,"aggr":"sum"},"value":{"name":"attrs.temperature.value","index":4,"aggr":"sum"},"color":{"name":"location.coords.coordinates","index":28,"aggr":"sum"}},"zeppelin-highcharts-bubble":{"xAxis":{"name":"location.coords.coordinates","index":28,"aggr":"sum"},"yAxis":{"name":"_id.id","index":0,"aggr":"sum"}}},"keys":[{"name":"_id.id","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"attrs.humidity.value","index":9,"aggr":"sum"}],"commonSetting":null},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"vvi2o-215"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 14:21:57,447] ({qtp1864350231-201} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626717914426_1775547677","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"stackedAreaChart","height":300,"optionOpen":true,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","_id.type":"string","_id.servicePath":"string","attrNames":"string","attrs.temperature.value":"string","attrs.temperature.type":"string","attrs.temperature.mdNames":"string","attrs.temperature.creDate":"string","attrs.temperature.modDate":"string","attrs.humidity.value":"string","attrs.humidity.type":"string","attrs.humidity.mdNames":"string","attrs.humidity.creDate":"string","attrs.humidity.modDate":"string","attrs.location.type":"string","attrs.location.creDate":"string","attrs.location.modDate":"string","attrs.location.value":"string","attrs.location.mdNames":"string","attrs.updated.type":"string","attrs.updated.creDate":"string","attrs.updated.modDate":"string","attrs.updated.value":"string","attrs.updated.mdNames":"string","creDate":"string","modDate":"string","location.attrName":"string","location.coords.type":"string","location.coords.coordinates":"string","lastCorrelator":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"zeppelin-highcharts-scatterplot":{"category":{"name":"_id.id","index":0,"aggr":"sum"},"xAxis":{"name":"attrs.temperature.value","index":4,"aggr":"sum"},"yAxis":{"name":"attrs.humidity.value","index":9,"aggr":"sum"}},"zeppelin-bubblechart":{"name":{"name":"_id.id","index":0,"aggr":"sum"},"value":{"name":"attrs.temperature.value","index":4,"aggr":"sum"},"color":{"name":"location.coords.coordinates","index":28,"aggr":"sum"}},"zeppelin-highcharts-bubble":{"xAxis":{"name":"location.coords.coordinates","index":28,"aggr":"sum"},"yAxis":{"name":"_id.id","index":0,"aggr":"sum"}},"stackedAreaChart":{"rotate":{"degree":"-45"}}},"keys":[{"name":"_id.id","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"attrs.humidity.value","index":9,"aggr":"sum"}],"commonSetting":{}},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"vvi2o-216"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 14:21:57,461] ({qtp1864350231-201} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626717914426_1775547677","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"stackedAreaChart","height":300,"optionOpen":true,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","_id.type":"string","_id.servicePath":"string","attrNames":"string","attrs.temperature.value":"string","attrs.temperature.type":"string","attrs.temperature.mdNames":"string","attrs.temperature.creDate":"string","attrs.temperature.modDate":"string","attrs.humidity.value":"string","attrs.humidity.type":"string","attrs.humidity.mdNames":"string","attrs.humidity.creDate":"string","attrs.humidity.modDate":"string","attrs.location.type":"string","attrs.location.creDate":"string","attrs.location.modDate":"string","attrs.location.value":"string","attrs.location.mdNames":"string","attrs.updated.type":"string","attrs.updated.creDate":"string","attrs.updated.modDate":"string","attrs.updated.value":"string","attrs.updated.mdNames":"string","creDate":"string","modDate":"string","location.attrName":"string","location.coords.type":"string","location.coords.coordinates":"string","lastCorrelator":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"zeppelin-highcharts-scatterplot":{"category":{"name":"_id.id","index":0,"aggr":"sum"},"xAxis":{"name":"attrs.temperature.value","index":4,"aggr":"sum"},"yAxis":{"name":"attrs.humidity.value","index":9,"aggr":"sum"}},"zeppelin-bubblechart":{"name":{"name":"_id.id","index":0,"aggr":"sum"},"value":{"name":"attrs.temperature.value","index":4,"aggr":"sum"},"color":{"name":"location.coords.coordinates","index":28,"aggr":"sum"}},"zeppelin-highcharts-bubble":{"xAxis":{"name":"location.coords.coordinates","index":28,"aggr":"sum"},"yAxis":{"name":"_id.id","index":0,"aggr":"sum"}},"stackedAreaChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"keys":[{"name":"_id.id","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"attrs.humidity.value","index":9,"aggr":"sum"}],"commonSetting":{}},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"vvi2o-217"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 14:22:10,171] ({qtp1864350231-200} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626717914426_1775547677","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"stackedAreaChart","height":300,"optionOpen":true,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","_id.type":"string","_id.servicePath":"string","attrNames":"string","attrs.temperature.value":"string","attrs.temperature.type":"string","attrs.temperature.mdNames":"string","attrs.temperature.creDate":"string","attrs.temperature.modDate":"string","attrs.humidity.value":"string","attrs.humidity.type":"string","attrs.humidity.mdNames":"string","attrs.humidity.creDate":"string","attrs.humidity.modDate":"string","attrs.location.type":"string","attrs.location.creDate":"string","attrs.location.modDate":"string","attrs.location.value":"string","attrs.location.mdNames":"string","attrs.updated.type":"string","attrs.updated.creDate":"string","attrs.updated.modDate":"string","attrs.updated.value":"string","attrs.updated.mdNames":"string","creDate":"string","modDate":"string","location.attrName":"string","location.coords.type":"string","location.coords.coordinates":"string","lastCorrelator":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"zeppelin-highcharts-scatterplot":{"category":{"name":"_id.id","index":0,"aggr":"sum"},"xAxis":{"name":"attrs.temperature.value","index":4,"aggr":"sum"},"yAxis":{"name":"attrs.humidity.value","index":9,"aggr":"sum"}},"zeppelin-bubblechart":{"name":{"name":"_id.id","index":0,"aggr":"sum"},"value":{"name":"attrs.temperature.value","index":4,"aggr":"sum"},"color":{"name":"location.coords.coordinates","index":28,"aggr":"sum"}},"zeppelin-highcharts-bubble":{"xAxis":{"name":"location.coords.coordinates","index":28,"aggr":"sum"},"yAxis":{"name":"_id.id","index":0,"aggr":"sum"}},"stackedAreaChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default","style":"stream"}},"keys":[{"name":"_id.id","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"attrs.humidity.value","index":9,"aggr":"sum"}],"commonSetting":{}},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"vvi2o-219"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 14:22:18,396] ({qtp1864350231-173} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626717914426_1775547677","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"stackedAreaChart","height":300,"optionOpen":true,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","_id.type":"string","_id.servicePath":"string","attrNames":"string","attrs.temperature.value":"string","attrs.temperature.type":"string","attrs.temperature.mdNames":"string","attrs.temperature.creDate":"string","attrs.temperature.modDate":"string","attrs.humidity.value":"string","attrs.humidity.type":"string","attrs.humidity.mdNames":"string","attrs.humidity.creDate":"string","attrs.humidity.modDate":"string","attrs.location.type":"string","attrs.location.creDate":"string","attrs.location.modDate":"string","attrs.location.value":"string","attrs.location.mdNames":"string","attrs.updated.type":"string","attrs.updated.creDate":"string","attrs.updated.modDate":"string","attrs.updated.value":"string","attrs.updated.mdNames":"string","creDate":"string","modDate":"string","location.attrName":"string","location.coords.type":"string","location.coords.coordinates":"string","lastCorrelator":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"zeppelin-highcharts-scatterplot":{"category":{"name":"_id.id","index":0,"aggr":"sum"},"xAxis":{"name":"attrs.temperature.value","index":4,"aggr":"sum"},"yAxis":{"name":"attrs.humidity.value","index":9,"aggr":"sum"}},"zeppelin-bubblechart":{"name":{"name":"_id.id","index":0,"aggr":"sum"},"value":{"name":"attrs.temperature.value","index":4,"aggr":"sum"},"color":{"name":"location.coords.coordinates","index":28,"aggr":"sum"}},"zeppelin-highcharts-bubble":{"xAxis":{"name":"location.coords.coordinates","index":28,"aggr":"sum"},"yAxis":{"name":"_id.id","index":0,"aggr":"sum"}},"stackedAreaChart":{"rotate":{"degree":"-45"},"xLabelStatus":"hide","style":"stream"}},"keys":[{"name":"_id.id","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"attrs.humidity.value","index":9,"aggr":"sum"}],"commonSetting":{}},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"vvi2o-221"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 14:38:35,186] ({qtp1864350231-201} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626717914426_1775547677","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":true,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","_id.type":"string","_id.servicePath":"string","attrNames":"string","attrs.temperature.value":"string","attrs.temperature.type":"string","attrs.temperature.mdNames":"string","attrs.temperature.creDate":"string","attrs.temperature.modDate":"string","attrs.humidity.value":"string","attrs.humidity.type":"string","attrs.humidity.mdNames":"string","attrs.humidity.creDate":"string","attrs.humidity.modDate":"string","attrs.location.type":"string","attrs.location.creDate":"string","attrs.location.modDate":"string","attrs.location.value":"string","attrs.location.mdNames":"string","attrs.updated.type":"string","attrs.updated.creDate":"string","attrs.updated.modDate":"string","attrs.updated.value":"string","attrs.updated.mdNames":"string","creDate":"string","modDate":"string","location.attrName":"string","location.coords.type":"string","location.coords.coordinates":"string","lastCorrelator":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"zeppelin-highcharts-scatterplot":{"category":{"name":"_id.id","index":0,"aggr":"sum"},"xAxis":{"name":"attrs.temperature.value","index":4,"aggr":"sum"},"yAxis":{"name":"attrs.humidity.value","index":9,"aggr":"sum"}},"zeppelin-bubblechart":{"name":{"name":"_id.id","index":0,"aggr":"sum"},"value":{"name":"attrs.temperature.value","index":4,"aggr":"sum"},"color":{"name":"location.coords.coordinates","index":28,"aggr":"sum"}},"zeppelin-highcharts-bubble":{"xAxis":{"name":"location.coords.coordinates","index":28,"aggr":"sum"},"yAxis":{"name":"_id.id","index":0,"aggr":"sum"}},"stackedAreaChart":{"rotate":{"degree":"-45"},"xLabelStatus":"hide","style":"stream"}},"keys":[{"name":"_id.id","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"attrs.humidity.value","index":9,"aggr":"sum"}],"commonSetting":{}},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"vvi2o-265"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 14:38:59,568] ({qtp1864350231-201} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626717914426_1775547677","noteId":"2GCS1KRJS","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}).project({}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"zeppelin-highcharts-scatterplot","height":300,"optionOpen":true,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","_id.type":"string","_id.servicePath":"string","attrNames":"string","attrs.temperature.value":"string","attrs.temperature.type":"string","attrs.temperature.mdNames":"string","attrs.temperature.creDate":"string","attrs.temperature.modDate":"string","attrs.humidity.value":"string","attrs.humidity.type":"string","attrs.humidity.mdNames":"string","attrs.humidity.creDate":"string","attrs.humidity.modDate":"string","attrs.location.type":"string","attrs.location.creDate":"string","attrs.location.modDate":"string","attrs.location.value":"string","attrs.location.mdNames":"string","attrs.updated.type":"string","attrs.updated.creDate":"string","attrs.updated.modDate":"string","attrs.updated.value":"string","attrs.updated.mdNames":"string","creDate":"string","modDate":"string","location.attrName":"string","location.coords.type":"string","location.coords.coordinates":"string","lastCorrelator":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"zeppelin-highcharts-scatterplot":{"category":{"name":"_id.id","index":0,"aggr":"sum"},"xAxis":{"name":"attrs.temperature.value","index":4,"aggr":"sum"},"yAxis":{"name":"attrs.humidity.value","index":9,"aggr":"sum"}}},"keys":[{"name":"_id.id","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"attrs.humidity.value","index":9,"aggr":"sum"}]},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"vvi2o-268"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
 INFO [2021-07-20 14:39:12,393] ({qtp1864350231-198} NotebookServer.java[onClose]:474) - Closed connection to 172.18.0.1:64700 (1001) null
 WARN [2021-07-20 14:57:40,413] ({qtp1864350231-201} SecurityRestApi.java[ticket]:89) - {"status":"OK","message":"","body":{"principal":"anonymous","ticket":"anonymous","roles":"[]"}}
 INFO [2021-07-20 14:57:40,488] ({qtp1864350231-198} NotebookServer.java[onOpen]:247) - New connection from 172.18.0.1:60318
 WARN [2021-07-20 14:57:40,606] ({qtp1864350231-201} ClusterRestApi.java[<init>]:61) - Cluster mode is disabled, ClusterRestApi won't work
ERROR [2021-07-20 14:57:45,418] ({qtp1864350231-198} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626717914426_1775547677","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}).project({}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":true,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","_id.type":"string","_id.servicePath":"string","attrNames":"string","attrs.temperature.value":"string","attrs.temperature.type":"string","attrs.temperature.mdNames":"string","attrs.temperature.creDate":"string","attrs.temperature.modDate":"string","attrs.humidity.value":"string","attrs.humidity.type":"string","attrs.humidity.mdNames":"string","attrs.humidity.creDate":"string","attrs.humidity.modDate":"string","attrs.location.type":"string","attrs.location.creDate":"string","attrs.location.modDate":"string","attrs.location.value":"string","attrs.location.mdNames":"string","attrs.updated.type":"string","attrs.updated.creDate":"string","attrs.updated.modDate":"string","attrs.updated.value":"string","attrs.updated.mdNames":"string","creDate":"string","modDate":"string","location.attrName":"string","location.coords.type":"string","location.coords.coordinates":"string","lastCorrelator":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"zeppelin-highcharts-scatterplot":{"category":{"name":"_id.id","index":0,"aggr":"sum"},"xAxis":{"name":"attrs.temperature.value","index":4,"aggr":"sum"},"yAxis":{"name":"attrs.humidity.value","index":9,"aggr":"sum"}}},"keys":[{"name":"_id.id","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"attrs.humidity.value","index":9,"aggr":"sum"}]},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-11"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 14:58:46,081] ({qtp1864350231-100} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626717914426_1775547677","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}).project({}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":688.641,"optionOpen":true,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","_id.type":"string","_id.servicePath":"string","attrNames":"string","attrs.temperature.value":"string","attrs.temperature.type":"string","attrs.temperature.mdNames":"string","attrs.temperature.creDate":"string","attrs.temperature.modDate":"string","attrs.humidity.value":"string","attrs.humidity.type":"string","attrs.humidity.mdNames":"string","attrs.humidity.creDate":"string","attrs.humidity.modDate":"string","attrs.location.type":"string","attrs.location.creDate":"string","attrs.location.modDate":"string","attrs.location.value":"string","attrs.location.mdNames":"string","attrs.updated.type":"string","attrs.updated.creDate":"string","attrs.updated.modDate":"string","attrs.updated.value":"string","attrs.updated.mdNames":"string","creDate":"string","modDate":"string","location.attrName":"string","location.coords.type":"string","location.coords.coordinates":"string","lastCorrelator":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"zeppelin-highcharts-scatterplot":{"category":{"name":"_id.id","index":0,"aggr":"sum"},"xAxis":{"name":"attrs.temperature.value","index":4,"aggr":"sum"},"yAxis":{"name":"attrs.humidity.value","index":9,"aggr":"sum"}}},"keys":[{"name":"_id.id","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"attrs.humidity.value","index":9,"aggr":"sum"}]},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-18"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 14:59:22,990] ({qtp1864350231-100} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626717914426_1775547677","noteId":"2GCS1KRJS","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}).project({\"attr\": 1}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"zeppelin-highcharts-scatterplot","height":300,"optionOpen":true,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","_id.type":"string","_id.servicePath":"string","attrNames":"string","attrs.temperature.value":"string","attrs.temperature.type":"string","attrs.temperature.mdNames":"string","attrs.temperature.creDate":"string","attrs.temperature.modDate":"string","attrs.humidity.value":"string","attrs.humidity.type":"string","attrs.humidity.mdNames":"string","attrs.humidity.creDate":"string","attrs.humidity.modDate":"string","attrs.location.type":"string","attrs.location.creDate":"string","attrs.location.modDate":"string","attrs.location.value":"string","attrs.location.mdNames":"string","attrs.updated.type":"string","attrs.updated.creDate":"string","attrs.updated.modDate":"string","attrs.updated.value":"string","attrs.updated.mdNames":"string","creDate":"string","modDate":"string","location.attrName":"string","location.coords.type":"string","location.coords.coordinates":"string","lastCorrelator":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"zeppelin-highcharts-scatterplot":{"category":{"name":"_id.id","index":0,"aggr":"sum"},"xAxis":{"name":"attrs.temperature.value","index":4,"aggr":"sum"},"yAxis":{"name":"attrs.humidity.value","index":9,"aggr":"sum"}}},"keys":[{"name":"_id.id","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"attrs.humidity.value","index":9,"aggr":"sum"}]},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-23"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
 INFO [2021-07-20 14:59:25,456] ({qtp1864350231-100} NotebookService.java[runParagraph]:324) - Start to run paragraph: paragraph_1626717914426_1775547677 of note: 2GCS1KRJS
ERROR [2021-07-20 14:59:25,461] ({qtp1864350231-100} NotebookService.java[runParagraph]:372) - Exception from run
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.runParagraph(NotebookService.java:367)
	at org.apache.zeppelin.socket.NotebookServer.runParagraph(NotebookServer.java:1525)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:356)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 14:59:25,469] ({qtp1864350231-100} NotebookServer.java[onStatusChange]:1920) - Error
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.runParagraph(NotebookService.java:367)
	at org.apache.zeppelin.socket.NotebookServer.runParagraph(NotebookServer.java:1525)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:356)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
 WARN [2021-07-20 14:59:25,471] ({qtp1864350231-100} NotebookServer.java[onStatusChange]:1928) - Job paragraph_1626717914426_1775547677 is finished, status: ERROR, exception: java.lang.IllegalArgumentException: Invalid BSON field name _id.id, result: %text Invalid BSON field name _id.id
ERROR [2021-07-20 14:59:25,473] ({qtp1864350231-100} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"RUN_PARAGRAPH","data":{"id":"paragraph_1626717914426_1775547677","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}).project({\"attr\": 1}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"zeppelin-highcharts-scatterplot","height":300,"optionOpen":true,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","_id.type":"string","_id.servicePath":"string","attrNames":"string","attrs.temperature.value":"string","attrs.temperature.type":"string","attrs.temperature.mdNames":"string","attrs.temperature.creDate":"string","attrs.temperature.modDate":"string","attrs.humidity.value":"string","attrs.humidity.type":"string","attrs.humidity.mdNames":"string","attrs.humidity.creDate":"string","attrs.humidity.modDate":"string","attrs.location.type":"string","attrs.location.creDate":"string","attrs.location.modDate":"string","attrs.location.value":"string","attrs.location.mdNames":"string","attrs.updated.type":"string","attrs.updated.creDate":"string","attrs.updated.modDate":"string","attrs.updated.value":"string","attrs.updated.mdNames":"string","creDate":"string","modDate":"string","location.attrName":"string","location.coords.type":"string","location.coords.coordinates":"string","lastCorrelator":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"zeppelin-highcharts-scatterplot":{"category":{"name":"_id.id","index":0,"aggr":"sum"},"xAxis":{"name":"attrs.temperature.value","index":4,"aggr":"sum"},"yAxis":{"name":"attrs.humidity.value","index":9,"aggr":"sum"}}},"keys":[{"name":"_id.id","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"attrs.humidity.value","index":9,"aggr":"sum"}]},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-24"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.socket.NotebookServer.onStatusChange(NotebookServer.java:1939)
	at org.apache.zeppelin.socket.NotebookServer.onStatusChange(NotebookServer.java:106)
	at org.apache.zeppelin.scheduler.Job.setStatus(Job.java:141)
	at org.apache.zeppelin.notebook.Paragraph.setStatus(Paragraph.java:402)
	at org.apache.zeppelin.service.NotebookService.runParagraph(NotebookService.java:374)
	at org.apache.zeppelin.socket.NotebookServer.runParagraph(NotebookServer.java:1525)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:356)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:00:18,033] ({qtp1864350231-201} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626717914426_1775547677","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}).project({\"attr\": 1}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":688.641,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","_id.type":"string","_id.servicePath":"string","attrNames":"string","attrs.temperature.value":"string","attrs.temperature.type":"string","attrs.temperature.mdNames":"string","attrs.temperature.creDate":"string","attrs.temperature.modDate":"string","attrs.humidity.value":"string","attrs.humidity.type":"string","attrs.humidity.mdNames":"string","attrs.humidity.creDate":"string","attrs.humidity.modDate":"string","attrs.location.type":"string","attrs.location.creDate":"string","attrs.location.modDate":"string","attrs.location.value":"string","attrs.location.mdNames":"string","attrs.updated.type":"string","attrs.updated.creDate":"string","attrs.updated.modDate":"string","attrs.updated.value":"string","attrs.updated.mdNames":"string","creDate":"string","modDate":"string","location.attrName":"string","location.coords.type":"string","location.coords.coordinates":"string","lastCorrelator":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"zeppelin-highcharts-scatterplot":{"category":{"name":"_id.id","index":0,"aggr":"sum"},"xAxis":{"name":"attrs.temperature.value","index":4,"aggr":"sum"},"yAxis":{"name":"attrs.humidity.value","index":9,"aggr":"sum"}}},"keys":[{"name":"_id.id","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"attrs.humidity.value","index":9,"aggr":"sum"}]},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-30"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:00:22,933] ({qtp1864350231-201} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626717914426_1775547677","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}).project({\"attr\": 1}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"multiBarChart","height":688.641,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","_id.type":"string","_id.servicePath":"string","attrNames":"string","attrs.temperature.value":"string","attrs.temperature.type":"string","attrs.temperature.mdNames":"string","attrs.temperature.creDate":"string","attrs.temperature.modDate":"string","attrs.humidity.value":"string","attrs.humidity.type":"string","attrs.humidity.mdNames":"string","attrs.humidity.creDate":"string","attrs.humidity.modDate":"string","attrs.location.type":"string","attrs.location.creDate":"string","attrs.location.modDate":"string","attrs.location.value":"string","attrs.location.mdNames":"string","attrs.updated.type":"string","attrs.updated.creDate":"string","attrs.updated.modDate":"string","attrs.updated.value":"string","attrs.updated.mdNames":"string","creDate":"string","modDate":"string","location.attrName":"string","location.coords.type":"string","location.coords.coordinates":"string","lastCorrelator":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"zeppelin-highcharts-scatterplot":{"category":{"name":"_id.id","index":0,"aggr":"sum"},"xAxis":{"name":"attrs.temperature.value","index":4,"aggr":"sum"},"yAxis":{"name":"attrs.humidity.value","index":9,"aggr":"sum"}}},"keys":[{"name":"_id.id","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"attrs.humidity.value","index":9,"aggr":"sum"}]},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-32"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:00:31,551] ({qtp1864350231-194} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626717914426_1775547677","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}).project({\"attr\": 1}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"pieChart","height":688.641,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","_id.type":"string","_id.servicePath":"string","attrNames":"string","attrs.temperature.value":"string","attrs.temperature.type":"string","attrs.temperature.mdNames":"string","attrs.temperature.creDate":"string","attrs.temperature.modDate":"string","attrs.humidity.value":"string","attrs.humidity.type":"string","attrs.humidity.mdNames":"string","attrs.humidity.creDate":"string","attrs.humidity.modDate":"string","attrs.location.type":"string","attrs.location.creDate":"string","attrs.location.modDate":"string","attrs.location.value":"string","attrs.location.mdNames":"string","attrs.updated.type":"string","attrs.updated.creDate":"string","attrs.updated.modDate":"string","attrs.updated.value":"string","attrs.updated.mdNames":"string","creDate":"string","modDate":"string","location.attrName":"string","location.coords.type":"string","location.coords.coordinates":"string","lastCorrelator":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"zeppelin-highcharts-scatterplot":{"category":{"name":"_id.id","index":0,"aggr":"sum"},"xAxis":{"name":"attrs.temperature.value","index":4,"aggr":"sum"},"yAxis":{"name":"attrs.humidity.value","index":9,"aggr":"sum"}}},"keys":[{"name":"_id.id","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"attrs.humidity.value","index":9,"aggr":"sum"}]},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-34"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:00:36,874] ({qtp1864350231-194} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626717914426_1775547677","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}).project({\"attr\": 1}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"stackedAreaChart","height":688.641,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","_id.type":"string","_id.servicePath":"string","attrNames":"string","attrs.temperature.value":"string","attrs.temperature.type":"string","attrs.temperature.mdNames":"string","attrs.temperature.creDate":"string","attrs.temperature.modDate":"string","attrs.humidity.value":"string","attrs.humidity.type":"string","attrs.humidity.mdNames":"string","attrs.humidity.creDate":"string","attrs.humidity.modDate":"string","attrs.location.type":"string","attrs.location.creDate":"string","attrs.location.modDate":"string","attrs.location.value":"string","attrs.location.mdNames":"string","attrs.updated.type":"string","attrs.updated.creDate":"string","attrs.updated.modDate":"string","attrs.updated.value":"string","attrs.updated.mdNames":"string","creDate":"string","modDate":"string","location.attrName":"string","location.coords.type":"string","location.coords.coordinates":"string","lastCorrelator":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"zeppelin-highcharts-scatterplot":{"category":{"name":"_id.id","index":0,"aggr":"sum"},"xAxis":{"name":"attrs.temperature.value","index":4,"aggr":"sum"},"yAxis":{"name":"attrs.humidity.value","index":9,"aggr":"sum"}}},"keys":[{"name":"_id.id","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"attrs.humidity.value","index":9,"aggr":"sum"}]},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-35"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:00:44,851] ({qtp1864350231-173} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626717914426_1775547677","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}).project({\"attr\": 1}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"zeppelin-highcharts-bubble","height":688.641,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","_id.type":"string","_id.servicePath":"string","attrNames":"string","attrs.temperature.value":"string","attrs.temperature.type":"string","attrs.temperature.mdNames":"string","attrs.temperature.creDate":"string","attrs.temperature.modDate":"string","attrs.humidity.value":"string","attrs.humidity.type":"string","attrs.humidity.mdNames":"string","attrs.humidity.creDate":"string","attrs.humidity.modDate":"string","attrs.location.type":"string","attrs.location.creDate":"string","attrs.location.modDate":"string","attrs.location.value":"string","attrs.location.mdNames":"string","attrs.updated.type":"string","attrs.updated.creDate":"string","attrs.updated.modDate":"string","attrs.updated.value":"string","attrs.updated.mdNames":"string","creDate":"string","modDate":"string","location.attrName":"string","location.coords.type":"string","location.coords.coordinates":"string","lastCorrelator":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"zeppelin-highcharts-scatterplot":{"category":{"name":"_id.id","index":0,"aggr":"sum"},"xAxis":{"name":"attrs.temperature.value","index":4,"aggr":"sum"},"yAxis":{"name":"attrs.humidity.value","index":9,"aggr":"sum"}}},"keys":[{"name":"_id.id","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"attrs.humidity.value","index":9,"aggr":"sum"}]},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-37"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:02:33,216] ({qtp1864350231-100} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626717914426_1775547677","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}).project({\"attr\": 1}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"lineChart","height":688.641,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","_id.type":"string","_id.servicePath":"string","attrNames":"string","attrs.temperature.value":"string","attrs.temperature.type":"string","attrs.temperature.mdNames":"string","attrs.temperature.creDate":"string","attrs.temperature.modDate":"string","attrs.humidity.value":"string","attrs.humidity.type":"string","attrs.humidity.mdNames":"string","attrs.humidity.creDate":"string","attrs.humidity.modDate":"string","attrs.location.type":"string","attrs.location.creDate":"string","attrs.location.modDate":"string","attrs.location.value":"string","attrs.location.mdNames":"string","attrs.updated.type":"string","attrs.updated.creDate":"string","attrs.updated.modDate":"string","attrs.updated.value":"string","attrs.updated.mdNames":"string","creDate":"string","modDate":"string","location.attrName":"string","location.coords.type":"string","location.coords.coordinates":"string","lastCorrelator":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"zeppelin-highcharts-scatterplot":{"category":{"name":"_id.id","index":0,"aggr":"sum"},"xAxis":{"name":"attrs.temperature.value","index":4,"aggr":"sum"},"yAxis":{"name":"attrs.humidity.value","index":9,"aggr":"sum"}}},"keys":[{"name":"_id.id","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"attrs.humidity.value","index":9,"aggr":"sum"}]},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-49"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:02:36,445] ({qtp1864350231-173} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626717914426_1775547677","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}).project({\"attr\": 1}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"lineChart","height":688.641,"optionOpen":true,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","_id.type":"string","_id.servicePath":"string","attrNames":"string","attrs.temperature.value":"string","attrs.temperature.type":"string","attrs.temperature.mdNames":"string","attrs.temperature.creDate":"string","attrs.temperature.modDate":"string","attrs.humidity.value":"string","attrs.humidity.type":"string","attrs.humidity.mdNames":"string","attrs.humidity.creDate":"string","attrs.humidity.modDate":"string","attrs.location.type":"string","attrs.location.creDate":"string","attrs.location.modDate":"string","attrs.location.value":"string","attrs.location.mdNames":"string","attrs.updated.type":"string","attrs.updated.creDate":"string","attrs.updated.modDate":"string","attrs.updated.value":"string","attrs.updated.mdNames":"string","creDate":"string","modDate":"string","location.attrName":"string","location.coords.type":"string","location.coords.coordinates":"string","lastCorrelator":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"zeppelin-highcharts-scatterplot":{"category":{"name":"_id.id","index":0,"aggr":"sum"},"xAxis":{"name":"attrs.temperature.value","index":4,"aggr":"sum"},"yAxis":{"name":"attrs.humidity.value","index":9,"aggr":"sum"}}},"keys":[{"name":"_id.id","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"attrs.humidity.value","index":9,"aggr":"sum"}]},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-50"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
 INFO [2021-07-20 15:02:46,569] ({qtp1864350231-201} InterpreterRestApi.java[restartSetting]:200) - Restart interpreterSetting mongodb, msg={"noteId":"2GCS1KRJS"}
 INFO [2021-07-20 15:02:46,575] ({qtp1864350231-201} InterpreterSettingManager.java[copyDependenciesFromLocalPath]:783) - Start to copy dependencies for interpreter: mongodb
 INFO [2021-07-20 15:02:46,577] ({qtp1864350231-201} InterpreterSettingManager.java[copyDependenciesFromLocalPath]:794) - Finish copy dependencies for interpreter: mongodb
 INFO [2021-07-20 15:02:46,578] ({qtp1864350231-201} ManagedInterpreterGroup.java[close]:102) - Close Session: shared_session for interpreter setting: mongodb
 INFO [2021-07-20 15:02:46,585] ({RemoteInterpreter-close} ManagedInterpreterGroup.java[closeInterpreter]:162) - Trying to close interpreter org.apache.zeppelin.mongodb.MongoDbInterpreter
 INFO [2021-07-20 15:02:46,585] ({ConfInterpreter-close} SchedulerFactory.java[createOrGetFIFOScheduler]:76) - Create FIFOScheduler: interpreter_2118362491
 INFO [2021-07-20 15:02:46,590] ({ConfInterpreter-close} ManagedInterpreterGroup.java[closeInterpreter]:162) - Trying to close interpreter org.apache.zeppelin.interpreter.ConfInterpreter
 INFO [2021-07-20 15:02:46,591] ({ConfInterpreter-close} SchedulerFactory.java[removeScheduler]:110) - Remove scheduler: interpreter_2118362491
 WARN [2021-07-20 15:02:46,592] ({SchedulerFactory2} AbstractScheduler.java[run]:91) - FIFOScheduler is interrupted
 INFO [2021-07-20 15:02:46,613] ({RemoteInterpreter-close} SchedulerFactory.java[removeScheduler]:110) - Remove scheduler: RemoteInterpreter-mongodb-shared_process-shared_session
 WARN [2021-07-20 15:02:46,615] ({SchedulerFactory1} AbstractScheduler.java[run]:91) - RemoteScheduler is interrupted
 INFO [2021-07-20 15:02:46,615] ({qtp1864350231-201} ManagedInterpreterGroup.java[close]:106) - Remove this InterpreterGroup: mongodb-shared_process as all the sessions are closed
 INFO [2021-07-20 15:02:46,617] ({qtp1864350231-201} ManagedInterpreterGroup.java[close]:109) - Kill RemoteInterpreterProcess
 INFO [2021-07-20 15:02:46,618] ({qtp1864350231-201} RemoteInterpreterManagedProcess.java[stop]:141) - Kill interpreter process for interpreter group: mongodb-shared_process
 INFO [2021-07-20 15:02:46,662] ({pool-7-thread-2} RemoteInterpreterEventServer.java[unRegisterInterpreterProcess]:183) - Unregister interpreter process: mongodb-shared_process
 WARN [2021-07-20 15:02:46,663] ({pool-7-thread-2} RemoteInterpreterEventServer.java[unRegisterInterpreterProcess]:187) - Unable to unregister interpreter process because no such interpreterGroup: mongodb-shared_process
 INFO [2021-07-20 15:02:46,680] ({qtp1864350231-201} RemoteInterpreterManagedProcess.java[stop]:155) - Remote process of interpreter group: mongodb-shared_process is terminated
 WARN [2021-07-20 15:02:46,754] ({Exec Default Executor} ProcessLauncher.java[onProcessFailed]:134) - Process with cmd [/opt/zeppelin/bin/interpreter.sh, -d, /opt/zeppelin/interpreter/mongodb, -c, 172.18.0.4, -p, 37753, -r, :, -i, mongodb-shared_process, -l, /opt/zeppelin/local-repo/mongodb, -g, mongodb] is failed due to
org.apache.commons.exec.ExecuteException: Process exited with an error: 143 (Exit value: 143)
	at org.apache.commons.exec.DefaultExecutor.executeInternal(DefaultExecutor.java:404)
	at org.apache.commons.exec.DefaultExecutor.access$200(DefaultExecutor.java:48)
	at org.apache.commons.exec.DefaultExecutor$1.run(DefaultExecutor.java:200)
	at java.lang.Thread.run(Thread.java:748)
 INFO [2021-07-20 15:02:46,758] ({Exec Default Executor} ProcessLauncher.java[transition]:109) - Process state is transitioned to TERMINATED
ERROR [2021-07-20 15:03:10,551] ({qtp1864350231-173} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626717914426_1775547677","noteId":"2GCS1KRJS","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}, {\"attrs\": 1}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"zeppelin-highcharts-scatterplot","height":300,"optionOpen":true,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","_id.type":"string","_id.servicePath":"string","attrNames":"string","attrs.temperature.value":"string","attrs.temperature.type":"string","attrs.temperature.mdNames":"string","attrs.temperature.creDate":"string","attrs.temperature.modDate":"string","attrs.humidity.value":"string","attrs.humidity.type":"string","attrs.humidity.mdNames":"string","attrs.humidity.creDate":"string","attrs.humidity.modDate":"string","attrs.location.type":"string","attrs.location.creDate":"string","attrs.location.modDate":"string","attrs.location.value":"string","attrs.location.mdNames":"string","attrs.updated.type":"string","attrs.updated.creDate":"string","attrs.updated.modDate":"string","attrs.updated.value":"string","attrs.updated.mdNames":"string","creDate":"string","modDate":"string","location.attrName":"string","location.coords.type":"string","location.coords.coordinates":"string","lastCorrelator":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"zeppelin-highcharts-scatterplot":{"category":{"name":"_id.id","index":0,"aggr":"sum"},"xAxis":{"name":"attrs.temperature.value","index":4,"aggr":"sum"},"yAxis":{"name":"attrs.humidity.value","index":9,"aggr":"sum"}}},"keys":[{"name":"_id.id","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"attrs.humidity.value","index":9,"aggr":"sum"}]},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-55"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
 WARN [2021-07-20 15:03:13,549] ({qtp1864350231-200} RemoteInterpreter.java[cancel]:247) - Cancel is called when RemoterInterpreter is not opened for org.apache.zeppelin.mongodb.MongoDbInterpreter
 INFO [2021-07-20 15:03:25,907] ({qtp1864350231-201} InterpreterSetting.java[getOrCreateInterpreterGroup]:453) - Create InterpreterGroup with groupId: mongodb-shared_process for ExecutionContext{user='anonymous', noteId='2GCS1KRJS', interpreterGroupId='null', defaultInterpreterGroup='spark', inIsolatedMode=false, startTime=}
 INFO [2021-07-20 15:03:25,909] ({qtp1864350231-201} InterpreterSetting.java[createInterpreters]:823) - Interpreter org.apache.zeppelin.mongodb.MongoDbInterpreter created for user: anonymous, sessionId: shared_session
 INFO [2021-07-20 15:03:25,910] ({qtp1864350231-201} ManagedInterpreterGroup.java[getOrCreateSession]:180) - Create Session: shared_session in InterpreterGroup: mongodb-shared_process for user: anonymous
 INFO [2021-07-20 15:03:29,260] ({qtp1864350231-173} NotebookService.java[runParagraph]:324) - Start to run paragraph: paragraph_1626789145807_1307070485 of note: 2GCS1KRJS
 INFO [2021-07-20 15:03:29,269] ({qtp1864350231-173} NotebookServer.java[inlineBroadcastNewParagraph]:629) - Broadcasting paragraph on run call instead of note.
 INFO [2021-07-20 15:03:29,269] ({SchedulerFactory3} AbstractScheduler.java[runJob]:127) - Job paragraph_1626789145807_1307070485 started by scheduler RemoteInterpreter-mongodb-shared_process-shared_session
 INFO [2021-07-20 15:03:29,273] ({SchedulerFactory3} Paragraph.java[jobRun]:420) - Run paragraph [paragraph_id: paragraph_1626789145807_1307070485, interpreter: org.apache.zeppelin.mongodb.MongoDbInterpreter, note_id: 2GCS1KRJS, user: anonymous]
 INFO [2021-07-20 15:03:29,274] ({SchedulerFactory3} ManagedInterpreterGroup.java[getOrCreateInterpreterProcess]:65) - Create InterpreterProcess for InterpreterGroup: mongodb-shared_process
 INFO [2021-07-20 15:03:29,280] ({SchedulerFactory3} PluginManager.java[loadInterpreterLauncher]:154) - Loading Interpreter Launcher Plugin: org.apache.zeppelin.interpreter.launcher.StandardInterpreterLauncher
 INFO [2021-07-20 15:03:29,282] ({SchedulerFactory3} StandardInterpreterLauncher.java[launchDirectly]:49) - Launching new interpreter process of mongodb
 INFO [2021-07-20 15:03:29,287] ({SchedulerFactory3} ProcessLauncher.java[transition]:109) - Process state is transitioned to LAUNCHED
 INFO [2021-07-20 15:03:29,298] ({SchedulerFactory3} ProcessLauncher.java[launch]:96) - Process is launched: [/opt/zeppelin/bin/interpreter.sh, -d, /opt/zeppelin/interpreter/mongodb, -c, 172.18.0.4, -p, 37753, -r, :, -i, mongodb-shared_process, -l, /opt/zeppelin/local-repo/mongodb, -g, mongodb]
 INFO [2021-07-20 15:03:31,427] ({pool-7-thread-3} RemoteInterpreterEventServer.java[registerInterpreterProcess]:176) - Register interpreter process: 172.18.0.4:35893, interpreterGroup: mongodb-shared_process
 INFO [2021-07-20 15:03:31,428] ({pool-7-thread-3} ProcessLauncher.java[transition]:109) - Process state is transitioned to RUNNING
 INFO [2021-07-20 15:03:31,615] ({SchedulerFactory3} RemoteInterpreter.java[lambda$internal_create$1]:160) - Create RemoteInterpreter org.apache.zeppelin.mongodb.MongoDbInterpreter
 INFO [2021-07-20 15:03:31,821] ({SchedulerFactory3} RemoteInterpreter.java[lambda$open$0]:134) - Open RemoteInterpreter org.apache.zeppelin.mongodb.MongoDbInterpreter
 INFO [2021-07-20 15:03:31,823] ({SchedulerFactory3} RemoteInterpreter.java[pushAngularObjectRegistryToRemote]:393) - Push local angular object registry from ZeppelinServer to remote interpreter group mongodb-shared_process
 INFO [2021-07-20 15:03:32,017] ({JobStatusPoller-paragraph_1626789145807_1307070485} NotebookServer.java[onStatusChange]:1931) - Job paragraph_1626789145807_1307070485 starts to RUNNING
 INFO [2021-07-20 15:03:32,216] ({SchedulerFactory3} NotebookServer.java[onStatusChange]:1926) - Job paragraph_1626789145807_1307070485 is finished successfully, status: FINISHED
 INFO [2021-07-20 15:03:32,223] ({SchedulerFactory3} AbstractScheduler.java[runJob]:154) - Job paragraph_1626789145807_1307070485 finished by scheduler RemoteInterpreter-mongodb-shared_process-shared_session with status FINISHED
ERROR [2021-07-20 15:03:32,261] ({qtp1864350231-194} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626789145807_1307070485","paragraph":"%mongodb\ndb.entities.find({\"_id.type\": \"Sensor\"}, {\"attrs\": 1}).table()\n\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","_id.type":"string","_id.servicePath":"string","attrs.temperature.value":"string","attrs.temperature.type":"string","attrs.temperature.mdNames":"string","attrs.temperature.creDate":"string","attrs.temperature.modDate":"string","attrs.humidity.value":"string","attrs.humidity.type":"string","attrs.humidity.mdNames":"string","attrs.humidity.creDate":"string","attrs.humidity.modDate":"string","attrs.location.type":"string","attrs.location.creDate":"string","attrs.location.modDate":"string","attrs.location.value":"string","attrs.location.mdNames":"string","attrs.updated.type":"string","attrs.updated.creDate":"string","attrs.updated.modDate":"string","attrs.updated.value":"string","attrs.updated.mdNames":"string"},"updated":true},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-64"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:336)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:313)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:171)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:129)
	at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:375)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:03:33,034] ({qtp1864350231-198} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626789145807_1307070485","paragraph":"%mongodb\ndb.entities.find({\"_id.type\": \"Sensor\"}, {\"attrs\": 1}).table()\n\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","_id.type":"string","_id.servicePath":"string","attrs.temperature.value":"string","attrs.temperature.type":"string","attrs.temperature.mdNames":"string","attrs.temperature.creDate":"string","attrs.temperature.modDate":"string","attrs.humidity.value":"string","attrs.humidity.type":"string","attrs.humidity.mdNames":"string","attrs.humidity.creDate":"string","attrs.humidity.modDate":"string","attrs.location.type":"string","attrs.location.creDate":"string","attrs.location.modDate":"string","attrs.location.value":"string","attrs.location.mdNames":"string","attrs.updated.type":"string","attrs.updated.creDate":"string","attrs.updated.modDate":"string","attrs.updated.value":"string","attrs.updated.mdNames":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-65"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
 INFO [2021-07-20 15:03:50,551] ({qtp1864350231-201} NotebookService.java[runParagraph]:324) - Start to run paragraph: paragraph_1626789145807_1307070485 of note: 2GCS1KRJS
 INFO [2021-07-20 15:03:50,565] ({SchedulerFactory5} AbstractScheduler.java[runJob]:127) - Job paragraph_1626789145807_1307070485 started by scheduler RemoteInterpreter-mongodb-shared_process-shared_session
 INFO [2021-07-20 15:03:50,569] ({SchedulerFactory5} Paragraph.java[jobRun]:420) - Run paragraph [paragraph_id: paragraph_1626789145807_1307070485, interpreter: org.apache.zeppelin.mongodb.MongoDbInterpreter, note_id: 2GCS1KRJS, user: anonymous]
 INFO [2021-07-20 15:03:50,669] ({JobStatusPoller-paragraph_1626789145807_1307070485} NotebookServer.java[onStatusChange]:1931) - Job paragraph_1626789145807_1307070485 starts to RUNNING
 INFO [2021-07-20 15:03:50,717] ({SchedulerFactory5} NotebookServer.java[onStatusChange]:1926) - Job paragraph_1626789145807_1307070485 is finished successfully, status: FINISHED
 INFO [2021-07-20 15:03:50,725] ({SchedulerFactory5} AbstractScheduler.java[runJob]:154) - Job paragraph_1626789145807_1307070485 finished by scheduler RemoteInterpreter-mongodb-shared_process-shared_session with status FINISHED
ERROR [2021-07-20 15:03:50,760] ({qtp1864350231-100} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626789145807_1307070485","paragraph":"%mongodb\ndb.entities.find({\"_id.type\": \"Sensor\"}, {\"attrs\": 1, \"_id\": 0}).table()\n\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"attrs.temperature.value":"string","attrs.temperature.type":"string","attrs.temperature.mdNames":"string","attrs.temperature.creDate":"string","attrs.temperature.modDate":"string","attrs.humidity.value":"string","attrs.humidity.type":"string","attrs.humidity.mdNames":"string","attrs.humidity.creDate":"string","attrs.humidity.modDate":"string","attrs.location.type":"string","attrs.location.creDate":"string","attrs.location.modDate":"string","attrs.location.value":"string","attrs.location.mdNames":"string","attrs.updated.type":"string","attrs.updated.creDate":"string","attrs.updated.modDate":"string","attrs.updated.value":"string","attrs.updated.mdNames":"string"},"updated":true},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-69"}
java.lang.IllegalArgumentException: Invalid BSON field name attrs.temperature.value
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:336)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:313)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:171)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:129)
	at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:375)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:03:51,206] ({qtp1864350231-173} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626789145807_1307070485","paragraph":"%mongodb\ndb.entities.find({\"_id.type\": \"Sensor\"}, {\"attrs\": 1, \"_id\": 0}).table()\n\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"attrs.temperature.value":"string","attrs.temperature.type":"string","attrs.temperature.mdNames":"string","attrs.temperature.creDate":"string","attrs.temperature.modDate":"string","attrs.humidity.value":"string","attrs.humidity.type":"string","attrs.humidity.mdNames":"string","attrs.humidity.creDate":"string","attrs.humidity.modDate":"string","attrs.location.type":"string","attrs.location.creDate":"string","attrs.location.modDate":"string","attrs.location.value":"string","attrs.location.mdNames":"string","attrs.updated.type":"string","attrs.updated.creDate":"string","attrs.updated.modDate":"string","attrs.updated.value":"string","attrs.updated.mdNames":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-70"}
java.lang.IllegalArgumentException: Invalid BSON field name attrs.temperature.value
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
 INFO [2021-07-20 15:04:22,296] ({qtp1864350231-198} NotebookService.java[runParagraph]:324) - Start to run paragraph: paragraph_1626789145807_1307070485 of note: 2GCS1KRJS
 INFO [2021-07-20 15:04:22,303] ({SchedulerFactory2} AbstractScheduler.java[runJob]:127) - Job paragraph_1626789145807_1307070485 started by scheduler RemoteInterpreter-mongodb-shared_process-shared_session
 INFO [2021-07-20 15:04:22,306] ({SchedulerFactory2} Paragraph.java[jobRun]:420) - Run paragraph [paragraph_id: paragraph_1626789145807_1307070485, interpreter: org.apache.zeppelin.mongodb.MongoDbInterpreter, note_id: 2GCS1KRJS, user: anonymous]
 INFO [2021-07-20 15:04:22,407] ({JobStatusPoller-paragraph_1626789145807_1307070485} NotebookServer.java[onStatusChange]:1931) - Job paragraph_1626789145807_1307070485 starts to RUNNING
 INFO [2021-07-20 15:04:22,462] ({SchedulerFactory2} NotebookServer.java[onStatusChange]:1926) - Job paragraph_1626789145807_1307070485 is finished successfully, status: FINISHED
 INFO [2021-07-20 15:04:22,473] ({SchedulerFactory2} AbstractScheduler.java[runJob]:154) - Job paragraph_1626789145807_1307070485 finished by scheduler RemoteInterpreter-mongodb-shared_process-shared_session with status FINISHED
ERROR [2021-07-20 15:04:22,556] ({qtp1864350231-201} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626789145807_1307070485","paragraph":"%mongodb\ndb.entities.find({\"_id.type\": \"Sensor\"}, {\"attrs.temperature.value\": 1, \"_id.id\": 1}).table()\n\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","attrs.temperature.value":"string"},"updated":true},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-75"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:04:22,728] ({qtp1864350231-201} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626789145807_1307070485","paragraph":"%mongodb\ndb.entities.find({\"_id.type\": \"Sensor\"}, {\"attrs.temperature.value\": 1, \"_id.id\": 1}).table()\n\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","attrs.temperature.value":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-76"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
 INFO [2021-07-20 15:04:39,270] ({qtp1864350231-194} NotebookService.java[runParagraph]:324) - Start to run paragraph: paragraph_1626789145807_1307070485 of note: 2GCS1KRJS
 INFO [2021-07-20 15:04:39,279] ({SchedulerFactory1} AbstractScheduler.java[runJob]:127) - Job paragraph_1626789145807_1307070485 started by scheduler RemoteInterpreter-mongodb-shared_process-shared_session
 INFO [2021-07-20 15:04:39,282] ({SchedulerFactory1} Paragraph.java[jobRun]:420) - Run paragraph [paragraph_id: paragraph_1626789145807_1307070485, interpreter: org.apache.zeppelin.mongodb.MongoDbInterpreter, note_id: 2GCS1KRJS, user: anonymous]
 INFO [2021-07-20 15:04:39,383] ({JobStatusPoller-paragraph_1626789145807_1307070485} NotebookServer.java[onStatusChange]:1931) - Job paragraph_1626789145807_1307070485 starts to RUNNING
 INFO [2021-07-20 15:04:39,415] ({SchedulerFactory1} NotebookServer.java[onStatusChange]:1926) - Job paragraph_1626789145807_1307070485 is finished successfully, status: FINISHED
 INFO [2021-07-20 15:04:39,420] ({SchedulerFactory1} AbstractScheduler.java[runJob]:154) - Job paragraph_1626789145807_1307070485 finished by scheduler RemoteInterpreter-mongodb-shared_process-shared_session with status FINISHED
ERROR [2021-07-20 15:04:39,456] ({qtp1864350231-173} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626789145807_1307070485","paragraph":"%mongodb\ndb.entities.find({\"_id.type\": \"Sensor\"}, {\"attrs.temperature.value\": 1, \"attrs.humidity.value\": 1, \"_id.id\": 1}).table()\n\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","attrs.temperature.value":"string","attrs.humidity.value":"string"},"updated":true},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-79"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:336)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:313)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:171)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:129)
	at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:375)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:04:39,628] ({qtp1864350231-173} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626789145807_1307070485","paragraph":"%mongodb\ndb.entities.find({\"_id.type\": \"Sensor\"}, {\"attrs.temperature.value\": 1, \"attrs.humidity.value\": 1, \"_id.id\": 1}).table()\n\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","attrs.temperature.value":"string","attrs.humidity.value":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-80"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
 INFO [2021-07-20 15:05:31,643] ({qtp1864350231-173} NotebookService.java[runParagraph]:324) - Start to run paragraph: paragraph_1626789145807_1307070485 of note: 2GCS1KRJS
 INFO [2021-07-20 15:05:31,651] ({SchedulerFactory6} AbstractScheduler.java[runJob]:127) - Job paragraph_1626789145807_1307070485 started by scheduler RemoteInterpreter-mongodb-shared_process-shared_session
 INFO [2021-07-20 15:05:31,654] ({SchedulerFactory6} Paragraph.java[jobRun]:420) - Run paragraph [paragraph_id: paragraph_1626789145807_1307070485, interpreter: org.apache.zeppelin.mongodb.MongoDbInterpreter, note_id: 2GCS1KRJS, user: anonymous]
 INFO [2021-07-20 15:05:31,755] ({JobStatusPoller-paragraph_1626789145807_1307070485} NotebookServer.java[onStatusChange]:1931) - Job paragraph_1626789145807_1307070485 starts to RUNNING
 INFO [2021-07-20 15:05:31,794] ({SchedulerFactory6} NotebookServer.java[onStatusChange]:1926) - Job paragraph_1626789145807_1307070485 is finished successfully, status: FINISHED
 INFO [2021-07-20 15:05:31,801] ({SchedulerFactory6} AbstractScheduler.java[runJob]:154) - Job paragraph_1626789145807_1307070485 finished by scheduler RemoteInterpreter-mongodb-shared_process-shared_session with status FINISHED
ERROR [2021-07-20 15:05:31,838] ({qtp1864350231-201} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626789145807_1307070485","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}, {\"attrs.temperature.value\": 1, \"attrs.humidity.value\": 1, \"_id.id\": 1}).table()\n\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","attrs.temperature.value":"string","attrs.humidity.value":"string"},"updated":true},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-88"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:336)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:313)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:171)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:129)
	at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:375)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:05:32,067] ({qtp1864350231-173} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626789145807_1307070485","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}, {\"attrs.temperature.value\": 1, \"attrs.humidity.value\": 1, \"_id.id\": 1}).table()\n\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","attrs.temperature.value":"string","attrs.humidity.value":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-89"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
 INFO [2021-07-20 15:09:17,206] ({qtp1864350231-200} NotebookService.java[runParagraph]:324) - Start to run paragraph: paragraph_1626789145807_1307070485 of note: 2GCS1KRJS
 INFO [2021-07-20 15:09:17,214] ({SchedulerFactory7} AbstractScheduler.java[runJob]:127) - Job paragraph_1626789145807_1307070485 started by scheduler RemoteInterpreter-mongodb-shared_process-shared_session
 INFO [2021-07-20 15:09:17,217] ({SchedulerFactory7} Paragraph.java[jobRun]:420) - Run paragraph [paragraph_id: paragraph_1626789145807_1307070485, interpreter: org.apache.zeppelin.mongodb.MongoDbInterpreter, note_id: 2GCS1KRJS, user: anonymous]
 INFO [2021-07-20 15:09:17,318] ({JobStatusPoller-paragraph_1626789145807_1307070485} NotebookServer.java[onStatusChange]:1931) - Job paragraph_1626789145807_1307070485 starts to RUNNING
 INFO [2021-07-20 15:09:17,354] ({SchedulerFactory7} NotebookServer.java[onStatusChange]:1926) - Job paragraph_1626789145807_1307070485 is finished successfully, status: FINISHED
 INFO [2021-07-20 15:09:17,363] ({SchedulerFactory7} AbstractScheduler.java[runJob]:154) - Job paragraph_1626789145807_1307070485 finished by scheduler RemoteInterpreter-mongodb-shared_process-shared_session with status FINISHED
ERROR [2021-07-20 15:09:17,413] ({qtp1864350231-195} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626789145807_1307070485","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}, {\"attrs.temperature.value\": 1, \"attrs.humidity.value\": 1, \"_id.id\": 1}).table()\n\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","attrs.temperature.value":"string","attrs.humidity.value":"string"},"updated":true},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-113"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:336)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:313)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:171)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:129)
	at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:375)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:09:17,575] ({qtp1864350231-173} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626789145807_1307070485","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}, {\"attrs.temperature.value\": 1, \"attrs.humidity.value\": 1, \"_id.id\": 1}).table()\n\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","attrs.temperature.value":"string","attrs.humidity.value":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-114"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
 INFO [2021-07-20 15:09:21,627] ({qtp1864350231-100} NotebookService.java[runParagraph]:324) - Start to run paragraph: paragraph_1626789145807_1307070485 of note: 2GCS1KRJS
 INFO [2021-07-20 15:09:21,639] ({SchedulerFactory3} AbstractScheduler.java[runJob]:127) - Job paragraph_1626789145807_1307070485 started by scheduler RemoteInterpreter-mongodb-shared_process-shared_session
 INFO [2021-07-20 15:09:21,643] ({SchedulerFactory3} Paragraph.java[jobRun]:420) - Run paragraph [paragraph_id: paragraph_1626789145807_1307070485, interpreter: org.apache.zeppelin.mongodb.MongoDbInterpreter, note_id: 2GCS1KRJS, user: anonymous]
 INFO [2021-07-20 15:09:21,744] ({JobStatusPoller-paragraph_1626789145807_1307070485} NotebookServer.java[onStatusChange]:1931) - Job paragraph_1626789145807_1307070485 starts to RUNNING
 INFO [2021-07-20 15:09:21,770] ({SchedulerFactory3} NotebookServer.java[onStatusChange]:1926) - Job paragraph_1626789145807_1307070485 is finished successfully, status: FINISHED
 INFO [2021-07-20 15:09:21,776] ({SchedulerFactory3} AbstractScheduler.java[runJob]:154) - Job paragraph_1626789145807_1307070485 finished by scheduler RemoteInterpreter-mongodb-shared_process-shared_session with status FINISHED
ERROR [2021-07-20 15:09:21,828] ({qtp1864350231-194} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626789145807_1307070485","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}, {\"attrs.temperature.value\": 1, \"attrs.humidity.value\": 1, \"_id.id\": 1}).table()\n\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","attrs.temperature.value":"string","attrs.humidity.value":"string"},"updated":true},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-117"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:336)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:313)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:171)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:129)
	at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:375)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:09:22,014] ({qtp1864350231-194} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626789145807_1307070485","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}, {\"attrs.temperature.value\": 1, \"attrs.humidity.value\": 1, \"_id.id\": 1}).table()\n\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","attrs.temperature.value":"string","attrs.humidity.value":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-118"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
 INFO [2021-07-20 15:09:25,604] ({qtp1864350231-200} NotebookService.java[runParagraph]:324) - Start to run paragraph: paragraph_1626789145807_1307070485 of note: 2GCS1KRJS
 INFO [2021-07-20 15:09:25,611] ({SchedulerFactory8} AbstractScheduler.java[runJob]:127) - Job paragraph_1626789145807_1307070485 started by scheduler RemoteInterpreter-mongodb-shared_process-shared_session
 INFO [2021-07-20 15:09:25,614] ({SchedulerFactory8} Paragraph.java[jobRun]:420) - Run paragraph [paragraph_id: paragraph_1626789145807_1307070485, interpreter: org.apache.zeppelin.mongodb.MongoDbInterpreter, note_id: 2GCS1KRJS, user: anonymous]
 INFO [2021-07-20 15:09:25,717] ({JobStatusPoller-paragraph_1626789145807_1307070485} NotebookServer.java[onStatusChange]:1931) - Job paragraph_1626789145807_1307070485 starts to RUNNING
 INFO [2021-07-20 15:09:25,744] ({SchedulerFactory8} NotebookServer.java[onStatusChange]:1926) - Job paragraph_1626789145807_1307070485 is finished successfully, status: FINISHED
 INFO [2021-07-20 15:09:25,751] ({SchedulerFactory8} AbstractScheduler.java[runJob]:154) - Job paragraph_1626789145807_1307070485 finished by scheduler RemoteInterpreter-mongodb-shared_process-shared_session with status FINISHED
ERROR [2021-07-20 15:09:25,801] ({qtp1864350231-201} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626789145807_1307070485","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}, {\"attrs.temperature.value\": 1, \"attrs.humidity.value\": 1, \"_id.id\": 1}).table()\n\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","attrs.temperature.value":"string","attrs.humidity.value":"string"},"updated":true},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-120"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:336)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:313)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:171)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:129)
	at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:375)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:09:25,965] ({qtp1864350231-173} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626789145807_1307070485","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}, {\"attrs.temperature.value\": 1, \"attrs.humidity.value\": 1, \"_id.id\": 1}).table()\n\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","attrs.temperature.value":"string","attrs.humidity.value":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-121"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:10:22,803] ({qtp1864350231-201} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626789145807_1307070485","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}, {\"attrs.temperature.value\": 1, \"attrs.humidity.value\": 1, \"_id.id\": 1}).table()\n\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","attrs.temperature.value":"string","attrs.humidity.value":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-128"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:10:22,852] ({qtp1864350231-201} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626789145807_1307070485","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}, {\"attrs.temperature.value\": 1, \"attrs.humidity.value\": 1, \"_id.id\": 1}).table()\n\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","attrs.temperature.value":"string","attrs.humidity.value":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"multiBarChart":{"rotate":{"degree":"-45"}}},"commonSetting":{},"keys":[{"name":"_id.id","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"attrs.temperature.value","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-129"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:10:22,857] ({qtp1864350231-201} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626789145807_1307070485","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}, {\"attrs.temperature.value\": 1, \"attrs.humidity.value\": 1, \"_id.id\": 1}).table()\n\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","attrs.temperature.value":"string","attrs.humidity.value":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"_id.id","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"attrs.temperature.value","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-130"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
 INFO [2021-07-20 15:10:31,231] ({qtp1864350231-173} NotebookService.java[runParagraph]:324) - Start to run paragraph: paragraph_1626789145807_1307070485 of note: 2GCS1KRJS
 INFO [2021-07-20 15:10:31,240] ({SchedulerFactory5} AbstractScheduler.java[runJob]:127) - Job paragraph_1626789145807_1307070485 started by scheduler RemoteInterpreter-mongodb-shared_process-shared_session
 INFO [2021-07-20 15:10:31,244] ({SchedulerFactory5} Paragraph.java[jobRun]:420) - Run paragraph [paragraph_id: paragraph_1626789145807_1307070485, interpreter: org.apache.zeppelin.mongodb.MongoDbInterpreter, note_id: 2GCS1KRJS, user: anonymous]
 INFO [2021-07-20 15:10:31,344] ({JobStatusPoller-paragraph_1626789145807_1307070485} NotebookServer.java[onStatusChange]:1931) - Job paragraph_1626789145807_1307070485 starts to RUNNING
 WARN [2021-07-20 15:10:31,398] ({SchedulerFactory5} NotebookServer.java[onStatusChange]:1928) - Job paragraph_1626789145807_1307070485 is finished, status: ERROR, exception: null, result: %table _id.id	attrs.temperature.value	attrs.humidity.value
urn:ngsi-ld:Sensor:sensor01	20.25705994123995	30.47283726095957
urn:ngsi-ld:Sensor:sensor02	20.0632450912636	30.325495895677633
urn:ngsi-ld:Sensor:sensor03	20.193153427498153	29.84256159458966
urn:ngsi-ld:Sensor:sensor04	19.95603351953718	30.534656082490574
urn:ngsi-ld:Sensor:sensor05	20.14425370395295	30.350139356642135
urn:ngsi-ld:Sensor:sensor06	20.05043115487872	29.26194309447276
urn:ngsi-ld:Sensor:sensor07	20.00429459804288	29.33811520222064
urn:ngsi-ld:Sensor:sensor08	20.428877595350617	29.244698211707636
uncaught exception: ReferenceError: z is not defined :
@/tmp/zeppelin-mongo-scripts/paragraph_1626789145807_1307070485.js:125:1
failed to load: /tmp/zeppelin-mongo-scripts/paragraph_1626789145807_1307070485.js
exiting with code -3


%text ExitValue: 253
 INFO [2021-07-20 15:10:31,409] ({SchedulerFactory5} AbstractScheduler.java[runJob]:154) - Job paragraph_1626789145807_1307070485 finished by scheduler RemoteInterpreter-mongodb-shared_process-shared_session with status ERROR
ERROR [2021-07-20 15:10:31,447] ({qtp1864350231-201} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626789145807_1307070485","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}, {\"attrs.temperature.value\": 1, \"attrs.humidity.value\": 1, \"_id.id\": 1}).table()\nprint(z)\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","attrs.temperature.value":"string","attrs.humidity.value":"string"},"updated":true},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-133"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:336)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:313)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:171)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:129)
	at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:375)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:10:31,636] ({qtp1864350231-200} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626789145807_1307070485","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}, {\"attrs.temperature.value\": 1, \"attrs.humidity.value\": 1, \"_id.id\": 1}).table()\nprint(z)\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","attrs.temperature.value":"string","attrs.humidity.value":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-134"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
 INFO [2021-07-20 15:10:37,070] ({qtp1864350231-194} NotebookService.java[runParagraph]:324) - Start to run paragraph: paragraph_1626789145807_1307070485 of note: 2GCS1KRJS
 INFO [2021-07-20 15:10:37,078] ({SchedulerFactory9} AbstractScheduler.java[runJob]:127) - Job paragraph_1626789145807_1307070485 started by scheduler RemoteInterpreter-mongodb-shared_process-shared_session
 INFO [2021-07-20 15:10:37,081] ({SchedulerFactory9} Paragraph.java[jobRun]:420) - Run paragraph [paragraph_id: paragraph_1626789145807_1307070485, interpreter: org.apache.zeppelin.mongodb.MongoDbInterpreter, note_id: 2GCS1KRJS, user: anonymous]
 INFO [2021-07-20 15:10:37,183] ({JobStatusPoller-paragraph_1626789145807_1307070485} NotebookServer.java[onStatusChange]:1931) - Job paragraph_1626789145807_1307070485 starts to RUNNING
 INFO [2021-07-20 15:10:37,213] ({SchedulerFactory9} NotebookServer.java[onStatusChange]:1926) - Job paragraph_1626789145807_1307070485 is finished successfully, status: FINISHED
 INFO [2021-07-20 15:10:37,220] ({SchedulerFactory9} AbstractScheduler.java[runJob]:154) - Job paragraph_1626789145807_1307070485 finished by scheduler RemoteInterpreter-mongodb-shared_process-shared_session with status FINISHED
ERROR [2021-07-20 15:10:37,258] ({qtp1864350231-173} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626789145807_1307070485","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}, {\"attrs.temperature.value\": 1, \"attrs.humidity.value\": 1, \"_id.id\": 1}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","attrs.temperature.value":"string","attrs.humidity.value":"string"},"updated":true},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-136"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:336)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:313)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:171)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:129)
	at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:375)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:10:37,416] ({qtp1864350231-200} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626789145807_1307070485","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}, {\"attrs.temperature.value\": 1, \"attrs.humidity.value\": 1, \"_id.id\": 1}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","attrs.temperature.value":"string","attrs.humidity.value":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-137"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
 INFO [2021-07-20 15:10:44,763] ({qtp1864350231-100} NotebookService.java[runParagraph]:324) - Start to run paragraph: paragraph_1626793409268_192179953 of note: 2GCS1KRJS
ERROR [2021-07-20 15:10:44,767] ({qtp1864350231-100} NotebookService.java[runParagraph]:372) - Exception from run
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.runParagraph(NotebookService.java:367)
	at org.apache.zeppelin.socket.NotebookServer.runParagraph(NotebookServer.java:1525)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:356)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:10:44,769] ({qtp1864350231-100} NotebookServer.java[onStatusChange]:1920) - Error
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.runParagraph(NotebookService.java:367)
	at org.apache.zeppelin.socket.NotebookServer.runParagraph(NotebookServer.java:1525)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:356)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
 WARN [2021-07-20 15:10:44,770] ({qtp1864350231-100} NotebookServer.java[onStatusChange]:1928) - Job paragraph_1626793409268_192179953 is finished, status: ERROR, exception: java.lang.IllegalArgumentException: Invalid BSON field name _id.id, result: %text Invalid BSON field name _id.id
ERROR [2021-07-20 15:10:44,772] ({qtp1864350231-100} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"RUN_PARAGRAPH","data":{"id":"paragraph_1626793409268_192179953","paragraph":"%mongodb\n\nprint(z)\n\n","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/javascript"},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-139"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.socket.NotebookServer.onStatusChange(NotebookServer.java:1939)
	at org.apache.zeppelin.socket.NotebookServer.onStatusChange(NotebookServer.java:106)
	at org.apache.zeppelin.scheduler.Job.setStatus(Job.java:141)
	at org.apache.zeppelin.notebook.Paragraph.setStatus(Paragraph.java:402)
	at org.apache.zeppelin.service.NotebookService.runParagraph(NotebookService.java:374)
	at org.apache.zeppelin.socket.NotebookServer.runParagraph(NotebookServer.java:1525)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:356)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:11:11,373] ({qtp1864350231-100} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"SAVE_INTERPRETER_BINDINGS","data":{"noteId":"2GCS1KRJS","selectedSettingIds":["spark","mongodb"]},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-144"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.socket.NotebookServer.saveInterpreterBindings(NotebookServer.java:569)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:439)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
 INFO [2021-07-20 15:11:16,886] ({qtp1864350231-200} NotebookService.java[runParagraph]:324) - Start to run paragraph: paragraph_1626789145807_1307070485 of note: 2GCS1KRJS
 INFO [2021-07-20 15:11:16,895] ({SchedulerFactory2} AbstractScheduler.java[runJob]:127) - Job paragraph_1626789145807_1307070485 started by scheduler RemoteInterpreter-mongodb-shared_process-shared_session
 INFO [2021-07-20 15:11:16,898] ({SchedulerFactory2} Paragraph.java[jobRun]:420) - Run paragraph [paragraph_id: paragraph_1626789145807_1307070485, interpreter: org.apache.zeppelin.mongodb.MongoDbInterpreter, note_id: 2GCS1KRJS, user: anonymous]
 INFO [2021-07-20 15:11:16,999] ({JobStatusPoller-paragraph_1626789145807_1307070485} NotebookServer.java[onStatusChange]:1931) - Job paragraph_1626789145807_1307070485 starts to RUNNING
 INFO [2021-07-20 15:11:17,038] ({SchedulerFactory2} NotebookServer.java[onStatusChange]:1926) - Job paragraph_1626789145807_1307070485 is finished successfully, status: FINISHED
 INFO [2021-07-20 15:11:17,045] ({SchedulerFactory2} AbstractScheduler.java[runJob]:154) - Job paragraph_1626789145807_1307070485 finished by scheduler RemoteInterpreter-mongodb-shared_process-shared_session with status FINISHED
ERROR [2021-07-20 15:11:17,088] ({qtp1864350231-201} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626789145807_1307070485","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}, {\"attrs.temperature.value\": 1, \"attrs.humidity.value\": 1, \"_id.id\": 1}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","attrs.temperature.value":"string","attrs.humidity.value":"string"},"updated":true},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-146"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:336)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:313)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:171)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:129)
	at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:375)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:11:17,273] ({qtp1864350231-198} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626789145807_1307070485","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}, {\"attrs.temperature.value\": 1, \"attrs.humidity.value\": 1, \"_id.id\": 1}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","attrs.temperature.value":"string","attrs.humidity.value":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-147"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:11:25,521] ({qtp1864350231-173} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"PARAGRAPH_REMOVE","data":{"id":"paragraph_1626793409268_192179953"},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-150"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.removeParagraph(NotebookService.java:518)
	at org.apache.zeppelin.socket.NotebookServer.removeParagraph(NotebookServer.java:1237)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:377)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:11:30,775] ({qtp1864350231-100} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"INSERT_PARAGRAPH","data":{"index":1},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-152"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.insertParagraph(NotebookService.java:537)
	at org.apache.zeppelin.socket.NotebookServer.insertParagraph(NotebookServer.java:1448)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:371)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:11:33,406] ({qtp1864350231-198} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"INSERT_PARAGRAPH","data":{"index":1},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-153"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.insertParagraph(NotebookService.java:537)
	at org.apache.zeppelin.socket.NotebookServer.insertParagraph(NotebookServer.java:1448)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:371)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
 INFO [2021-07-20 15:11:46,389] ({qtp1864350231-100} NotebookService.java[runParagraph]:324) - Start to run paragraph: paragraph_1626789145807_1307070485 of note: 2GCS1KRJS
 INFO [2021-07-20 15:11:46,396] ({SchedulerFactory10} AbstractScheduler.java[runJob]:127) - Job paragraph_1626789145807_1307070485 started by scheduler RemoteInterpreter-mongodb-shared_process-shared_session
 INFO [2021-07-20 15:11:46,398] ({SchedulerFactory10} Paragraph.java[jobRun]:420) - Run paragraph [paragraph_id: paragraph_1626789145807_1307070485, interpreter: org.apache.zeppelin.mongodb.MongoDbInterpreter, note_id: 2GCS1KRJS, user: anonymous]
 INFO [2021-07-20 15:11:46,499] ({JobStatusPoller-paragraph_1626789145807_1307070485} NotebookServer.java[onStatusChange]:1931) - Job paragraph_1626789145807_1307070485 starts to RUNNING
 INFO [2021-07-20 15:11:46,523] ({SchedulerFactory10} NotebookServer.java[onStatusChange]:1926) - Job paragraph_1626789145807_1307070485 is finished successfully, status: FINISHED
 INFO [2021-07-20 15:11:46,531] ({SchedulerFactory10} AbstractScheduler.java[runJob]:154) - Job paragraph_1626789145807_1307070485 finished by scheduler RemoteInterpreter-mongodb-shared_process-shared_session with status FINISHED
ERROR [2021-07-20 15:11:46,601] ({qtp1864350231-200} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626789145807_1307070485","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}, {\"attrs.temperature.value\": 1, \"attrs.humidity.value\": 1, \"_id\": 0}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"attrs.temperature.value":"string","attrs.humidity.value":"string"},"updated":true},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-156"}
java.lang.IllegalArgumentException: Invalid BSON field name attrs.temperature.value
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:336)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:313)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:171)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:129)
	at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:375)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:11:46,832] ({qtp1864350231-173} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626789145807_1307070485","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}, {\"attrs.temperature.value\": 1, \"attrs.humidity.value\": 1, \"_id\": 0}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"attrs.temperature.value":"string","attrs.humidity.value":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-157"}
java.lang.IllegalArgumentException: Invalid BSON field name attrs.temperature.value
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
 INFO [2021-07-20 15:11:53,929] ({qtp1864350231-200} NotebookService.java[runParagraph]:324) - Start to run paragraph: paragraph_1626789145807_1307070485 of note: 2GCS1KRJS
 INFO [2021-07-20 15:11:53,941] ({SchedulerFactory1} AbstractScheduler.java[runJob]:127) - Job paragraph_1626789145807_1307070485 started by scheduler RemoteInterpreter-mongodb-shared_process-shared_session
 INFO [2021-07-20 15:11:53,944] ({SchedulerFactory1} Paragraph.java[jobRun]:420) - Run paragraph [paragraph_id: paragraph_1626789145807_1307070485, interpreter: org.apache.zeppelin.mongodb.MongoDbInterpreter, note_id: 2GCS1KRJS, user: anonymous]
 INFO [2021-07-20 15:11:54,044] ({JobStatusPoller-paragraph_1626789145807_1307070485} NotebookServer.java[onStatusChange]:1931) - Job paragraph_1626789145807_1307070485 starts to RUNNING
 INFO [2021-07-20 15:11:54,119] ({SchedulerFactory1} NotebookServer.java[onStatusChange]:1926) - Job paragraph_1626789145807_1307070485 is finished successfully, status: FINISHED
 INFO [2021-07-20 15:11:54,130] ({SchedulerFactory1} AbstractScheduler.java[runJob]:154) - Job paragraph_1626789145807_1307070485 finished by scheduler RemoteInterpreter-mongodb-shared_process-shared_session with status FINISHED
ERROR [2021-07-20 15:11:54,170] ({qtp1864350231-100} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626789145807_1307070485","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}, {\"attrs.temperature.value\": 1, \"attrs.humidity.value\": 1, \"_id\": 0}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"attrs.temperature.value":"string","attrs.humidity.value":"string"},"updated":true},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-160"}
java.lang.IllegalArgumentException: Invalid BSON field name attrs.temperature.value
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:336)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:313)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:171)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:129)
	at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:375)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:11:54,325] ({qtp1864350231-100} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626789145807_1307070485","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}, {\"attrs.temperature.value\": 1, \"attrs.humidity.value\": 1, \"_id\": 0}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"attrs.temperature.value":"string","attrs.humidity.value":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-161"}
java.lang.IllegalArgumentException: Invalid BSON field name attrs.temperature.value
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
 INFO [2021-07-20 15:12:25,392] ({qtp1864350231-173} InterpreterSetting.java[getOrCreateInterpreterGroup]:453) - Create InterpreterGroup with groupId: python-shared_process for ExecutionContext{user='anonymous', noteId='2G9U36QSR', interpreterGroupId='null', defaultInterpreterGroup='python', inIsolatedMode=false, startTime=}
 INFO [2021-07-20 15:12:25,397] ({qtp1864350231-173} InterpreterSetting.java[createInterpreters]:823) - Interpreter org.apache.zeppelin.python.PythonInterpreter created for user: anonymous, sessionId: shared_session
 INFO [2021-07-20 15:12:25,401] ({qtp1864350231-173} InterpreterSetting.java[createInterpreters]:823) - Interpreter org.apache.zeppelin.python.IPythonInterpreter created for user: anonymous, sessionId: shared_session
 INFO [2021-07-20 15:12:25,403] ({qtp1864350231-173} InterpreterSetting.java[createInterpreters]:823) - Interpreter org.apache.zeppelin.python.PythonInterpreterPandasSql created for user: anonymous, sessionId: shared_session
 INFO [2021-07-20 15:12:25,407] ({qtp1864350231-173} InterpreterSetting.java[createInterpreters]:823) - Interpreter org.apache.zeppelin.python.PythonCondaInterpreter created for user: anonymous, sessionId: shared_session
 INFO [2021-07-20 15:12:25,409] ({qtp1864350231-173} InterpreterSetting.java[createInterpreters]:823) - Interpreter org.apache.zeppelin.python.PythonDockerInterpreter created for user: anonymous, sessionId: shared_session
 INFO [2021-07-20 15:12:25,411] ({qtp1864350231-173} ManagedInterpreterGroup.java[getOrCreateSession]:180) - Create Session: shared_session in InterpreterGroup: python-shared_process for user: anonymous
 INFO [2021-07-20 15:12:27,104] ({qtp1864350231-100} NotebookService.java[runParagraph]:324) - Start to run paragraph: paragraph_1626367581533_402771751 of note: 2G9U36QSR
 INFO [2021-07-20 15:12:27,112] ({SchedulerFactory11} AbstractScheduler.java[runJob]:127) - Job paragraph_1626367581533_402771751 started by scheduler RemoteInterpreter-mongodb-shared_process-shared_session
 INFO [2021-07-20 15:12:27,115] ({SchedulerFactory11} Paragraph.java[jobRun]:420) - Run paragraph [paragraph_id: paragraph_1626367581533_402771751, interpreter: org.apache.zeppelin.mongodb.MongoDbInterpreter, note_id: 2G9U36QSR, user: anonymous]
 INFO [2021-07-20 15:12:27,216] ({JobStatusPoller-paragraph_1626367581533_402771751} NotebookServer.java[onStatusChange]:1931) - Job paragraph_1626367581533_402771751 starts to RUNNING
 WARN [2021-07-20 15:12:27,243] ({SchedulerFactory11} NotebookServer.java[onStatusChange]:1928) - Job paragraph_1626367581533_402771751 is finished, status: ERROR, exception: null, result: %text uncaught exception: SyntaxError: unexpected token: identifier :
@/tmp/zeppelin-mongo-scripts/paragraph_1626367581533_402771751.js:124:5
failed to load: /tmp/zeppelin-mongo-scripts/paragraph_1626367581533_402771751.js
exiting with code -3

%text ExitValue: 253
 INFO [2021-07-20 15:12:27,249] ({SchedulerFactory11} AbstractScheduler.java[runJob]:154) - Job paragraph_1626367581533_402771751 finished by scheduler RemoteInterpreter-mongodb-shared_process-shared_session with status ERROR
 INFO [2021-07-20 15:12:33,350] ({qtp1864350231-198} NotebookService.java[runParagraph]:324) - Start to run paragraph: paragraph_1626367581533_402771751 of note: 2G9U36QSR
 INFO [2021-07-20 15:12:33,356] ({SchedulerFactory6} AbstractScheduler.java[runJob]:127) - Job paragraph_1626367581533_402771751 started by scheduler RemoteInterpreter-mongodb-shared_process-shared_session
 INFO [2021-07-20 15:12:33,358] ({SchedulerFactory6} Paragraph.java[jobRun]:420) - Run paragraph [paragraph_id: paragraph_1626367581533_402771751, interpreter: org.apache.zeppelin.mongodb.MongoDbInterpreter, note_id: 2G9U36QSR, user: anonymous]
 WARN [2021-07-20 15:12:33,453] ({SchedulerFactory6} NotebookServer.java[onStatusChange]:1928) - Job paragraph_1626367581533_402771751 is finished, status: ERROR, exception: null, result: %text uncaught exception: SyntaxError: unexpected token: identifier :
@/tmp/zeppelin-mongo-scripts/paragraph_1626367581533_402771751.js:124:5
failed to load: /tmp/zeppelin-mongo-scripts/paragraph_1626367581533_402771751.js
exiting with code -3

%text ExitValue: 253
 INFO [2021-07-20 15:12:33,462] ({SchedulerFactory6} AbstractScheduler.java[runJob]:154) - Job paragraph_1626367581533_402771751 finished by scheduler RemoteInterpreter-mongodb-shared_process-shared_session with status ERROR
 INFO [2021-07-20 15:12:59,303] ({qtp1864350231-100} NotebookService.java[runParagraph]:324) - Start to run paragraph: paragraph_1626367581533_402771751 of note: 2G9U36QSR
 INFO [2021-07-20 15:12:59,310] ({SchedulerFactory12} AbstractScheduler.java[runJob]:127) - Job paragraph_1626367581533_402771751 started by scheduler RemoteInterpreter-mongodb-shared_process-shared_session
 INFO [2021-07-20 15:12:59,312] ({SchedulerFactory12} Paragraph.java[jobRun]:420) - Run paragraph [paragraph_id: paragraph_1626367581533_402771751, interpreter: org.apache.zeppelin.mongodb.MongoDbInterpreter, note_id: 2G9U36QSR, user: anonymous]
 INFO [2021-07-20 15:12:59,413] ({JobStatusPoller-paragraph_1626367581533_402771751} NotebookServer.java[onStatusChange]:1931) - Job paragraph_1626367581533_402771751 starts to RUNNING
 INFO [2021-07-20 15:12:59,429] ({SchedulerFactory12} NotebookServer.java[onStatusChange]:1926) - Job paragraph_1626367581533_402771751 is finished successfully, status: FINISHED
 INFO [2021-07-20 15:12:59,437] ({SchedulerFactory12} AbstractScheduler.java[runJob]:154) - Job paragraph_1626367581533_402771751 finished by scheduler RemoteInterpreter-mongodb-shared_process-shared_session with status FINISHED
 INFO [2021-07-20 15:13:02,927] ({qtp1864350231-100} NotebookService.java[runParagraph]:324) - Start to run paragraph: paragraph_1626367581533_402771751 of note: 2G9U36QSR
 INFO [2021-07-20 15:13:02,933] ({SchedulerFactory7} AbstractScheduler.java[runJob]:127) - Job paragraph_1626367581533_402771751 started by scheduler RemoteInterpreter-mongodb-shared_process-shared_session
 INFO [2021-07-20 15:13:02,936] ({SchedulerFactory7} Paragraph.java[jobRun]:420) - Run paragraph [paragraph_id: paragraph_1626367581533_402771751, interpreter: org.apache.zeppelin.mongodb.MongoDbInterpreter, note_id: 2G9U36QSR, user: anonymous]
 INFO [2021-07-20 15:13:03,038] ({JobStatusPoller-paragraph_1626367581533_402771751} NotebookServer.java[onStatusChange]:1931) - Job paragraph_1626367581533_402771751 starts to RUNNING
 WARN [2021-07-20 15:13:03,074] ({SchedulerFactory7} NotebookServer.java[onStatusChange]:1928) - Job paragraph_1626367581533_402771751 is finished, status: ERROR, exception: null, result: %text uncaught exception: TypeError: db.getCollectionNames(...).table is not a function :
@/tmp/zeppelin-mongo-scripts/paragraph_1626367581533_402771751.js:124:1
failed to load: /tmp/zeppelin-mongo-scripts/paragraph_1626367581533_402771751.js
exiting with code -3

%text ExitValue: 253
 INFO [2021-07-20 15:13:03,085] ({SchedulerFactory7} AbstractScheduler.java[runJob]:154) - Job paragraph_1626367581533_402771751 finished by scheduler RemoteInterpreter-mongodb-shared_process-shared_session with status ERROR
 INFO [2021-07-20 15:13:08,169] ({qtp1864350231-198} NotebookService.java[runParagraph]:324) - Start to run paragraph: paragraph_1626367581533_402771751 of note: 2G9U36QSR
 INFO [2021-07-20 15:13:08,175] ({SchedulerFactory13} AbstractScheduler.java[runJob]:127) - Job paragraph_1626367581533_402771751 started by scheduler RemoteInterpreter-mongodb-shared_process-shared_session
 INFO [2021-07-20 15:13:08,177] ({SchedulerFactory13} Paragraph.java[jobRun]:420) - Run paragraph [paragraph_id: paragraph_1626367581533_402771751, interpreter: org.apache.zeppelin.mongodb.MongoDbInterpreter, note_id: 2G9U36QSR, user: anonymous]
 INFO [2021-07-20 15:13:08,279] ({JobStatusPoller-paragraph_1626367581533_402771751} NotebookServer.java[onStatusChange]:1931) - Job paragraph_1626367581533_402771751 starts to RUNNING
 INFO [2021-07-20 15:13:08,300] ({SchedulerFactory13} NotebookServer.java[onStatusChange]:1926) - Job paragraph_1626367581533_402771751 is finished successfully, status: FINISHED
 INFO [2021-07-20 15:13:08,307] ({SchedulerFactory13} AbstractScheduler.java[runJob]:154) - Job paragraph_1626367581533_402771751 finished by scheduler RemoteInterpreter-mongodb-shared_process-shared_session with status FINISHED
 INFO [2021-07-20 15:13:13,483] ({qtp1864350231-173} NotebookService.java[runParagraph]:324) - Start to run paragraph: paragraph_1626367581533_402771751 of note: 2G9U36QSR
 INFO [2021-07-20 15:13:13,492] ({SchedulerFactory3} AbstractScheduler.java[runJob]:127) - Job paragraph_1626367581533_402771751 started by scheduler RemoteInterpreter-mongodb-shared_process-shared_session
 INFO [2021-07-20 15:13:13,494] ({SchedulerFactory3} Paragraph.java[jobRun]:420) - Run paragraph [paragraph_id: paragraph_1626367581533_402771751, interpreter: org.apache.zeppelin.mongodb.MongoDbInterpreter, note_id: 2G9U36QSR, user: anonymous]
 INFO [2021-07-20 15:13:13,595] ({JobStatusPoller-paragraph_1626367581533_402771751} NotebookServer.java[onStatusChange]:1931) - Job paragraph_1626367581533_402771751 starts to RUNNING
 INFO [2021-07-20 15:13:13,630] ({SchedulerFactory3} NotebookServer.java[onStatusChange]:1926) - Job paragraph_1626367581533_402771751 is finished successfully, status: FINISHED
 INFO [2021-07-20 15:13:13,638] ({SchedulerFactory3} AbstractScheduler.java[runJob]:154) - Job paragraph_1626367581533_402771751 finished by scheduler RemoteInterpreter-mongodb-shared_process-shared_session with status FINISHED
 INFO [2021-07-20 15:13:27,932] ({qtp1864350231-100} NotebookService.java[runParagraph]:324) - Start to run paragraph: paragraph_1626367581533_402771751 of note: 2G9U36QSR
 INFO [2021-07-20 15:13:27,940] ({SchedulerFactory14} AbstractScheduler.java[runJob]:127) - Job paragraph_1626367581533_402771751 started by scheduler RemoteInterpreter-mongodb-shared_process-shared_session
 INFO [2021-07-20 15:13:27,941] ({SchedulerFactory14} Paragraph.java[jobRun]:420) - Run paragraph [paragraph_id: paragraph_1626367581533_402771751, interpreter: org.apache.zeppelin.mongodb.MongoDbInterpreter, note_id: 2G9U36QSR, user: anonymous]
 INFO [2021-07-20 15:13:28,043] ({JobStatusPoller-paragraph_1626367581533_402771751} NotebookServer.java[onStatusChange]:1931) - Job paragraph_1626367581533_402771751 starts to RUNNING
 INFO [2021-07-20 15:13:28,065] ({SchedulerFactory14} NotebookServer.java[onStatusChange]:1926) - Job paragraph_1626367581533_402771751 is finished successfully, status: FINISHED
 INFO [2021-07-20 15:13:28,077] ({SchedulerFactory14} AbstractScheduler.java[runJob]:154) - Job paragraph_1626367581533_402771751 finished by scheduler RemoteInterpreter-mongodb-shared_process-shared_session with status FINISHED
 INFO [2021-07-20 15:13:33,310] ({qtp1864350231-198} NotebookService.java[runParagraph]:324) - Start to run paragraph: paragraph_1626367581533_402771751 of note: 2G9U36QSR
 INFO [2021-07-20 15:13:33,318] ({SchedulerFactory8} AbstractScheduler.java[runJob]:127) - Job paragraph_1626367581533_402771751 started by scheduler RemoteInterpreter-mongodb-shared_process-shared_session
 INFO [2021-07-20 15:13:33,319] ({SchedulerFactory8} Paragraph.java[jobRun]:420) - Run paragraph [paragraph_id: paragraph_1626367581533_402771751, interpreter: org.apache.zeppelin.mongodb.MongoDbInterpreter, note_id: 2G9U36QSR, user: anonymous]
 INFO [2021-07-20 15:13:33,420] ({JobStatusPoller-paragraph_1626367581533_402771751} NotebookServer.java[onStatusChange]:1931) - Job paragraph_1626367581533_402771751 starts to RUNNING
 INFO [2021-07-20 15:13:33,456] ({SchedulerFactory8} NotebookServer.java[onStatusChange]:1926) - Job paragraph_1626367581533_402771751 is finished successfully, status: FINISHED
 INFO [2021-07-20 15:13:33,464] ({SchedulerFactory8} AbstractScheduler.java[runJob]:154) - Job paragraph_1626367581533_402771751 finished by scheduler RemoteInterpreter-mongodb-shared_process-shared_session with status FINISHED
ERROR [2021-07-20 15:13:33,534] ({qtp1864350231-200} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626367581533_402771751","paragraph":"%mongodb\n\nprint(db.getCollectionNames())\ndb.csubs.find({}).table()","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{"1":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id":"string","expiration":"string","reference":"string","custom":"string","throttling":"string","servicePath":"string","description":"string","status":"string","entities":"string","attrs":"string","metadata":"string","blacklist":"string","onlyChanged":"string","conditions":"string","expression.q":"string","expression.mq":"string","expression.geometry":"string","expression.coords":"string","expression.georel":"string","format":"string","count":"string","lastNotification":"string","lastSuccess":"string","lastSuccessCode":"string"},"updated":true},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"editorSetting":{"language":"javascript","editOnDblClick":false,"completionSupport":true,"completionKey":"TAB"},"editorMode":"ace/mode/javascript"},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-190"}
java.lang.IllegalArgumentException: Invalid BSON field name expression.q
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:336)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:313)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:171)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:129)
	at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:375)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:13:33,914] ({qtp1864350231-200} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626367581533_402771751","paragraph":"%mongodb\n\nprint(db.getCollectionNames())\ndb.csubs.find({}).table()","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{"1":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id":"string","expiration":"string","reference":"string","custom":"string","throttling":"string","servicePath":"string","description":"string","status":"string","entities":"string","attrs":"string","metadata":"string","blacklist":"string","onlyChanged":"string","conditions":"string","expression.q":"string","expression.mq":"string","expression.geometry":"string","expression.coords":"string","expression.georel":"string","format":"string","count":"string","lastNotification":"string","lastSuccess":"string","lastSuccessCode":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"editorSetting":{"language":"javascript","editOnDblClick":false,"completionSupport":true,"completionKey":"TAB"},"editorMode":"ace/mode/javascript"},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-191"}
java.lang.IllegalArgumentException: Invalid BSON field name expression.q
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
 INFO [2021-07-20 15:14:07,743] ({qtp1864350231-263} NotebookService.java[runParagraph]:324) - Start to run paragraph: paragraph_1626367581533_402771751 of note: 2G9U36QSR
 INFO [2021-07-20 15:14:07,751] ({SchedulerFactory15} AbstractScheduler.java[runJob]:127) - Job paragraph_1626367581533_402771751 started by scheduler RemoteInterpreter-mongodb-shared_process-shared_session
 INFO [2021-07-20 15:14:07,753] ({SchedulerFactory15} Paragraph.java[jobRun]:420) - Run paragraph [paragraph_id: paragraph_1626367581533_402771751, interpreter: org.apache.zeppelin.mongodb.MongoDbInterpreter, note_id: 2G9U36QSR, user: anonymous]
 INFO [2021-07-20 15:14:07,854] ({JobStatusPoller-paragraph_1626367581533_402771751} NotebookServer.java[onStatusChange]:1931) - Job paragraph_1626367581533_402771751 starts to RUNNING
 INFO [2021-07-20 15:14:07,896] ({SchedulerFactory15} NotebookServer.java[onStatusChange]:1926) - Job paragraph_1626367581533_402771751 is finished successfully, status: FINISHED
 INFO [2021-07-20 15:14:07,914] ({SchedulerFactory15} AbstractScheduler.java[runJob]:154) - Job paragraph_1626367581533_402771751 finished by scheduler RemoteInterpreter-mongodb-shared_process-shared_session with status FINISHED
ERROR [2021-07-20 15:14:07,969] ({qtp1864350231-173} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626367581533_402771751","paragraph":"%mongodb\n\nprint(db.getCollectionNames())\ndb.csubs.find({}).table()","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{"1":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id":"string","expiration":"string","reference":"string","custom":"string","throttling":"string","servicePath":"string","description":"string","status":"string","entities":"string","attrs":"string","metadata":"string","blacklist":"string","onlyChanged":"string","conditions":"string","expression.q":"string","expression.mq":"string","expression.geometry":"string","expression.coords":"string","expression.georel":"string","format":"string","count":"string","lastNotification":"string","lastSuccess":"string","lastSuccessCode":"string"},"updated":true},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"editorSetting":{"language":"javascript","editOnDblClick":false,"completionSupport":true,"completionKey":"TAB"},"editorMode":"ace/mode/javascript"},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-196"}
java.lang.IllegalArgumentException: Invalid BSON field name expression.q
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:336)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:313)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:171)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:129)
	at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:375)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:14:08,418] ({qtp1864350231-263} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626367581533_402771751","paragraph":"%mongodb\n\nprint(db.getCollectionNames())\ndb.csubs.find({}).table()","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{"1":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id":"string","expiration":"string","reference":"string","custom":"string","throttling":"string","servicePath":"string","description":"string","status":"string","entities":"string","attrs":"string","metadata":"string","blacklist":"string","onlyChanged":"string","conditions":"string","expression.q":"string","expression.mq":"string","expression.geometry":"string","expression.coords":"string","expression.georel":"string","format":"string","count":"string","lastNotification":"string","lastSuccess":"string","lastSuccessCode":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"editorSetting":{"language":"javascript","editOnDblClick":false,"completionSupport":true,"completionKey":"TAB"},"editorMode":"ace/mode/javascript"},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-197"}
java.lang.IllegalArgumentException: Invalid BSON field name expression.q
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:14:27,735] ({qtp1864350231-173} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626367581533_402771751","paragraph":"%mongodb\n\nprint(db.getCollectionNames())\ndb.csubs.find({}).table()","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{"1":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id":"string","expiration":"string","reference":"string","custom":"string","throttling":"string","servicePath":"string","description":"string","status":"string","entities":"string","attrs":"string","metadata":"string","blacklist":"string","onlyChanged":"string","conditions":"string","expression.q":"string","expression.mq":"string","expression.geometry":"string","expression.coords":"string","expression.georel":"string","format":"string","count":"string","lastNotification":"string","lastSuccess":"string","lastSuccessCode":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}},"helium":{}}},"editorSetting":{"language":"javascript","editOnDblClick":false,"completionSupport":true,"completionKey":"TAB"},"editorMode":"ace/mode/javascript"},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-200"}
java.lang.IllegalArgumentException: Invalid BSON field name expression.q
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:14:27,789] ({qtp1864350231-173} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626367581533_402771751","paragraph":"%mongodb\n\nprint(db.getCollectionNames())\ndb.csubs.find({}).table()","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{"1":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id":"string","expiration":"string","reference":"string","custom":"string","throttling":"string","servicePath":"string","description":"string","status":"string","entities":"string","attrs":"string","metadata":"string","blacklist":"string","onlyChanged":"string","conditions":"string","expression.q":"string","expression.mq":"string","expression.geometry":"string","expression.coords":"string","expression.georel":"string","format":"string","count":"string","lastNotification":"string","lastSuccess":"string","lastSuccessCode":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"multiBarChart":{"rotate":{"degree":"-45"}}},"commonSetting":{},"keys":[{"name":"_id","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"expiration","index":1,"aggr":"sum"}]},"helium":{}}},"editorSetting":{"language":"javascript","editOnDblClick":false,"completionSupport":true,"completionKey":"TAB"},"editorMode":"ace/mode/javascript"},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-201"}
java.lang.IllegalArgumentException: Invalid BSON field name expression.q
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:14:27,797] ({qtp1864350231-173} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626367581533_402771751","paragraph":"%mongodb\n\nprint(db.getCollectionNames())\ndb.csubs.find({}).table()","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{"1":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id":"string","expiration":"string","reference":"string","custom":"string","throttling":"string","servicePath":"string","description":"string","status":"string","entities":"string","attrs":"string","metadata":"string","blacklist":"string","onlyChanged":"string","conditions":"string","expression.q":"string","expression.mq":"string","expression.geometry":"string","expression.coords":"string","expression.georel":"string","format":"string","count":"string","lastNotification":"string","lastSuccess":"string","lastSuccessCode":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"_id","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"expiration","index":1,"aggr":"sum"}]},"helium":{}}},"editorSetting":{"language":"javascript","editOnDblClick":false,"completionSupport":true,"completionKey":"TAB"},"editorMode":"ace/mode/javascript"},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-202"}
java.lang.IllegalArgumentException: Invalid BSON field name expression.q
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:14:30,092] ({qtp1864350231-198} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626367581533_402771751","paragraph":"%mongodb\n\nprint(db.getCollectionNames())\ndb.csubs.find({}).table()","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{"1":{"graph":{"mode":"lineChart","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id":"string","expiration":"string","reference":"string","custom":"string","throttling":"string","servicePath":"string","description":"string","status":"string","entities":"string","attrs":"string","metadata":"string","blacklist":"string","onlyChanged":"string","conditions":"string","expression.q":"string","expression.mq":"string","expression.geometry":"string","expression.coords":"string","expression.georel":"string","format":"string","count":"string","lastNotification":"string","lastSuccess":"string","lastSuccessCode":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"_id","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"expiration","index":1,"aggr":"sum"}]},"helium":{}}},"editorSetting":{"language":"javascript","editOnDblClick":false,"completionSupport":true,"completionKey":"TAB"},"editorMode":"ace/mode/javascript"},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-203"}
java.lang.IllegalArgumentException: Invalid BSON field name expression.q
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:14:30,132] ({qtp1864350231-173} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626367581533_402771751","paragraph":"%mongodb\n\nprint(db.getCollectionNames())\ndb.csubs.find({}).table()","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{"1":{"graph":{"mode":"lineChart","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id":"string","expiration":"string","reference":"string","custom":"string","throttling":"string","servicePath":"string","description":"string","status":"string","entities":"string","attrs":"string","metadata":"string","blacklist":"string","onlyChanged":"string","conditions":"string","expression.q":"string","expression.mq":"string","expression.geometry":"string","expression.coords":"string","expression.georel":"string","format":"string","count":"string","lastNotification":"string","lastSuccess":"string","lastSuccessCode":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"lineChart":{"rotate":{"degree":"-45"}}},"commonSetting":{},"keys":[{"name":"_id","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"expiration","index":1,"aggr":"sum"}]},"helium":{}}},"editorSetting":{"language":"javascript","editOnDblClick":false,"completionSupport":true,"completionKey":"TAB"},"editorMode":"ace/mode/javascript"},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-204"}
java.lang.IllegalArgumentException: Invalid BSON field name expression.q
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:14:30,139] ({qtp1864350231-173} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626367581533_402771751","paragraph":"%mongodb\n\nprint(db.getCollectionNames())\ndb.csubs.find({}).table()","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{"1":{"graph":{"mode":"lineChart","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id":"string","expiration":"string","reference":"string","custom":"string","throttling":"string","servicePath":"string","description":"string","status":"string","entities":"string","attrs":"string","metadata":"string","blacklist":"string","onlyChanged":"string","conditions":"string","expression.q":"string","expression.mq":"string","expression.geometry":"string","expression.coords":"string","expression.georel":"string","format":"string","count":"string","lastNotification":"string","lastSuccess":"string","lastSuccessCode":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"_id","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"expiration","index":1,"aggr":"sum"}]},"helium":{}}},"editorSetting":{"language":"javascript","editOnDblClick":false,"completionSupport":true,"completionKey":"TAB"},"editorMode":"ace/mode/javascript"},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-205"}
java.lang.IllegalArgumentException: Invalid BSON field name expression.q
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:14:32,601] ({qtp1864350231-195} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626367581533_402771751","paragraph":"%mongodb\n\nprint(db.getCollectionNames())\ndb.csubs.find({}).table()","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{"1":{"graph":{"mode":"zeppelin-highcharts-scatterplot","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id":"string","expiration":"string","reference":"string","custom":"string","throttling":"string","servicePath":"string","description":"string","status":"string","entities":"string","attrs":"string","metadata":"string","blacklist":"string","onlyChanged":"string","conditions":"string","expression.q":"string","expression.mq":"string","expression.geometry":"string","expression.coords":"string","expression.georel":"string","format":"string","count":"string","lastNotification":"string","lastSuccess":"string","lastSuccessCode":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"_id","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"expiration","index":1,"aggr":"sum"}]},"helium":{}}},"editorSetting":{"language":"javascript","editOnDblClick":false,"completionSupport":true,"completionKey":"TAB"},"editorMode":"ace/mode/javascript"},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-207"}
java.lang.IllegalArgumentException: Invalid BSON field name expression.q
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:14:34,676] ({qtp1864350231-198} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626367581533_402771751","paragraph":"%mongodb\n\nprint(db.getCollectionNames())\ndb.csubs.find({}).table()","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{"1":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id":"string","expiration":"string","reference":"string","custom":"string","throttling":"string","servicePath":"string","description":"string","status":"string","entities":"string","attrs":"string","metadata":"string","blacklist":"string","onlyChanged":"string","conditions":"string","expression.q":"string","expression.mq":"string","expression.geometry":"string","expression.coords":"string","expression.georel":"string","format":"string","count":"string","lastNotification":"string","lastSuccess":"string","lastSuccessCode":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"_id","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"expiration","index":1,"aggr":"sum"}]},"helium":{}}},"editorSetting":{"language":"javascript","editOnDblClick":false,"completionSupport":true,"completionKey":"TAB"},"editorMode":"ace/mode/javascript"},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-208"}
java.lang.IllegalArgumentException: Invalid BSON field name expression.q
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:26:27,350] ({qtp1864350231-263} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626789145807_1307070485","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}, {\"attrs.temperature.value\": 1, \"attrs.humidity.value\": 1, \"_id\": 0}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"attrs.temperature.value":"string","attrs.humidity.value":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-281"}
java.lang.IllegalArgumentException: Invalid BSON field name attrs.temperature.value
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:26:27,413] ({qtp1864350231-195} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626789145807_1307070485","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}, {\"attrs.temperature.value\": 1, \"attrs.humidity.value\": 1, \"_id\": 0}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"attrs.temperature.value":"string","attrs.humidity.value":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"multiBarChart":{"rotate":{"degree":"-45"}}},"commonSetting":{},"keys":[{"name":"attrs.temperature.value","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"attrs.humidity.value","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-282"}
java.lang.IllegalArgumentException: Invalid BSON field name attrs.temperature.value
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:26:27,419] ({qtp1864350231-195} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626789145807_1307070485","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}, {\"attrs.temperature.value\": 1, \"attrs.humidity.value\": 1, \"_id\": 0}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"attrs.temperature.value":"string","attrs.humidity.value":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"attrs.temperature.value","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"attrs.humidity.value","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-283"}
java.lang.IllegalArgumentException: Invalid BSON field name attrs.temperature.value
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:26:31,190] ({qtp1864350231-263} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626789145807_1307070485","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}, {\"attrs.temperature.value\": 1, \"attrs.humidity.value\": 1, \"_id\": 0}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":true,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"attrs.temperature.value":"string","attrs.humidity.value":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"attrs.temperature.value","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"attrs.humidity.value","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-285"}
java.lang.IllegalArgumentException: Invalid BSON field name attrs.temperature.value
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:26:40,267] ({qtp1864350231-263} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626789145807_1307070485","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}, {\"attrs.temperature.value\": 1, \"attrs.humidity.value\": 1, \"_id\": 0}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"lineChart","height":300,"optionOpen":true,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"attrs.temperature.value":"string","attrs.humidity.value":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"attrs.temperature.value","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"attrs.humidity.value","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-286"}
java.lang.IllegalArgumentException: Invalid BSON field name attrs.temperature.value
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:26:40,323] ({qtp1864350231-194} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626789145807_1307070485","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}, {\"attrs.temperature.value\": 1, \"attrs.humidity.value\": 1, \"_id\": 0}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"lineChart","height":300,"optionOpen":true,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"attrs.temperature.value":"string","attrs.humidity.value":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"lineChart":{"rotate":{"degree":"-45"}}},"commonSetting":{},"keys":[{"name":"attrs.temperature.value","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"attrs.humidity.value","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-287"}
java.lang.IllegalArgumentException: Invalid BSON field name attrs.temperature.value
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:26:40,330] ({qtp1864350231-194} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626789145807_1307070485","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}, {\"attrs.temperature.value\": 1, \"attrs.humidity.value\": 1, \"_id\": 0}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"lineChart","height":300,"optionOpen":true,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"attrs.temperature.value":"string","attrs.humidity.value":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"attrs.temperature.value","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"attrs.humidity.value","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-288"}
java.lang.IllegalArgumentException: Invalid BSON field name attrs.temperature.value
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:26:50,746] ({qtp1864350231-195} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626789145807_1307070485","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}, {\"attrs.temperature.value\": 1, \"attrs.humidity.value\": 1, \"_id\": 0}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"lineChart","height":300,"optionOpen":true,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"attrs.temperature.value":"string","attrs.humidity.value":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"attrs.temperature.value","index":0,"aggr":"sum"}],"groups":[{"name":"attrs.humidity.value","index":1,"aggr":"sum"}],"values":[]},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-291"}
java.lang.IllegalArgumentException: Invalid BSON field name attrs.temperature.value
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:26:52,868] ({qtp1864350231-200} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626789145807_1307070485","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}, {\"attrs.temperature.value\": 1, \"attrs.humidity.value\": 1, \"_id\": 0}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"lineChart","height":300,"optionOpen":true,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"attrs.temperature.value":"string","attrs.humidity.value":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"attrs.temperature.value","index":0,"aggr":"sum"},{"name":"attrs.humidity.value","index":1,"aggr":"sum"}],"groups":[],"values":[]},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-292"}
java.lang.IllegalArgumentException: Invalid BSON field name attrs.temperature.value
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:26:56,606] ({qtp1864350231-200} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626789145807_1307070485","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}, {\"attrs.temperature.value\": 1, \"attrs.humidity.value\": 1, \"_id\": 0}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"lineChart","height":300,"optionOpen":true,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"attrs.temperature.value":"string","attrs.humidity.value":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"attrs.humidity.value","index":1,"aggr":"sum"}],"groups":[{"name":"attrs.temperature.value","index":0,"aggr":"sum"}],"values":[]},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-293"}
java.lang.IllegalArgumentException: Invalid BSON field name attrs.temperature.value
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:26:59,119] ({qtp1864350231-263} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626789145807_1307070485","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}, {\"attrs.temperature.value\": 1, \"attrs.humidity.value\": 1, \"_id\": 0}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"lineChart","height":300,"optionOpen":true,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"attrs.temperature.value":"string","attrs.humidity.value":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"attrs.humidity.value","index":1,"aggr":"sum"}],"groups":[],"values":[{"name":"attrs.temperature.value","index":0,"aggr":"sum"}]},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-294"}
java.lang.IllegalArgumentException: Invalid BSON field name attrs.temperature.value
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
 INFO [2021-07-20 15:27:17,012] ({qtp1864350231-198} NotebookService.java[runParagraph]:324) - Start to run paragraph: paragraph_1626789145807_1307070485 of note: 2GCS1KRJS
ERROR [2021-07-20 15:27:17,016] ({qtp1864350231-198} NotebookService.java[runParagraph]:372) - Exception from run
java.lang.IllegalArgumentException: Invalid BSON field name attrs.temperature.value
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.runParagraph(NotebookService.java:367)
	at org.apache.zeppelin.socket.NotebookServer.runParagraph(NotebookServer.java:1525)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:356)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:27:17,017] ({qtp1864350231-198} NotebookServer.java[onStatusChange]:1920) - Error
java.lang.IllegalArgumentException: Invalid BSON field name attrs.temperature.value
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.runParagraph(NotebookService.java:367)
	at org.apache.zeppelin.socket.NotebookServer.runParagraph(NotebookServer.java:1525)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:356)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
 WARN [2021-07-20 15:27:17,019] ({qtp1864350231-198} NotebookServer.java[onStatusChange]:1928) - Job paragraph_1626789145807_1307070485 is finished, status: ERROR, exception: java.lang.IllegalArgumentException: Invalid BSON field name attrs.temperature.value, result: %text Invalid BSON field name attrs.temperature.value
ERROR [2021-07-20 15:27:17,021] ({qtp1864350231-198} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"RUN_PARAGRAPH","data":{"id":"paragraph_1626789145807_1307070485","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}, {\"attrs.temperature.value\": 1, \"attrs.humidity.value\": 1, \"_id.id\":1\n}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"attrs.temperature.value":"string","attrs.humidity.value":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-297"}
java.lang.IllegalArgumentException: Invalid BSON field name attrs.temperature.value
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.socket.NotebookServer.onStatusChange(NotebookServer.java:1939)
	at org.apache.zeppelin.socket.NotebookServer.onStatusChange(NotebookServer.java:106)
	at org.apache.zeppelin.scheduler.Job.setStatus(Job.java:141)
	at org.apache.zeppelin.notebook.Paragraph.setStatus(Paragraph.java:402)
	at org.apache.zeppelin.service.NotebookService.runParagraph(NotebookService.java:374)
	at org.apache.zeppelin.socket.NotebookServer.runParagraph(NotebookServer.java:1525)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:356)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:27:23,074] ({qtp1864350231-263} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626789145807_1307070485","noteId":"2GCS1KRJS","paragraph":"%mongodb\n\ndb.entities.find({\"_id.type\": \"Sensor\"}, {\"attrs.temperature.value\": 1, \"attrs.humidity.value\": 1, \"_id.id\":1}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"attrs.temperature.value":"string","attrs.humidity.value":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-299"}
java.lang.IllegalArgumentException: Invalid BSON field name attrs.temperature.value
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:27:43,930] ({qtp1864350231-198} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"SAVE_INTERPRETER_BINDINGS","data":{"noteId":"2GCS1KRJS","selectedSettingIds":["spark","mongodb"]},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-303"}
java.lang.IllegalArgumentException: Invalid BSON field name attrs.temperature.value
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.socket.NotebookServer.saveInterpreterBindings(NotebookServer.java:569)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:439)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
 INFO [2021-07-20 15:28:06,036] ({qtp1864350231-194} NotebookService.java[runParagraph]:324) - Start to run paragraph: paragraph_1626793893404_412426249 of note: 2GCS1KRJS
 INFO [2021-07-20 15:28:06,044] ({SchedulerFactory5} AbstractScheduler.java[runJob]:127) - Job paragraph_1626793893404_412426249 started by scheduler RemoteInterpreter-mongodb-shared_process-shared_session
 INFO [2021-07-20 15:28:06,046] ({SchedulerFactory5} Paragraph.java[jobRun]:420) - Run paragraph [paragraph_id: paragraph_1626793893404_412426249, interpreter: org.apache.zeppelin.mongodb.MongoDbInterpreter, note_id: 2GCS1KRJS, user: anonymous]
 INFO [2021-07-20 15:28:06,148] ({JobStatusPoller-paragraph_1626793893404_412426249} NotebookServer.java[onStatusChange]:1931) - Job paragraph_1626793893404_412426249 starts to RUNNING
 INFO [2021-07-20 15:28:06,185] ({SchedulerFactory5} NotebookServer.java[onStatusChange]:1926) - Job paragraph_1626793893404_412426249 is finished successfully, status: FINISHED
 INFO [2021-07-20 15:28:06,191] ({SchedulerFactory5} AbstractScheduler.java[runJob]:154) - Job paragraph_1626793893404_412426249 finished by scheduler RemoteInterpreter-mongodb-shared_process-shared_session with status FINISHED
ERROR [2021-07-20 15:28:06,231] ({qtp1864350231-280} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626793893404_412426249","paragraph":"%mongodb\ndb.entities.find({\"_id.type\": \"Sensor\"}, {\"attrs.temperature.value\": 1, \"attrs.humidity.value\": 1, \"_id.id\":1}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","attrs.temperature.value":"string","attrs.humidity.value":"string"},"updated":true},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-309"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:336)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:313)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:171)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:129)
	at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:375)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:28:06,471] ({qtp1864350231-280} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626793893404_412426249","paragraph":"%mongodb\ndb.entities.find({\"_id.type\": \"Sensor\"}, {\"attrs.temperature.value\": 1, \"attrs.humidity.value\": 1, \"_id.id\":1}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","attrs.temperature.value":"string","attrs.humidity.value":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-310"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:28:09,302] ({qtp1864350231-263} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626793893404_412426249","paragraph":"%mongodb\ndb.entities.find({\"_id.type\": \"Sensor\"}, {\"attrs.temperature.value\": 1, \"attrs.humidity.value\": 1, \"_id.id\":1}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"lineChart","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","attrs.temperature.value":"string","attrs.humidity.value":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-311"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:28:09,346] ({qtp1864350231-194} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626793893404_412426249","paragraph":"%mongodb\ndb.entities.find({\"_id.type\": \"Sensor\"}, {\"attrs.temperature.value\": 1, \"attrs.humidity.value\": 1, \"_id.id\":1}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"lineChart","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","attrs.temperature.value":"string","attrs.humidity.value":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"lineChart":{"rotate":{"degree":"-45"}}},"commonSetting":{},"keys":[{"name":"_id.id","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"attrs.temperature.value","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-312"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:28:09,353] ({qtp1864350231-194} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626793893404_412426249","paragraph":"%mongodb\ndb.entities.find({\"_id.type\": \"Sensor\"}, {\"attrs.temperature.value\": 1, \"attrs.humidity.value\": 1, \"_id.id\":1}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"lineChart","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","attrs.temperature.value":"string","attrs.humidity.value":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"_id.id","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"attrs.temperature.value","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-313"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:28:16,334] ({qtp1864350231-194} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626793893404_412426249","paragraph":"%mongodb\ndb.entities.find({\"_id.type\": \"Sensor\"}, {\"attrs.temperature.value\": 1, \"attrs.humidity.value\": 1, \"_id.id\":1}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"lineChart","height":300,"optionOpen":true,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","attrs.temperature.value":"string","attrs.humidity.value":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"_id.id","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"attrs.temperature.value","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-315"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:28:39,262] ({qtp1864350231-194} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626793893404_412426249","paragraph":"%mongodb\ndb.entities.find({\"_id.type\": \"Sensor\"}, {\"attrs.temperature.value\": 1, \"attrs.humidity.value\": 1, \"_id.id\":1}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"lineChart","height":300,"optionOpen":true,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","attrs.temperature.value":"string","attrs.humidity.value":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[],"groups":[{"name":"_id.id","index":0,"aggr":"sum"}],"values":[{"name":"attrs.temperature.value","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-318"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:28:46,971] ({qtp1864350231-173} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626793893404_412426249","paragraph":"%mongodb\ndb.entities.find({\"_id.type\": \"Sensor\"}, {\"attrs.temperature.value\": 1, \"attrs.humidity.value\": 1, \"_id.id\":1}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"lineChart","height":300,"optionOpen":true,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","attrs.temperature.value":"string","attrs.humidity.value":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"attrs.humidity.value","index":2,"aggr":"sum"}],"groups":[{"name":"_id.id","index":0,"aggr":"sum"}],"values":[{"name":"attrs.temperature.value","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-320"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:28:50,631] ({qtp1864350231-173} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626793893404_412426249","paragraph":"%mongodb\ndb.entities.find({\"_id.type\": \"Sensor\"}, {\"attrs.temperature.value\": 1, \"attrs.humidity.value\": 1, \"_id.id\":1}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"lineChart","height":300,"optionOpen":true,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","attrs.temperature.value":"string","attrs.humidity.value":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[],"groups":[{"name":"_id.id","index":0,"aggr":"sum"}],"values":[{"name":"attrs.temperature.value","index":1,"aggr":"sum"},{"name":"attrs.humidity.value","index":2,"aggr":"sum"}]},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-322"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:28:59,359] ({qtp1864350231-200} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626793893404_412426249","paragraph":"%mongodb\ndb.entities.find({\"_id.type\": \"Sensor\"}, {\"attrs.temperature.value\": 1, \"attrs.humidity.value\": 1, \"_id.id\":1}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"lineChart","height":300,"optionOpen":true,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","attrs.temperature.value":"string","attrs.humidity.value":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"_id.id","index":0,"aggr":"sum"}],"groups":[{"name":"_id.id","index":0,"aggr":"sum"}],"values":[{"name":"attrs.temperature.value","index":1,"aggr":"sum"},{"name":"attrs.humidity.value","index":2,"aggr":"sum"}]},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-323"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:29:02,940] ({qtp1864350231-263} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626793893404_412426249","paragraph":"%mongodb\ndb.entities.find({\"_id.type\": \"Sensor\"}, {\"attrs.temperature.value\": 1, \"attrs.humidity.value\": 1, \"_id.id\":1}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"lineChart","height":300,"optionOpen":true,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","attrs.temperature.value":"string","attrs.humidity.value":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[],"groups":[{"name":"_id.id","index":0,"aggr":"sum"}],"values":[{"name":"attrs.temperature.value","index":1,"aggr":"sum"},{"name":"attrs.humidity.value","index":2,"aggr":"sum"}]},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-325"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:29:06,459] ({qtp1864350231-173} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626793893404_412426249","paragraph":"%mongodb\ndb.entities.find({\"_id.type\": \"Sensor\"}, {\"attrs.temperature.value\": 1, \"attrs.humidity.value\": 1, \"_id.id\":1}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"lineChart","height":300,"optionOpen":true,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","attrs.temperature.value":"string","attrs.humidity.value":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[],"groups":[{"name":"_id.id","index":0,"aggr":"sum"}],"values":[{"name":"attrs.temperature.value","index":1,"aggr":"count"},{"name":"attrs.humidity.value","index":2,"aggr":"sum"}]},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-326"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:29:11,737] ({qtp1864350231-194} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626793893404_412426249","paragraph":"%mongodb\ndb.entities.find({\"_id.type\": \"Sensor\"}, {\"attrs.temperature.value\": 1, \"attrs.humidity.value\": 1, \"_id.id\":1}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"lineChart","height":300,"optionOpen":true,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","attrs.temperature.value":"string","attrs.humidity.value":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[],"groups":[{"name":"_id.id","index":0,"aggr":"sum"}],"values":[{"name":"attrs.temperature.value","index":1,"aggr":"count"},{"name":"attrs.humidity.value","index":2,"aggr":"avg"}]},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-328"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:29:15,796] ({qtp1864350231-200} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626793893404_412426249","paragraph":"%mongodb\ndb.entities.find({\"_id.type\": \"Sensor\"}, {\"attrs.temperature.value\": 1, \"attrs.humidity.value\": 1, \"_id.id\":1}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"lineChart","height":300,"optionOpen":true,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","attrs.temperature.value":"string","attrs.humidity.value":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[],"groups":[{"name":"_id.id","index":0,"aggr":"sum"},{"name":"attrs.humidity.value","index":2,"aggr":"avg"}],"values":[{"name":"attrs.temperature.value","index":1,"aggr":"count"}]},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-329"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
ERROR [2021-07-20 15:29:18,506] ({qtp1864350231-173} NotebookServer.java[onMessage]:463) - Can't handle message: {"op":"COMMIT_PARAGRAPH","data":{"id":"paragraph_1626793893404_412426249","paragraph":"%mongodb\ndb.entities.find({\"_id.type\": \"Sensor\"}, {\"attrs.temperature.value\": 1, \"attrs.humidity.value\": 1, \"_id.id\":1}).table()\n","config":{"editorSetting":{"language":"javascript","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/javascript","fontSize":9,"results":{"0":{"graph":{"mode":"lineChart","height":300,"optionOpen":true,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_id.id":"string","attrs.temperature.value":"string","attrs.humidity.value":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"attrs.humidity.value","index":2,"aggr":"avg"}],"groups":[{"name":"_id.id","index":0,"aggr":"sum"}],"values":[{"name":"attrs.temperature.value","index":1,"aggr":"count"}]},"helium":{}}},"enabled":true},"params":{}},"principal":"anonymous","ticket":"anonymous","roles":"[]","msgId":"uehly-330"}
java.lang.IllegalArgumentException: Invalid BSON field name _id.id
	at org.bson.AbstractBsonWriter.writeName(AbstractBsonWriter.java:516)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:188)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:172)
	at org.bson.codecs.DocumentCodec.writeIterable(DocumentCodec.java:197)
	at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:170)
	at org.bson.codecs.DocumentCodec.writeMap(DocumentCodec.java:189)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:131)
	at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:45)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
	at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:85)
	at com.mongodb.connection.UpdateCommandMessage.writeTheWrites(UpdateCommandMessage.java:43)
	at com.mongodb.connection.BaseWriteCommandMessage.encodeMessageBodyWithMetadata(BaseWriteCommandMessage.java:129)
	at com.mongodb.connection.RequestMessage.encodeWithMetadata(RequestMessage.java:160)
	at com.mongodb.connection.WriteCommandProtocol.sendMessage(WriteCommandProtocol.java:220)
	at com.mongodb.connection.WriteCommandProtocol.execute(WriteCommandProtocol.java:101)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:64)
	at com.mongodb.connection.UpdateCommandProtocol.execute(UpdateCommandProtocol.java:37)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:168)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:289)
	at com.mongodb.connection.DefaultServerConnection.updateCommand(DefaultServerConnection.java:143)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$3.executeWriteCommandProtocol(MixedBulkWriteOperation.java:490)
	at com.mongodb.operation.MixedBulkWriteOperation$Run$RunExecutor.execute(MixedBulkWriteOperation.java:656)
	at com.mongodb.operation.MixedBulkWriteOperation$Run.execute(MixedBulkWriteOperation.java:409)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:177)
	at com.mongodb.operation.MixedBulkWriteOperation$1.call(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.OperationHelper.withConnectionSource(OperationHelper.java:422)
	at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:413)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:168)
	at com.mongodb.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:74)
	at com.mongodb.Mongo.execute(Mongo.java:845)
	at com.mongodb.Mongo$2.execute(Mongo.java:828)
	at com.mongodb.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:550)
	at com.mongodb.MongoCollectionImpl.replaceOne(MongoCollectionImpl.java:369)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.saveNote(MongoNotebookRepo.java:215)
	at org.apache.zeppelin.notebook.repo.MongoNotebookRepo.save(MongoNotebookRepo.java:171)
	at org.apache.zeppelin.notebook.repo.NotebookRepoSync.save(NotebookRepoSync.java:214)
	at org.apache.zeppelin.notebook.NoteManager.saveNote(NoteManager.java:182)
	at org.apache.zeppelin.notebook.Notebook.saveNote(Notebook.java:379)
	at org.apache.zeppelin.service.NotebookService.updateParagraph(NotebookService.java:636)
	at org.apache.zeppelin.socket.NotebookServer.updateParagraph(NotebookServer.java:1109)
	at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:353)
	at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)
	at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)
	at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)
	at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)
	at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:326)
	at org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)
	at org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)
	at org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)
	at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)
	at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)
	at org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:459)
	at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:440)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)
	at java.lang.Thread.run(Thread.java:748)
